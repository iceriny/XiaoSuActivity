{"version":3,"file":"XSActivity_dev.js","sources":["../../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../../src/Modules/ModulesDict.ts","../../src/changeLogData.ts","../../src/utils.ts","../../src/Modules/BaseModule.ts","../../src/Modules/MActivity.ts","../../src/Modules/MChatroom.ts","../../src/Modules/MCommand.ts","../../src/Modules/MData.ts","../../src/Modules/MArousal.ts","../../src/Modules/ModuleLoader.ts","../../src/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.1.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const e=\"1.1.0\";function o(e){alert(\"Mod ERROR:\\n\"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&\"object\"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${o}\\nPatch1:\\n${t.get(o)||\"\"}\\nPatch2:\\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(\".\");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const d=o[a[a.length-1]];if(\"function\"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(d.toString().replaceAll(\"\\r\\n\",\"\\n\")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){\"string\"==typeof e&&\"string\"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&\"object\"==typeof e||o(\"Failed to register mod: Expected info object, got \"+typeof e),\"string\"==typeof e.name&&e.name||o(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof e.name);let i=`'${e.name}'`;\"string\"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,\"string\"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&\"string\"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&\"object\"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(d));const s=e=>{\"string\"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);\"number\"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))\"string\"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),\"string\"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>(\"string\"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith(\"1.0.\")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&\"object\"==typeof o&&\"string\"==typeof o.name&&\"string\"==typeof o.version?e.registerMod(o.name,o.version,\"object\"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","import type { BaseModule } from \"./BaseModule\";\n\nexport const modules: { [key: string]: BaseModule } = {};","export enum ChangeType {\n\tmain,\n\tdev\n}\ninterface ChangeLogObj {\n\tversion: string;\n\tdescription: string;\n\ttype: ChangeType;\n\tchanges: string[];\n}\n\nexport let CHANGELOG: ChangeLogObj[] = [\n    {\n        version: \"0.0.1\",\n        description: \"Initial release\",\n        type: ChangeType.dev,\n        changes: [\"完成基本框架测试中...\"]\n    },\n    {\n        version: \"0.0.2\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\",\"添加部分动作\"]\n    },\n    {\n        version: \"0.0.3\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\",\"完善框架\"]\n    },\n    {\n        version: \"0.0.4\",\n        description: \"终于修复了重复加载的Bug\",\n        type: ChangeType.dev,\n        changes: [\"修复重复加载的BUG!!!!!! O.o\", \"修复若干其他bug\",\"完善框架\"]\n    },\n    {\n        version: \"0.0.5\",\n        description: \"优化\",\n        type: ChangeType.dev,\n        changes: [\"优化版本信息显示效果\"]\n    },\n    {\n        version: \"0.1.0\",\n        description: \"正式发布!当前功能如下: \",\n        type: ChangeType.main,\n        changes: [\"使用命令导出当前聊天室聊天记录 支持按时间范围导出 详细请查看 /xsa \",\"添加9个额外动作.\"]\n    },\n    {\n        version: \"0.1.1\",\n        description: \"添加了新的动作.\",\n        type: ChangeType.main,\n        changes: [\"添加了额外的17个动作\",\"添加 /xsa act 命令 显示添加的全部动作\", \"完成功能自动口吃处理命令:(` + message) --请输入 /xsa jieba 查看帮助\"]\n    },\n    {\n        version: \"0.1.2\",\n        description: \"添加修改高潮逻辑.\",\n        type: ChangeType.main,\n        changes: [\"修复一些bug\",\"修复了若干错别字\",\"修改边缘影响，现在每45秒钟 边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间，如果失去边缘状态，则同样的时间后失去一层抵抗难度，并且减少0.3~1.3秒高潮持续时间.\"]\n    },\n    {\n        version: \"0.1.3\",\n        description: \".\",\n        type: ChangeType.dev,\n        changes: []\n    }\n]","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport { modules } from \"Modules/ModulesDict\";\nimport { BaseModule, XS_ModuleName } from \"Modules/BaseModule\";\nimport { CHANGELOG, ChangeType } from \"changeLogData\";\n\n\n// SDK\nexport const bcModSDK = bcModSDKRef.registerMod({\n\tname: \"XiaoSuActivity\",\n\tfullName: \"XiaoSu's Activity Expand\",\n\tversion: XSActivity_VERSION.startsWith(\"v\") ? XSActivity_VERSION.slice(1) : XSActivity_VERSION,\n\trepository: \"https://github.com/iceriny/XiaoSuActivity\"\n});\n\nexport enum ModuleCategory {\n\tCore = -1,\n\tGlobal = 0,\n\tTest = 1\n}\n\n\ntype PatchHook = (args: any[], next: (args: any[]) => any) => any;\nexport function hookFunction(target: string, priority: number, hook: PatchHook): () => void {\n\tconst removeCallback = bcModSDK.hookFunction(target, priority, hook);\n\treturn removeCallback;\n}\n\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n\tbcModSDK.patchFunction(functionName, patches);\n}\n\nexport function SendChat(msg: string) {\n\tServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n}\n/**\n * 发送动作消息\n * @param msg 动作消息的内容\n * @param sourceCharacter 动作的来源 id\n * @param targetCharacter 动作的目标 id\n */\nexport function SendActivity(msg: string, sourceCharacter?: number, targetCharacter?: number) {\n\n\tconst sourceCharacterObj = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter)\n\tconst targetCharacterObj = ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter)\n\tif (sourceCharacterObj === undefined || targetCharacterObj === undefined) return;\n\n\tconst resultDict: ChatMessageDictionary = [\n\t\t{ Tag: \"XSA_ActMessage\", Text: msg.replaceAll(\"{source}\", CharacterNickname(sourceCharacterObj)).replaceAll(\"{target}\", CharacterNickname(targetCharacterObj)) }\n\t]\n\n\tif (sourceCharacter !== undefined) resultDict.push({ SourceCharacter: sourceCharacter });\n\tif (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n\tServerSend(\"ChatRoomChat\", {\n\t\tType: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n\t});\n}\n/* 发送的数据包对象的实例\n{\n    \"Sender\": 150217,\n    \"Content\": \"ChatOther-ItemTorso-Tickle\",\n    \"Type\": \"Activity\",\n    \"Dictionary\": [\n        {\n            \"SourceCharacter\": 150217\n        },\n        {\n            \"TargetCharacter\": 155979\n        },\n        {\n            \"Tag\": \"FocusAssetGroup\",\n            \"FocusGroupName\": \"ItemTorso\"\n        },\n        {\n            \"ActivityName\": \"Tickle\"\n        },\n        {\n            \"Tag\": \"fbc_nonce\",\n            \"Text\": 9\n        }\n    ],\n    \"MBCHC_ID\": 44\n}\n*/\n\n// Utils\ninterface XSDebugMSG {\n\tname: string;\n\ttype: MSGType;\n\tcontent: any;\n}\nexport enum MSGType {\n\tDebugLog,\n\tWorkflow_Log,\n}\nexport function conDebug(msg: XSDebugMSG | string) {\n\tif (DEBUG === false) return;\n\n\tlet result: object = typeof msg === \"string\" ? {\n\t\tname: \"XiaoSuActivity_Debug\",\n\t\ttype: MSGType.DebugLog,\n\t\tcontent: msg,\n\t\ttime: new Date().toLocaleString(),\n\t\tModVersion: XSActivity_VERSION,\n\t} : {\n\t\tname: msg.name,\n\t\ttype: msg.type,\n\t\tcontent: msg.content,\n\t\ttime: new Date().toLocaleString(),\n\t\tModVersion: XSActivity_VERSION\n\t}\n\tconsole.debug(result);\n}\n\nexport function GetModule<T>(moduleName: XS_ModuleName): T {\n\treturn modules[moduleName] as T;\n}\n\n\nfunction removeElementsByTimeRange(element: HTMLElement, time_limit: timeRange) {\n\tconst elements = element.querySelectorAll('[data-time]');\n\n\telements.forEach((element) => {\n\t\tconst dataTimeValue = element.getAttribute('data-time');\n\n\t\tif (dataTimeValue) {\n\t\t\t// 将字符串时间值转换为 Date 对象\n\t\t\tconst currentTime = new Date(`2000-01-01 ${dataTimeValue}`);\n\t\t\tconst minTimeDate = new Date(`2000-01-01 ${time_limit.minTime}`);\n\t\t\tconst maxTimeDate = new Date(`2000-01-01 ${time_limit.maxTime}`);\n\n\t\t\t// 判断是否跨越了 00:00\n\t\t\tif (maxTimeDate < minTimeDate) {\n\t\t\t\tmaxTimeDate.setDate(maxTimeDate.getDate() + 1);\n\t\t\t}\n\n\t\t\t// 判断是否在时间范围内\n\t\t\tif (currentTime < minTimeDate || currentTime > maxTimeDate) {\n\t\t\t\t// 使用 remove 方法\n\t\t\t\telement.remove();\n\n\t\t\t\t// 或者使用 parentNode.removeChild 方法\n\t\t\t\t// element.parentNode.removeChild(element);\n\t\t\t}\n\t\t}\n\t});\n}\n\n\n/**\n * 传入{@link copyAndDownloadHtmlElement}的最小时间值和最大时间值\n */\nexport interface timeRange {\n\tminTime: string;\n\tmaxTime: string;\n}\n\n\n/**\n * 将传入的元素复制并提供下载\n * @param element 需要下载的原始元素\n * @param fileName 下载的文件名字\n * @param time_limit 时间范围\n * @returns void\n */\nexport function copyAndDownloadHtmlElement(element: HTMLElement | null, fileName: string, time_limit: timeRange | null = null) {\n\t// 创建新文档\n\tconst newDoc = document.implementation.createHTMLDocument();\n\n\tif (element === null) {\n\t\tconDebug(\"element is null\");\n\t\treturn;\n\t}\n\n\tfunction clearElementStyle(element: HTMLElement) {\n\t\tconst style = element.style;\n\t\t// 逐个删除属性\n\t\twhile (style.length > 0) {\n\t\t\tstyle.removeProperty(style[0]);\n\t\t}\n\t}\n\n\t// 复制元素\n\tconst copiedElement = element.cloneNode(true) as HTMLElement;\n\n\tif (time_limit !== null) {\n\t\tremoveElementsByTimeRange(copiedElement, time_limit);\n\t}\n\n\tclearElementStyle(copiedElement);\n\n\tcopiedElement.style.fontSize = \"14.784px\";\n\tcopiedElement.style.fontFamily = \"Arial, sans-serif\";\n\tcopiedElement.style.display = \"flex\";\n\tcopiedElement.style.flexDirection = \"column\";\n\tcopiedElement.style.width = \"70vw\";\n\n\tnewDoc.body.style.display = \"flex\";\n\tnewDoc.body.style.alignItems = \"center\";\n\tnewDoc.body.style.justifyContent = \"center\";\n\tnewDoc.body.style.backgroundColor = \"#f2f2f2\";\n\t// 将复制的元素添加到新文档的 body 中\n\tnewDoc.body.appendChild(copiedElement);\n\n\t// 将新文档转换为 HTML 字符串\n\tconst htmlString = newDoc.documentElement.outerHTML;\n\n\t// 创建一个下载链接\n\tconst blob = new Blob([htmlString], { type: 'text/html' });\n\tconst link = document.createElement('a');\n\tlink.href = URL.createObjectURL(blob);\n\tlink.download = fileName;\n\n\t// 触发下载\n\tlink.click();\n}\n\n/**\n * 发送更新信息到本地\n */\nexport function sendChangeLog() {\n\tlet content = '';\n\tfor (const c in CHANGELOG) {\n\t\tconst version = CHANGELOG[c].version;\n\t\tconst type = CHANGELOG[c].type == ChangeType.main ? \"主版本\" : \"开发版本\";\n\t\tconst description = CHANGELOG[c].description;\n\t\tconst changes = CHANGELOG[c].changes;\n\n\t\tlet changesString = '<ul style=\"list-style-position: inside;  padding-left: 0;\">';\n\t\tfor (const s of changes) {\n\t\t\tchangesString += `<li>${s}</li>`;\n\t\t}\n\t\tchangesString += '</ul>';\n\n\t\tconst backgroundColor = version == XSActivity_VERSION && (!DEBUG && type === \"主版本\") ? \"#764460\" : \"#442E3A\"\n\t\tconst styleForP = 'style=\"font-weight: bold; margin: 0;\"'\n\t\tcontent += `<div style=\"background-color: ${backgroundColor}; display: flex; flex-direction: column;\"> <p ${styleForP}>版本: ${version}</p> <p ${styleForP}>类型: ${type}</p> <p ${styleForP}>描述: ${description}</p><p>----</p> <p ${styleForP}>改动: ${changesString}</p><p>========</p></div>`\n\t}\n\tcontent += \"<p>==当前页面显示时间1分钟==</p>\"\n\tChatRoomSendLocal(content, 60000);\n}\n\n\nexport function segmentForCH(str: string): string[] | null {\n\tconDebug({\n\t\tname: \"segmentForCHTest\",\n\t\ttype: MSGType.DebugLog,\n\t\tcontent: {\n\t\t\tIntl: window.Intl ? true : false,\n\t\t\tSegmenter: window.Intl.Segmenter ? true : false,\n\t\t\tGAME_LANG: TranslationLanguage.toLowerCase()\n\t\t}\n\t})\n\t// 检查浏览器是否支持 Intl.Segmenter\n\tif (window.Intl && window.Intl.Segmenter && TranslationLanguage.toLowerCase() === \"cn\") {\n\t\tconst segmenter = new Intl.Segmenter('zh', { granularity: 'word' }); // 创建分词器实例\n\t\tconst segmenterResult = segmenter.segment(str); // 对文本进行分词\n\t\tconst results: string[] = []\n\t\tfor (const segment of segmenterResult) {\n\t\t\tresults.push(segment.segment);\n\t\t}\n\n\t\tconDebug(`segmentForCH: ${results}`)\n\t\treturn results;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport function isDivisible(num: number, divisor: number): boolean {\n\treturn num % divisor === 0;\n}","\nexport type XS_ModuleName =\"Base\" | \"ActivityModule\" | \"ChatroomModule\" | \"CommandsModule\" | \"DataModule\" | \"ArousalModule\";\nexport const FullModCount = 5;\n\nexport abstract class BaseModule {\n    moduleName: XS_ModuleName = \"Base\";\n    priority: number = 0;\n    Loaded: Boolean = false;\n\n    constructor() {\n        this.init();\n    }\n\n    public abstract init(): void\n    public abstract Load(): void\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction, MSGType, SendActivity } from \"utils\";\n\n/*\n * 动作的限定条件信息对象\n*/\ninterface prerequisite {\n    Name: ActivityPrerequisiteXiaoSu;\n    Action: (args: any) => boolean;\n}\n\nconst selfPlaceholder = \"SourceCharacter\";\nconst targetPlaceholder = \"TargetCharacter\";\nexport class ActivityModule extends BaseModule {\n\n\n    public init(): void {\n        this.moduleName = \"ActivityModule\";\n        this.priority = 50;\n    }\n    public Load(): void {\n        this.LoadActivity();\n        this.hookListHandler();\n        this.Loaded = true;\n    }\n\n    // hook:\n\n\n\n    hookListHandler(): void {\n        /**\n         * 处理没有装本插件的玩家接受到的消息\n         * 原理为使用hookFunction来拦截ServerSend函数的执行,并判断消息中是否包含自定义活动的关键词,如果包含则执行自定义操作\n         * - 即替换原本的描述\n         */\n        hookFunction(\"ServerSend\", 5, (args, next) => { // ServerSend 只能检测自己发出的聊天信息 可以用来替换自己发出去的文字\n            if (args[0] == \"ChatRoomChat\" && args[1]?.Type == \"Activity\") {\n                let data = args[1];\n                let actName = data.Dictionary[3]?.ActivityName ?? \"\";\n                if (actName.indexOf(\"XSAct_\") == 0) { // 这个条件表示只有当消息中包含以 \"XSAct_\" 开头的自定义活动时,才会执行下面的操作\n                    // 拦截自定义活动的发送并执行自定义操作\n                    let { metadata, substitutions } = ChatRoomMessageRunExtractors(data, Player)\n                    let msg = ActivityDictionaryText(data.Content);\n                    msg = CommonStringSubstitute(msg, substitutions ?? [])\n                    data.Dictionary.push({\n                        Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD \" + data.Content,\n                        Text: msg\n                    });\n                }\n            }\n            return next(args);\n        });\n\n        /**\n         * 1. 当条件关键词为自定义关键词时\n         * - 处理限制条件\n         * 2. 当关键词不是自定义关键词时\n         * - 执行原方法\n         */\n        hookFunction(\"ActivityCheckPrerequisite\", 500, (args, next) => {\n            // conDebug({\n            //     name: \"ActivityCheckPrerequisite\",\n            //     type: MSGType.DebugLog,\n            //     content: args\n            // });\n            const prereq = args[0];\n            if (prereq in this.prerequisiteDict) {\n                const customPrereq = this.prerequisiteDict[prereq as ActivityPrerequisiteXiaoSu];\n                return customPrereq.Action(args);\n            } else {\n                return next(args);\n            }\n        });\n\n        /**\n         * args[0]: \"Assets/Female3DCG/Activity/XSAct_XXX.png\"\n         */\n        hookFunction(\"DrawImageResize\", 10, (args, next) => {\n            const source = args[0];\n\n            // 使用 split 方法拆分字符串\n            const parts = source.split('/');\n            const fileName = parts[parts.length - 1];  // 获取文件名部分，即 \"XSAct_XXX.png\"\n\n            // 进一步处理文件名，去掉 \".png\" 后缀\n            const aName = fileName.replace('.png', '');\n\n            if (aName.indexOf(\"XSAct_\") == 0) {\n                const resultName = `Assets/Female3DCG/Activity/${this.activityToAddDict[aName as ActivityNameXiaoSu].img}.png`;\n                args[0] = resultName;\n                return next(args);\n            }\n            return next(args);\n        });\n\n\n\n        hookFunction(\"ChatRoomMessage\", this.priority, (args, next) => {\n            const data = args[0];\n            conDebug({\n                name: \"ChatRoomMessage\",\n                type: MSGType.DebugLog,\n                content: data\n            });\n            if (data.Type == \"Activity\"){\n                const actName = data.Dictionary[3]?.ActivityName as string;\n                const TargetCharacter = data.Dictionary[1]?.TargetCharacter as number;\n                if (actName == \"Tickle\" && Number.isNaN(TargetCharacter) && TargetCharacter == Player?.MemberNumber){// 瘙痒动作且目标为自己\n                    conDebug({\n                        type: MSGType.DebugLog,\n                        name: \"检测到自己为目标的瘙痒动作\",\n                        content: {\n                            高潮阶段:Player.ArousalSettings?.OrgasmStage,\n                            抵抗难度:ActivityOrgasmGameResistCount\n                        }\n                    });\n                    if (Player.ArousalSettings?.OrgasmStage == 1){// 如果当前正在抵抗则添加难度并重新开始抵抗游戏\n                        conDebug({\n                            type: MSGType.DebugLog,\n                            name: \"捕捉到抵抗场景，开始截断抵抗 增加难度 并重新触发\",\n                            content: {\n                                高潮阶段:Player.ArousalSettings?.OrgasmStage,\n                                抵抗难度:ActivityOrgasmGameResistCount\n                            }\n                        });\n                        ActivityOrgasmGameResistCount++;\n                        SendActivity(`{target}紧闭双眼尽力抵抗着高潮，但被{source}的瘙痒干扰，从嘴巴里泄露出一声压抑的呻吟，差点没有忍住.`)\n                        ActivityOrgasmStop(Player, 99.8);\n                        ActivityOrgasmStart(Player);\n                    }\n                }\n            }\n                return next(args);\n        });\n    }\n\n    //============================================================\n\n    /**\n     * 载入自定义动作\n     */\n    LoadActivity(): void {\n        conDebug(\"加载自定义活动\");\n        let actLength = 0;\n        for (const aN in this.activityToAddDict) { // a 为活动名\n            // conDebug({\n            //     type: MSGType.DebugLog,\n            //     name: \"加载动作:\",\n            //     content: aN\n            // });\n            this.pushToActivity(this.activityToAddDict[aN as ActivityNameXiaoSu].act);\n\n            this.activityDictAdd();\n\n            //加载文字描述\n            const activityDesc = this.activityToAddDict[aN as ActivityNameXiaoSu].desc;\n\n            // const Loaded_XSA_ActivityDictionary_Index0 = ActivityDictionary\n            //     ?.filter(d => d[0].includes(aN))\n            //     .map(d => d[0]);\n\n            activityDesc?.forEach((d) => {\n                // if (typeof Loaded_XSA_ActivityDictionary_Index0 !== \"undefined\" && !(d[0] in Loaded_XSA_ActivityDictionary_Index0)) ActivityDictionary?.push(d);\n                ActivityDictionary?.push(d);\n            });\n            actLength += 1;\n        }\n        conDebug(`自定义活动加载完成.动作数: ${actLength}`)\n    }\n    //============================================================\n    /**\n     * 初始化活动的文字描述。\n     */\n    activityDictAdd() {\n\n        for (const a in this.activityToAddDict) {\n            const pendingActivity = this.activityToAddDict[a as ActivityNameXiaoSu];\n\n            const actName = pendingActivity.act.Name;\n            const nameWithoutPrefix = actName.substring(6);\n            const actTarget = pendingActivity.act.Target;\n            const actTargetSelf = pendingActivity.act.TargetSelf;\n\n            const addedValues: string[][] = [];\n\n            addedValues.push([`ActivityAct_${actName}`, `${nameWithoutPrefix}`]);\n            addedValues.push([`Activity${actName}`, `${nameWithoutPrefix}`]);\n            if (actTarget.length > 0) {\n                for (const aT of actTarget) {\n                    addedValues.push([`Label-ChatOther-${aT}-${actName}`, `${nameWithoutPrefix}`]);\n                    addedValues.push([`ChatOther-${aT}-${actName}`, pendingActivity.descString[0]]);\n                }\n            }\n            if (typeof actTargetSelf !== 'undefined' && typeof actTargetSelf !== 'boolean' && actTargetSelf.length > 0) {\n                for (const aTS of actTargetSelf) {\n                    addedValues.push([`Label-ChatSelf-${aTS}-${actName}`, `${nameWithoutPrefix}`]);\n                    addedValues.push([`ChatSelf-${aTS}-${actName}`, pendingActivity.descString[1]]);\n                }\n            }\n\n            pendingActivity.desc = addedValues;\n        }\n    }\n    /**\n     * 将传入的活动对象载入\n     * @param activity 将要载入的活动对象\n     */\n    private pushToActivity(activity: Activity) {\n        //if (ActivityFemale3DCG.indexOf(activity) && ActivityFemale3DCGOrdering.indexOf(activity.Name)) {\n        ActivityFemale3DCG.push(activity);\n        ActivityFemale3DCGOrdering.push(activity.Name);\n        //}\n    }\n\n    //============================================================\n\n    //     ActivityNameXiaosu_onlyName =\n    //     \"眯眼\" | \"眼神飘忽\" | \"甩头发\" | \"轻抚发梢\" | \"叼起头发\" | \"嗅头发\" |  \"绕头发\" | \"大力甩头发\" | \"抿住嘴巴\" | \"恳求的看\" | \"恳求的摇头\"\n    //   | \"皱鼻子\" | \"打喷嚏\" | \"深呼吸\" \n    //   | \"低头\" | \"挺胸收腹\" | \"站直身体\" | \"坐直身体\" | \"身体一颤\"\n    //   | \"活动手臂\" | \"活动大腿\" | \"绷紧膝盖\" | \"内八夹腿\"\n    //   | \"蜷缩脚趾\" | \"绷直脚踝\" | \"踮脚\"\n    // ;\n    // SourceCharacter 为动作发起人  TargetCharacter 为动作目标人\n    /**\n     * 将要添加的动作字典\n     * @interface Activity - Activity对象的属性如下定义:\n     * @param  Name - 活动的名称\n     * @param  MaxProgress - 活动的最大进度\n     * @param  MaxProgressSelf - 活动自身的最大进度\n     * @param  Prerequisite - 活动的前置条件\n     * @param  Target - 活动的目标\n     * @param  TargetSelf - 活动的自身目标\n     * @param  Reverse - 是否反转前置条件的判断\n     * @param  MakeSound - 是否播放声音 used for setting {@link ExtendedItemAutoPunishHandled} \n     * @param  StimulationAction - 当使用该活动时触发的动作\n     * @param  ActivityExpression - 活动表达式,包含一系列的动作 该活动的默认表达式。可以使用资产上的ActivityExpression进行覆盖。\n     * -------\n     * @desc - desc默认需要为null,当活动初始化时,会自动添加文字描述\n     * @descString - 两个元素的数组 [0]为如果目标为他人的描述，[1]为目标自己的描述\n    */\n    activityToAddDict: { [ActivityIndex in ActivityNameXiaoSu]: { act: Activity, desc: null | string[][], descString: [string, string], img: ActivityName } } = {\n        XSAct_眯眼: {\n            act: {\n                Name: \"XSAct_眯眼\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}眯了眯眼.`],\n            img: \"RestHead\"\n        },\n        XSAct_眼神飘忽: {\n            act: {\n                Name: \"XSAct_眼神飘忽\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}眼神飘忽的左看右看.`],\n            img: \"RestHead\"\n        },\n        XSAct_甩头发: {\n            act: {\n                Name: \"XSAct_甩头发\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}甩动着头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_大力甩头发: {\n            act: {\n                Name: \"XSAct_大力甩头发\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}连连摇头，慌乱的甩动着头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_轻抚发梢: {\n            act: {\n                Name: \"XSAct_轻抚发梢\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"CantUseArms\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}轻柔抚动着${targetPlaceholder}的头发.`, `${selfPlaceholder}轻柔抚动着自己的头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_叼起头发: {\n            act: {\n                Name: \"XSAct_叼起头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 50,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}轻轻咬起${targetPlaceholder}的头发.`, `${selfPlaceholder}轻轻咬起自己的头发.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_嗅头发: {\n            act: {\n                Name: \"XSAct_嗅头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\"],//\"ItemNoseCovered\"\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}在${targetPlaceholder}的发间嗅着，鼻息弥漫着${targetPlaceholder}的发香.`, `${selfPlaceholder}撩起自己的头发轻轻嗅着.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_绕头发: {\n            act: {\n                Name: \"XSAct_绕头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"CantUseArms\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}勾起一缕${targetPlaceholder}的发丝，在指尖绕来绕去.`, `${selfPlaceholder}勾起自己的一缕头发在指尖绕来绕去.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_皱鼻子: {\n            act: {\n                Name: \"XSAct_皱鼻子\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]// , \"ItemNoseCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}皱了皱自己的鼻头.`],\n            img: \"RestHead\"\n        },\n        XSAct_打喷嚏: {\n            act: {\n                Name: \"XSAct_打喷嚏\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}打了个喷嚏.`],\n            img: \"Kiss\"\n        },\n        XSAct_深呼吸: {\n            act: {\n                Name: \"XSAct_深呼吸\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\"],////////////////////////////\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}深深的吸了口气.`],\n            img: \"Kiss\"\n        },\n        XSAct_低头: {\n            act: {\n                Name: \"XSAct_低头\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"MoveHead\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}红润着脸蛋低头逃避.`],\n            img: \"RestHead\"\n        },\n        XSAct_恳求的摇头: {\n            act: {\n                Name: \"XSAct_恳求的摇头\",\n                Target: [\"ItemHead\"],\n                TargetSelf: [\"\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"MoveHead\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}对着${targetPlaceholder}的方向恳求的摇头.`, ``],\n            img: \"RestHead\"\n        },\n        XSAct_恳求的看: {\n            act: {\n                Name: \"XSAct_恳求的看\",\n                Target: [\"ItemHead\"],\n                TargetSelf: [\"\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"TargetZoneNaked\", \"MoveHead\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}汪着眼睛恳求的看着${targetPlaceholder}.`, \"\"],\n            img: \"RestHead\"\n        },\n        XSAct_内八夹腿: {\n            act: {\n                Name: \"XSAct_内八夹腿\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}通红的脸蛋忍耐着快感，大腿紧紧夹起来，摆出着内八的姿势，身体微微颤抖.`],\n            img: \"Kick\"\n        },\n        XSAct_噘嘴: {\n            act: {\n                Name: \"XSAct_噘嘴\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}有些不满的噘起嘴巴.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_抿住嘴巴: {\n            act: {\n                Name: \"XSAct_抿住嘴巴\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}抿住嘴巴.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_瘪嘴: {\n            act: {\n                Name: \"XSAct_瘪嘴\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}瘪着嘴巴，一副委屈的样子.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_坐直身体: {\n            act: {\n                Name: \"XSAct_坐直身体\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺直了腰，坐直了身体.`],\n            img: \"Kick\"\n        },\n        XSAct_挺胸收腹: {\n            act: {\n                Name: \"XSAct_挺胸收腹\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBreast\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺起胸部，微收下巴，腹部用力收腰.`],\n            img: \"Kick\"\n        },\n        XSAct_站直身体: {\n            act: {\n                Name: \"XSAct_站直身体\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"NotKneeling\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺胸收腹，努力绷紧小腿，站直了身体.`],\n            img: \"Kick\"\n        },\n        XSAct_身体一颤: {\n            act: {\n                Name: \"XSAct_身体一颤\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}的身体猛然颤抖了一下.`],\n            img: \"Kick\"\n        },\n        XSAct_活动大腿: {\n            act: {\n                Name: \"XSAct_活动大腿\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}尝试活动了一下腿部.`],\n            img: \"Kick\"\n        },\n        XSAct_活动手臂: {\n            act: {\n                Name: \"XSAct_活动手臂\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemArms\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"CantUseArms\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}一边按摩一边活动着手臂.`],\n            img: \"MasturbateHand\"\n        },\n        XSAct_绷紧膝盖: {\n            act: {\n                Name: \"XSAct_绷紧膝盖\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"NotKneeling\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}努力的绷紧膝盖，尽可能站的更直.`],\n            img: \"Kick\"\n        },\n        XSAct_绷直脚踝: {\n            act: {\n                Name: \"XSAct_绷直脚踝\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}不自觉的用力绷直脚踝，释放涌来的快感.`],\n            img: \"Kick\"\n        },\n        XSAct_蜷缩脚趾: {\n            act: {\n                Name: \"XSAct_蜷缩脚趾\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}脚趾互相纠结，又时而蜷缩，忍耐着快感袭来.`],\n            img: \"Kick\"\n        },\n        XSAct_踮脚: {\n            act: {\n                Name: \"XSAct_踮脚\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"CantUseFeet\"],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}努力的踮起脚.`],\n            img: \"Kick\"\n        }\n\n    }\n\n    /**\n     * 前置条件字典\n     * @PrerequisiteName - 需要是在{@link ActivityPrerequisiteXiaoSu}的字符串\n     * @Name - 需要是在{@link ActivityPrerequisiteXiaoSu}的字符串\n     * @Action - 检测判断的具体动作\n     * - @param args - 一个数组,包含四个元素.\n     * - args[0]为@param prereq:{@link ActivityPrerequisite} 判定决定使用哪个条件的依据，但此处无用 请不要在这里使用该参数\n     * - args[1]为@param acting:{@link Character} | {@link PlayerCharacter} 代表动作发起者的数据\n     * - args[2]为@param acted:{@link Character} | {@link PlayerCharacter} 代表动作目标的数据\n     * - args[3]为@param group:{@link AssetGroup}.\n     */\n    prerequisiteDict: { [PrerequisiteName in ActivityPrerequisiteXiaoSu]: prerequisite } = {\n        ItemHoodCovered: { //头部面罩位置是否覆盖\n            Name: \"ItemHoodCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                const acting = args[1] as Character | PlayerCharacter;\n                //const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemHoodCovered(acting);\n            }\n        },\n        TargetItemHoodCovered: { //目标的头部面罩位置是否覆盖\n            Name: \"TargetItemHoodCovered\",\n            Action: (args) => {\n                const acted = args[2] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemHoodCovered(acted);\n            }\n        },\n        ItemNoseCovered: { //头部鼻子位置是否覆盖\n            Name: \"ItemNoseCovered\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemNoseCovered(acting);\n            }\n        },\n        Kneeling: {\n            Name: \"Kneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.Kneeling(acting);\n            }\n        },\n        NotKneeling: {\n            Name: \"NotKneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.NotKneeling(acting);\n            }\n        }\n    }\n    /**\n     * 判断函数字典\n     * 前置条件字典将要调用的方法集合\n    */\n    Judgment: { [judgmentName: string]: (acting: Character | PlayerCharacter, acted?: Character | PlayerCharacter, group?: AssetGroup) => boolean } = {\n        ItemHoodCovered: (acting: Character | PlayerCharacter): boolean => { // 头部面罩位置是否覆盖\n            return InventoryPrerequisiteMessage(acting, \"HoodEmpty\") === \"\";\n        },\n        ItemNoseCovered: (acting: Character | PlayerCharacter): boolean => { // 鼻子位置是否覆盖 // 暂时无效 回头修复\n            return InventoryGroupIsBlocked(acting, \"NoseEmpty\", true);\n        },\n        Kneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return (acting as PlayerCharacter).IsKneeling();\n        },\n        NotKneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return !(acting as PlayerCharacter).IsKneeling();\n        }\n\n    }\n\n\n    public getAllAct(): ActivityNameXiaosu_onlyName[] {\n        const result: ActivityNameXiaosu_onlyName[] = []\n        for (const a in this.activityToAddDict) {\n            const suffix = a.substring(6) as ActivityNameXiaosu_onlyName; // 从索引为 6 的位置开始截取到字符串末尾\n            result.push(suffix); // 输出：XXXX\n        }\n        conDebug({\n            content: result,\n            name: \"ActivityNameXiaosu_onlyName\",\n            type: MSGType.DebugLog\n        });\n        return result;\n    }\n}\n","import { conDebug, hookFunction, segmentForCH, MSGType, copyAndDownloadHtmlElement, timeRange } from \"utils\";\nimport { BaseModule } from \"Modules/BaseModule\";\n\nexport class ChatroomModule extends BaseModule {\n\n    public Load(): void {\n        this.hookListHandler();\n\n        this.Loaded = true;\n    }\n    public init(): void {\n        this.moduleName = \"ChatroomModule\";\n        this.priority = 30;\n    }\n\n    hookListHandler(): void {\n        // hookFunction(\"ChatRoomSync\", 30, (args, next) => {\n        //     conDebug({\n        //         name: 'ChatRoomSyncTest',\n        //         type: MSGType.DebugLog, \n        //         content: args\n        //     });\n        //     // SendChat(\"我是! 小酥的小白鼠! 吱吱吱吱~~~\");\n        //     return next(args);\n        // });\n\n        hookFunction(\"CommandParse\", 0,\n            (args, next) => {\n                let msg : string = args[0];\n                // 匹配`开头的命令\n                const match = msg.match(/^`([1-9])?( )? (.*)/);\n                if (match) msg = this.stammerHandler(match[3], parseInt(match[1]), match[2] ? false : true);\n\n                args[0] = msg;\n                return next(args);\n            });\n        // hookFunction(\"ServerSend\", 0,\n        //     (args, next) => {\n        //         conDebug({\n        //             name: 'ServerSendTest',\n        //             type: MSGType.DebugLog,\n        //             content: args\n        //         });\n        //         return next(args);\n        //     });\n    }\n\n\n    ExportChat(time_limit: timeRange | null = null): void {\n        const exportName: string | undefined = `${ChatRoomData?.Name}_${new Date().toLocaleString()}`;\n\n        const mainElement: HTMLElement | null = document.getElementById('TextAreaChatLog')\n\n        copyAndDownloadHtmlElement(mainElement, exportName, time_limit)\n    }\n\n\n    stammerHandler(content: string, tenfoldStammeringProbability: number, isSegmentForCH: boolean): string {\n        conDebug(`stammerHandler: content: ${content} tenfoldStammeringProbability: ${tenfoldStammeringProbability}`)\n\n        // 处理结巴程度，默认结巴程度为5\n        if (Number.isNaN(tenfoldStammeringProbability)) tenfoldStammeringProbability = 3;\n        const stammeringProbability = tenfoldStammeringProbability / 10;\n\n        // 使用segmentForCH进行分词，传入参数取消掉空白字符\n        const segmentList = isSegmentForCH ? segmentForCH(content.replace(/\\s/g, \"\")) : undefined;\n\n        // 如果segmentForCH没有返回内容，则使用源字符串通过空格分词\n        const stringArray: string[] = segmentList ? segmentList : content.split(' ');\n\n        return this.stammerForList(stringArray, stammeringProbability);\n    }\n    /**\n     * 根据空格 自动处理结巴效果\n     * @param message 传入的信息\n     * @returns 处理后的文本\n     */\n    stammerForList(messageList: string[], stammeringProbability: number): string {\n        //const stringArray: string[] = message.split(' ');\n        let result = '';\n\n        // 遍历单词数组\n        for (let i = 0; i < messageList.length; i++) {\n            // 将当前单词加入结果字符串\n            const currentWord: string = messageList[i];\n            result += currentWord;\n\n            // 随机决定是否添加结巴效果\n            if (Math.random() < stammeringProbability) { // 假设添加结巴效果的概率为50%\n                result += this.addStammerEffect(currentWord);\n            }\n\n            // 添加-分隔符，最后一个单词后添加 「 ... 」\n            if (i < messageList.length - 1) {\n                if (Math.random() < stammeringProbability)\n                result += '-';\n            } else {\n                result += '...';\n            }\n        }\n\n        // 调试日志输出处理后的结果\n        conDebug({\n            name: 'stammer',\n            type: MSGType.DebugLog,\n            content: result\n        });\n\n        return result;\n    }\n    // 添加结巴效果的辅助方法\n    private addStammerEffect(word: string, depth: number = 0): string {\n        // 设置最大递归深度\n        const maxDepth = 3;\n        // 如果递归深度达到最大值，返回原单词\n        if (depth >= maxDepth) {\n            return word;\n        }\n        // 在这里实现添加结巴效果的逻辑，可以是随机的字符、重复的部分、乱序等等\n        const randomNumber: number = Math.random();\n        let result: string = randomNumber < 0.5 ? '...' : `-${word}`;\n\n        if (Math.random() < 0.2) {\n            result = this.addStammerEffect(result, depth + 1);\n        }\n        return result;\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, MSGType, GetModule, timeRange, sendChangeLog } from \"utils\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { ActivityModule } from \"./MActivity\";\n\nconst timeRangeRegex: RegExp = /^(((0|1)\\d|2[0-3]):[0-5]\\d)-(((0|1)\\d|2[0-3]):[0-5]\\d)$/;\n\nexport class CommandsModule extends BaseModule {\n\n    commandsDict: { [CommandName: string]: ICommand } = {\n        help: {\n            Tag: \"help\",\n            Description: \"显示 [小酥的活动模组] 的相关命令.\",\n            Action: (args, msg, parsed) => {\n                this.DisplayHelp();\n            }\n        },\n        export: {\n            Tag: \"export\",\n            Description: \"导出当前聊天室的聊天记录. 输入: ‘/xsa export -h’ 显示导出命令的使用方法.\",\n            Action: (args, msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params == 'h') {\n                    ChatRoomSendLocal('输入: ‘/xsa export -[时间]’导出指定时间范围内的聊天记录.\\n例如: ‘/xsa export -05:34-20:40’\\n默认导出当前聊天室的全部聊天记录.\\n注意! \\n如果时间段过长例如第一天的05:34到第二天的06:00则可能出现导出错误.', 20000)\n                } else if (params === '') {\n                    // 导出当前聊天室的全部聊天记录\n                    conDebug(\"导出当前聊天室的全部聊天记录\");\n                    GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat();\n                }\n                else if (timeRangeRegex.test(params)) {\n                    // 导出指定时间段的聊天记录 \n                    conDebug(`导出指定的 ${params} 时间段的聊天记录`);\n                    const separatorIndex = params.indexOf('-');\n\n                    if (separatorIndex !== -1) {\n                        const startTime = params.slice(0, separatorIndex).trim();\n                        const endTime = params.slice(separatorIndex + 1).trim();\n\n                        const time_limit: timeRange = {\n                            minTime: startTime,\n                            maxTime: endTime\n                        };\n                        GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat(time_limit);\n                    }\n                }\n\n            }\n        },\n        v: {\n            Tag: \"v\",\n            Description: \"显示 [小酥的活动模组] 的版本信息.\",\n            Action: (args, msg, parsed) => {\n                sendChangeLog();\n            }\n        },\n        act: {\n            Tag: \"act\",\n            Description: \"显示 [小酥的活动模组] 所添加的全部动作列表.\",\n            Action: (args, msg, parsed) => {\n                let content = ''\n                GetModule<ActivityModule>(\"ActivityModule\").getAllAct().forEach((item) => {\n                    content += `<p style=\"font-weight: bold; margin: 0;\">${item}</p>`\n                })\n                conDebug(`command: AL    content: ${content}`)\n\n                ChatRoomSendLocal(content, 20000)\n            }\n        },\n        jieba: {\n            Tag: \"jieba\",\n            Description: \"显示 自动结巴效果 的命令帮助.\",\n            Action: (args, msg, parsed) => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em 0;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #AB899C;background-color: #AB6B8E;border-radius: 3px;padding: .2em 0;'\"\n                ChatRoomSendLocal(`输入: <span ${stressStyle}>\\`</span><span ${stressStyle}>空格</span><span ${weakStyle}>空格</span> 开头的话将以口吃结巴的形式发出.\\n结巴生效位置有两种方式: 如果键入两个<span ${stressStyle}>空格</span> 将会在空格位置概率产生结巴效果.\\n如果键入一个<span ${stressStyle}>空格</span>将会使用分词系统进行结巴效果.\\n该命令有一个可选参数:\\n如果以<span ${stressStyle}>\\`</span><span ${stressStyle}>[1-9]</span> 的形式作为开头，数字代表结巴程度，默认为3，越高将越口吃.\\n不带结巴程度参数的例子:\\n<span ${stressStyle}>\\`</span> [要说 的 话]\\n处理之后的效果就可能是:  「 要说...-的-的话... 」=>注意空格的位置.\\n带参数的命令方法:\\n<span ${stressStyle}>\\`</span>3 [要说 的 话]\\n此处的3就是结巴等级，代表着每处句子中的空格位置的词段都将有30%的概率发生结巴.上面的话就意味着发生了3等级的结巴效果.\\n如果有两个空格: <span ${stressStyle}>\\`</span>  [要说的话]`)\n            }\n        },\n        edge: {\n            Tag: \"edge\",\n            Description: \"显示 关于边缘机制的修改内容帮助.\",\n            Action: (args, msg, parsed) => {\n                ChatRoomSendLocal(`模组修改了的边缘机制:\\n每持续45秒钟边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间.\\n 如果失去边缘状态，将每45秒钟降低一层高潮抵抗难度，并且减少0.3~1.3秒的即将到来的高潮的持续时间-最少高潮持续时间范围4~7秒.\\n\\n`)\n            }\n        }\n    }\n\n    public Load(): void {\n        CommandCombine(\n            {\n                Tag: \"xsa\",\n                Description: \"显示 [小酥的活动模组] 的相关命令.\",\n                Action: (args, msg, parsed) => {\n                    if (parsed.length > 0) this.CommandHandler(parsed);\n                    else this.DisplayHelp();\n                }\n            }\n        )\n\n        this.Loaded = true;\n    }\n    public init(): void {\n        this.moduleName = \"CommandsModule\";\n        this.priority = 20;\n    }\n\n\n    private getCommandParameters(parsed: string[]): string {\n        // if (parsed.length === 0) {\n        //     return '';\n        // }\n        const lastParam = parsed[parsed.length - 1];\n        if (lastParam.startsWith(\"-\")) {\n            return lastParam.slice(1);\n        }\n        return '';\n    }\n\n    private DisplayHelp(msg: string | undefined = undefined): void {\n        if (msg === undefined) {\n            let content: string = ``;\n            for (const c in this.commandsDict) {\n                content += `/xsa ${c} ${this.commandsDict[c].Description}\\n`;\n            }\n            content += `小酥的活动模组 版本号: ${XSActivity_VERSION}\\n`\n            ChatRoomSendLocal(content, 10000);\n        } else {\n            ChatRoomSendLocal(msg, 10000)\n        }\n    }\n\n    private CommandHandler(parsed: Array<string>): void {\n        const parsedCount: number = parsed.length;\n        if (parsedCount == 0) this.DisplayHelp();\n        if (parsedCount >= 1) {\n            const last = parsed[parsedCount - 1];\n            if (last.startsWith(\"-\")) {\n                const cmd: string = parsed[parsedCount - 2];\n                if (cmd in this.commandsDict) {\n                    this.commandsDict[cmd]?.Action?.('', '', parsed);\n                }\n            } else {\n                if (last in this.commandsDict) {\n                    this.commandsDict[last]?.Action?.('', '', parsed);\n                }\n            }\n        }\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug } from \"utils\";\n\nexport class DataModule extends BaseModule{\n\n    // 获取用户代理字符串\n    static userAgentString = navigator.userAgent;\n    // 创建正则表达式，匹配常见的浏览器版本信息\n    static browserVersionRegex = /(chrome|firefox|safari|opera|edge|msie|trident(?=\\/))\\/?\\s*(\\d+)/i;\n    // 使用正则表达式匹配浏览器版本信息\n    static match = this.userAgentString.match(this.browserVersionRegex);\n\n    /**\n     * 浏览器名称\n     */\n    static browserName = this.match ? this.match[1] : 'unknown';\n    /**\n     * 浏览器版本\n     */\n    static browserVersion = this.match ? parseInt(this.match[2]) : -1;\n\n    public Load(): void {\n\n        this.Loaded = true;\n    }\n    public init(): void {\n        this.moduleName = \"DataModule\";\n        this.priority = 0;\n\n        window.BROWSER_NAME = DataModule.browserName;\n        window.BROWSER_VERSION = DataModule.browserVersion;\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction, MSGType, patchFunction, isDivisible } from \"utils\";\n\n\nexport class ArousalModule extends BaseModule {\n    public init(): void {\n        this.moduleName = \"ArousalModule\";\n        this.priority = 60;\n    }\n\n    public Load(): void {\n        window.EdgeCount = 0;\n        this.hookListHandler();\n        this.patchListHandler();\n\n        this.Loaded = true;\n    }\n\n    EdgeTimerLastCycleCall: number = 0;\n\n\n\n    hookListHandler(): void {\n        // 处理边缘计数计算 并且每45秒 增加一层 抵抗高潮难度\n        hookFunction(\"TimerProcess\", this.priority, (args, next) => {\n            const currentTime = CommonTime();\n\n            if (this.EdgeTimerLastCycleCall == 0) {\n                this.EdgeTimerLastCycleCall = currentTime;// 初始化计时器\n            }\n            if (window.EdgeCount !== undefined && this.EdgeTimerLastCycleCall + 45000 <= currentTime && Player.ArousalSettings?.Progress !== undefined) {\n                if (Player.ArousalSettings.Progress >= 93) {\n                    window.EdgeCount++;\n                    ActivityOrgasmGameResistCount++;\n                    this.EdgeTimerLastCycleCall = currentTime;\n                } else {\n                    if (window.EdgeCount >= 1) window.EdgeCount--;\n                    if (ActivityOrgasmGameResistCount >= 1) ActivityOrgasmGameResistCount--;\n                    this.EdgeTimerLastCycleCall = 0;// 重置计时器\n                }\n            }\n\n            return next(args);\n        });\n    }\n\n    patchListHandler(): void {\n        // 处理OrgasmStart\n        patchFunction(\"ActivityOrgasmStart\",\n            {// XSA补丁处理~ 基础高潮时间为 4~7秒, 每边缘45秒钟增加随机的 300ms ~ 1300ms 的高潮时间。 最多增加 20000ms，也就是最长高潮时间为 27 秒\n                \"C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\":\n                `if (window.EdgeCount === undefined) {\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\n            } else {\n                const addedTime = (Math.random() + 0.3) * 1000 * window.EdgeCount;\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (addedTime > 20000 ? 20000 : addedTime) + 4000 + (3000 * Math.random());\n            }`\n            });\n\n    }\n}\n\n","import { conDebug } from \"utils\";\nimport { BaseModule, FullModCount, XS_ModuleName } from \"./BaseModule\";\nimport { ActivityModule } from \"./MActivity\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { CommandsModule } from \"./MCommand\";\nimport { DataModule } from \"./MData\";\nimport { ArousalModule } from \"./MArousal\";\nimport { modules } from \"./ModulesDict\";\n\nexport class ModuleLoader {\n    public static modules: { [key: string]: BaseModule } = modules;\n    static mList: [BaseModule] | undefined;\n    public static modulesCount: number = 0;\n    public static CompleteLoadingSuccessful: boolean = false;\n\n\n    /**\n     * 加载模块   Loader对外入口.\n     */\n    public static LoadModules(): number {\n        const moduleC = this.generateModule();\n\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .sort((a, b) => a.priority - b.priority)\n                .forEach((m) => {\n                    // 加载模块\n                    m.Load();\n                    conDebug(`模块 ${m.moduleName} 加载完成`);\n                });\n        }\n\n        if (this.CheckModulesLoaded(moduleC)) {\n            this.CompleteLoadingSuccessful = true;\n            window.XSActivity_Loaded = true;\n        }\n        return moduleC\n    }\n\n    public static CheckModulesLoaded(moduleCount: number): boolean {\n        if (moduleCount != FullModCount) return false;\n        if (ModuleLoader.mList === undefined) return false;\n        for (const m of ModuleLoader.mList) {\n            if (!m.Loaded) return false;\n        }\n        return true;\n    }// 该方法在加载模块完成之后调用，确保mList中的所有模块都已加载。\n\n    /**\n     * 将模块添加到模块数组中\n     * @param module 要添加的模块对象\n     */\n    private static pushToModules(module: BaseModule): void {\n        this.modules[module.moduleName] = module;\n        if (typeof this.mList !== \"undefined\") {\n            this.mList.push(module);\n        } else {\n            this.mList = [module];\n        }\n\n        this.modulesCount++;\n    }\n\n    public static ModuleMap: { [mName in XS_ModuleName]: () => void } = {\n        Base: () => {\n            throw new Error(\"Base为模块的抽象类，请勿加载\");\n        },\n        ActivityModule: () => {\n            this.pushToModules(new ActivityModule());\n        },\n        ChatroomModule: () => {\n            this.pushToModules(new ChatroomModule());\n        },\n        CommandsModule: () => {\n            this.pushToModules(new CommandsModule());\n        },\n        DataModule: () => {\n            this.pushToModules(new DataModule());\n        },\n        ArousalModule: () => {\n            this.pushToModules(new ArousalModule());\n        }\n    }\n\n\n    private static generateModule(): number {\n        for (const mN in ModuleLoader.ModuleMap) {\n            if (mN !== \"Base\" && this.modules[mN] === undefined) ModuleLoader.ModuleMap[mN as XS_ModuleName]();\n        }\n\n        return this.modulesCount;\n    }\n\n}","import { conDebug, hookFunction, SendChat, MSGType } from \"./utils\";\n import { ModuleLoader } from \"Modules/ModuleLoader\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: MSGType.Workflow_Log,\n        content: \"Init wait\"\n    });  \n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        hookFunction('LoginResponse', 0, (args, next) => {\n            next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: MSGType.Workflow_Log\n            });\n            const response = args[0];\n            if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string' || !ModuleLoader.CompleteLoadingSuccessful) {\n                init();\n            }\n        });\n    }\n}\n\nexport function init() {\n    if (window.XSActivity_Loaded)\n        return;\n\n    const moduleCount = ModuleLoader.LoadModules();\n    \n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Loaded!\",\n        content: `Loaded ${moduleCount} modules    FullLoaded: ${ModuleLoader.CompleteLoadingSuccessful}`\n    });\n}\n\n\n\ninitWait();\n"],"names":["e","o","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","d","warn","s","p","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","c","precomputed","window","split","slice","join","encode","padStart","toUpperCase","l","originalHash","Object","assign","router","context","contextProperty","keys","f","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","allowReplace","repository","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","startsWith","_shim10register","defineProperty","exports","value","modules","ChangeType","CHANGELOG","description","type","dev","changes","main","bcModSDK","bcModSDKRef","XSActivity_VERSION","ModuleCategory","MSGType","target","conDebug","msg","DEBUG","result","DebugLog","content","time","Date","toLocaleString","ModVersion","debug","GetModule","moduleName","copyAndDownloadHtmlElement","element","fileName","time_limit","newDoc","document","implementation","createHTMLDocument","copiedElement","cloneNode","querySelectorAll","forEach","dataTimeValue","getAttribute","currentTime","minTimeDate","minTime","maxTimeDate","maxTime","setDate","getDate","remove","removeElementsByTimeRange","style","removeProperty","clearElementStyle","fontSize","fontFamily","display","flexDirection","width","body","alignItems","justifyContent","backgroundColor","appendChild","htmlString","documentElement","outerHTML","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","BaseModule","constructor","Loaded","init","selfPlaceholder","ActivityModule","activityToAddDict","act","Name","Target","TargetSelf","MaxProgress","MaxProgressSelf","Prerequisite","desc","descString","img","StimulationAction","prerequisiteDict","ItemHoodCovered","Action","args","acting","Judgment","TargetItemHoodCovered","acted","ItemNoseCovered","Kneeling","NotKneeling","InventoryPrerequisiteMessage","InventoryGroupIsBlocked","IsKneeling","Load","LoadActivity","hookListHandler","next","_a","Type","data","_c","_b","Dictionary","ActivityName","metadata","substitutions","ChatRoomMessageRunExtractors","Player","ActivityDictionaryText","Content","CommonStringSubstitute","Tag","Text","prereq","parts","aName","replace","resultName","actName","TargetCharacter","Number","isNaN","MemberNumber","ArousalSettings","OrgasmStage","ActivityOrgasmGameResistCount","_d","_e","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","find","targetCharacterObj","undefined","resultDict","CharacterNickname","SourceCharacter","ServerSend","Sender","SendActivity","ActivityOrgasmStop","ActivityOrgasmStart","actLength","aN","pushToActivity","activityDictAdd","activityDesc","ActivityDictionary","pendingActivity","nameWithoutPrefix","substring","actTarget","actTargetSelf","addedValues","aT","aTS","activity","ActivityFemale3DCG","ActivityFemale3DCGOrdering","getAllAct","suffix","ChatroomModule","match","stammerHandler","parseInt","ExportChat","exportName","ChatRoomData","getElementById","tenfoldStammeringProbability","isSegmentForCH","stammeringProbability","segmentList","str","Intl","Segmenter","GAME_LANG","TranslationLanguage","toLowerCase","segmenterResult","granularity","segment","results","segmentForCH","stringArray","stammerForList","messageList","currentWord","Math","random","addStammerEffect","word","depth","timeRangeRegex","CommandsModule","commandsDict","help","Description","parsed","DisplayHelp","export","params","getCommandParameters","ChatRoomSendLocal","test","separatorIndex","trim","v","changesString","styleForP","sendChangeLog","item","jieba","stressStyle","edge","CommandCombine","CommandHandler","lastParam","parsedCount","last","cmd","DataModule","BROWSER_NAME","browserName","BROWSER_VERSION","browserVersion","userAgentString","navigator","userAgent","browserVersionRegex","ArousalModule","EdgeTimerLastCycleCall","EdgeCount","patchListHandler","CommonTime","Progress","functionName","ModuleLoader","LoadModules","moduleC","generateModule","mList","b","CheckModulesLoaded","CompleteLoadingSuccessful","XSActivity_Loaded","moduleCount","pushToModules","module","modulesCount","mN","ModuleMap","Workflow_Log","Base","CurrentScreen","response","AccountName"],"mappings":"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","x_google_ignoreList":[0]}