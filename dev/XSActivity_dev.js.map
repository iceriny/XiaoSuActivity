{"version":3,"file":"XSActivity_dev.js","sources":["../../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../../src/Modules/ModulesDict.ts","../../src/changeLogData.ts","../../src/utils.ts","../../src/Modules/BaseModule.ts","../../src/Modules/MActivity.ts","../../src/Modules/MChatroom.ts","../../src/Modules/MData.ts","../../src/Modules/MTimerProcessInjector.ts","../../src/Modules/MDrawModule.ts","../../node_modules/randomcolor/randomColor.js","../../src/Modules/MArousal.ts","../../src/Modules/MWombTattoos.ts","../../src/Modules/MCommand.ts","../../src/Modules/ModuleLoader.ts","../../src/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.1.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const e=\"1.1.0\";function o(e){alert(\"Mod ERROR:\\n\"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&\"object\"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${o}\\nPatch1:\\n${t.get(o)||\"\"}\\nPatch2:\\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(\".\");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const d=o[a[a.length-1]];if(\"function\"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(d.toString().replaceAll(\"\\r\\n\",\"\\n\")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){\"string\"==typeof e&&\"string\"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&\"object\"==typeof e||o(\"Failed to register mod: Expected info object, got \"+typeof e),\"string\"==typeof e.name&&e.name||o(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof e.name);let i=`'${e.name}'`;\"string\"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,\"string\"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&\"string\"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&\"object\"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(d));const s=e=>{\"string\"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);\"number\"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))\"string\"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),\"string\"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>(\"string\"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith(\"1.0.\")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&\"object\"==typeof o&&\"string\"==typeof o.name&&\"string\"==typeof o.version?e.registerMod(o.name,o.version,\"object\"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","import type { BaseModule } from \"./BaseModule\";\n\nexport const modules: { [key: string]: BaseModule } = {};","export enum ChangeType {\n\tmain,\n\tdev\n}\ninterface ChangeLogObj {\n\tversion: string;\n\tdescription: string;\n\ttype: ChangeType;\n\tchanges: string[];\n}\n\nexport const CHANGELOG: ChangeLogObj[] = [\n    {\n        version: \"0.0.1\",\n        description: \"Initial release\",\n        type: ChangeType.dev,\n        changes: [\"完成基本框架测试中...\"]\n    },\n    {\n        version: \"0.0.2\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\",\"添加部分动作\"]\n    },\n    {\n        version: \"0.0.3\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\",\"完善框架\"]\n    },\n    {\n        version: \"0.0.4\",\n        description: \"终于修复了重复加载的Bug\",\n        type: ChangeType.dev,\n        changes: [\"修复重复加载的BUG!!!!!! O.o\", \"修复若干其他bug\",\"完善框架\"]\n    },\n    {\n        version: \"0.0.5\",\n        description: \"优化\",\n        type: ChangeType.dev,\n        changes: [\"优化版本信息显示效果\"]\n    },\n    {\n        version: \"0.1.0\",\n        description: \"正式发布!当前功能如下: \",\n        type: ChangeType.main,\n        changes: [\"使用命令导出当前聊天室聊天记录 支持按时间范围导出 详细请查看 /xsa \",\"添加9个额外动作.\"]\n    },\n    {\n        version: \"0.1.1\",\n        description: \"添加了新的动作.\",\n        type: ChangeType.main,\n        changes: [\"添加了额外的17个动作\",\"添加 /xsa act 命令 显示添加的全部动作\", \"完成功能自动口吃处理命令:(` + message) --请输入 /xsa jieba 查看帮助\"]\n    },\n    {\n        version: \"0.1.2\",\n        description: \"添加修改边缘逻辑.\",\n        type: ChangeType.main,\n        changes: [\"修复一些bug\",\"修复了若干错别字\",\"修改边缘影响，现在每45秒钟 边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间，如果失去边缘状态，则同样的时间后失去一层抵抗难度，并且减少0.3~1.3秒高潮持续时间.\"]\n    },\n    {\n        version: \"0.1.3\",\n        description: \"添加修改边缘逻辑以及高潮效果.添加打断抵抗高潮的瘙痒动作.\",\n        type: ChangeType.main,\n        changes: [\"当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度\",\"当高潮或抵抗高潮时禁用输入框.\", \" ` 命令修改，现在可以在 ` 后或者 数字后跟一个字母 m ，这将在结巴位置添加呻吟效果.\"]\n    },\n    {\n        version: \"0.1.4\",\n        description: \"添加颜文字快速发送功能!\",\n        type: ChangeType.main,\n        changes: [\"添加快速发送颜文字的功能，以下为简单介绍，详细介绍请输入:/xsa kaomoji 查看。\\n使用=> |+[参数]  打开颜文字选择面板，| 为回车上面的按键，需要用 Shift+\\\\ 键打出 请输入 |help 查看全部参数\", \"调整忍耐高潮时每1.5秒有30%概率发送忍耐反应\", \"高潮后的高潮抵抗难度只降低一半而非原来的降低为0.\", \"重构注入到动作循环的逻辑\", \"重构模组的初始化与加载逻辑\"]\n    },\n    {\n        version: \"0.1.5\",\n        description: \"颜文字发送功能大修!\",\n        type: ChangeType.main,\n        changes: [\"颜文字表情功能大修! 新版使用方法请输入/xsa kaomoji 查看!\"]\n    },\n    {\n        version: \"0.2.0\",\n        description: \"淫纹大修!\",\n        type: ChangeType.main,\n        changes: [\"淫纹大修! 输入 /xsa yw 查看功能.\",\"高潮抵抗难度和温度计进度现在可以跨平台继承 换句话说 掉线也不会丢失相关数据\"]\n\n    }\n]","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport { modules } from \"Modules/ModulesDict\";\nimport { CHANGELOG, ChangeType } from \"changeLogData\";\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----用得到的常数---- VVVVVVVVVVVVVVVVVVVVVVV    //\n\nexport const CSShref = DEBUG ? \"https://iceriny.github.io/XiaoSuActivity/dev/XSActivityStyle.css\" : \"https://iceriny.github.io/XiaoSuActivity/main/XSActivityStyle.css\";\n\n//   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----用得到的常数---- ^^^^^^^^^^^^^^^^^^^^^^^    //\n\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----SDK----  VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV    //\nexport const bcModSDK = bcModSDKRef.registerMod({\n    name: \"XiaoSuActivity\",\n    fullName: \"XiaoSu's Activity Expand\",\n    version: XSActivity_VERSION.startsWith(\"v\") ? XSActivity_VERSION.slice(1) : XSActivity_VERSION,\n    repository: \"https://github.com/iceriny/XiaoSuActivity\"\n});\n\nexport type PatchHook = (args: any[], next: (args: any[]) => any) => any;\nexport function hookFunction(target: string, priority: number, hook: PatchHook): () => void {\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n    bcModSDK.patchFunction(functionName, patches);\n}\n\n//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----SDK----  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //\n/**\n * 发送*表情信息\n * @param msg 要发送的内容\n * @returns 无\n */\nexport function SendEmote(msg: string | null) {\n    if (msg == null) return;\n    ServerSend(\"ChatRoomChat\", { Content: msg, Type: \"Emote\" })\n}\n/**\n * 发送聊天消息\n * @param msg 发送的内容\n * @returns 无\n */\nexport function SendChat(msg: string | null) {\n    if (msg == null) return;\n    ServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n}\n\ntype LocalMessageCSSName = null | 'local-message' | 'trance-message'\nexport function SendLocalMessage(msg: string, className: LocalMessageCSSName = null , timeout: number = 0) {\n    if (className !== null ){\n        msg = `<div class=\"${className}\">${msg}</div>`\n    }\n    if (timeout === 0) ChatRoomSendLocal(msg)\n    else ChatRoomSendLocal(msg, timeout);\n}\n/**\n * 发送动作消息\n * @param msg 动作消息的内容\n * @param sourceCharacter 动作的来源 id\n * @param targetCharacter 动作的目标 id\n */\nexport function SendActivity(msg: string, sourceCharacter: number, targetCharacter?: number) {\n\n    const sourceCharacterObj: Character | undefined = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter),\n        targetCharacterObj: Character | undefined = targetCharacter ? ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter) : undefined;\n\n    if (sourceCharacterObj === undefined && targetCharacterObj === undefined) return;\n\n    const sourceCharacterNickname = sourceCharacterObj ? CharacterNickname(sourceCharacterObj) : \"\",\n        targetCharacterNickname = targetCharacterObj ? CharacterNickname(targetCharacterObj) : \"\";\n    const resultDict: ChatMessageDictionary = [\n        { Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSA_ActMessage\", Text: msg.replaceAll(\"{source}\", sourceCharacterNickname).replaceAll(\"{target}\", targetCharacterNickname) }\n    ]\n\n    resultDict.push({ SourceCharacter: sourceCharacter });\n    if (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"SendActivity()\",\n        content: {\n            Type: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n        }\n    });\n\n    ServerSend(\"ChatRoomChat\", {\n        Type: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n    });\n}\n\n\n//   ^^^^^^^^^^^^^^^  ----游戏函数调用----  ^^^^^^^^^^^^^^^    //\n\n\n/* 发送的数据包对象的实例\n{\n    \"Sender\": 150217,\n    \"Content\": \"ChatOther-ItemTorso-Tickle\",\n    \"Type\": \"Activity\",\n    \"Dictionary\": [\n        {\n            \"SourceCharacter\": 150217\n        },\n        {\n            \"TargetCharacter\": 155979\n        },\n        {\n            \"Tag\": \"FocusAssetGroup\",\n            \"FocusGroupName\": \"ItemTorso\"\n        },\n        {\n            \"ActivityName\": \"Tickle\"\n        },\n        {\n            \"Tag\": \"fbc_nonce\",\n            \"Text\": 9\n        }\n    ],\n    \"MBCHC_ID\": 44\n}\n*/\n/**\n */\n// Utils\n/* 描述中表示自己的占位符 */\n\nconst selfPlaceholder = '{source}';\n/** 描述中表示目标的占位符 */\n\nconst targetPlaceholder = '{target}';\n/**\n * 包含全局占位符的对象 s:自己  t:目标\n */\nexport const PH = {\n    s: selfPlaceholder,\n    t: targetPlaceholder\n}\n/**\n * Debug信息对象接口\n */\ninterface XSDebugMSG {\n    name?: string;\n    type?: MSGType;\n    content: any;\n}\n/**\n * Debug信息类型\n */\nexport enum MSGType {\n    DebugLog,\n    Workflow_Log,\n}\n/**\n * 发送debug信息到控制台\n * @param msg 信息\n * @param color 可选颜色参数\n * @param style 可选的css风格参数\n * @returns 无\n */\nexport function conDebug(msg: XSDebugMSG | string, color: string | null = null, style: string | null = null) {\n    if (DEBUG === false) return;\n\n\n    const result: object = typeof msg === \"string\" ? {\n        name: \"XiaoSuActivity_Debug\",\n        type: MSGType.DebugLog,\n        content: msg,\n        time: new Date().toLocaleString(),\n        ModVersion: XSActivity_VERSION,\n    } : {\n        name: msg.name,\n        type: msg.type,\n        content: msg.content,\n        time: new Date().toLocaleString(),\n        ModVersion: XSActivity_VERSION\n    }\n    if (style) {\n        console.debug(\"%c小酥的模组信息: \", style, result);\n    } else {\n        if (color) {\n            style = `background-color: ${color}; font-weight: bold;`\n        }\n        console.debug(\"%c小酥的模组信息: \", 'background-color: rgba(191, 154, 175, 1); font-weight: bold;', result);\n    }\n}\n\n/**\n * 获取已加载的模型实例\n * @param moduleName 模型名称\n * @returns 已加载的模型实例\n */\nexport function GetModule<T>(moduleName: XS_ModuleName): T {\n    return modules[moduleName] as T;\n}\n\n/**\n * 处理获取到的元素中时间范围外的元素 次工具在导出聊天记录时使用\n * @param element 获取的元素\n * @param time_limit 时间范围\n */\nfunction removeElementsByTimeRange(element: HTMLElement, time_limit: timeRange) {\n    const elements = element.querySelectorAll('[data-time]');\n\n    elements.forEach((element) => {\n        const dataTimeValue = element.getAttribute('data-time');\n\n        if (dataTimeValue) {\n            // 将字符串时间值转换为 Date 对象\n            const currentTime = new Date(`2000-01-01 ${dataTimeValue}`);\n            const minTimeDate = new Date(`2000-01-01 ${time_limit.minTime}`);\n            const maxTimeDate = new Date(`2000-01-01 ${time_limit.maxTime}`);\n\n            // 判断是否跨越了 00:00\n            if (maxTimeDate < minTimeDate) {\n                maxTimeDate.setDate(maxTimeDate.getDate() + 1);\n            }\n\n            // 判断是否在时间范围内\n            if (currentTime < minTimeDate || currentTime > maxTimeDate) {\n                // 使用 remove 方法\n                element.remove();\n\n                // 或者使用 parentNode.removeChild 方法\n                // element.parentNode.removeChild(element);\n            }\n        }\n    });\n}\n\n\n/**\n * 传入{@link copyAndDownloadHtmlElement}的最小时间值和最大时间值\n */\nexport interface timeRange {\n    minTime: string;\n    maxTime: string;\n}\n\n\n/**\n * 将传入的元素复制并提供下载\n * @param element 需要下载的原始元素\n * @param fileName 下载的文件名字\n * @param time_limit 时间范围\n * @returns void\n */\nexport function copyAndDownloadHtmlElement(element: HTMLElement | null, fileName: string, time_limit: timeRange | null = null) {\n    // 创建新文档\n    const newDoc = document.implementation.createHTMLDocument();\n\n    if (element === null) {\n        conDebug(\"element is null\");\n        return;\n    }\n\n    function clearElementStyle(element: HTMLElement) {\n        const style = element.style;\n        // 逐个删除属性\n        while (style.length > 0) {\n            style.removeProperty(style[0]);\n        }\n    }\n\n    // 复制元素\n    const copiedElement = element.cloneNode(true) as HTMLElement;\n\n    if (time_limit !== null) {\n        removeElementsByTimeRange(copiedElement, time_limit);\n    }\n\n    clearElementStyle(copiedElement);\n\n    copiedElement.style.fontSize = \"14.784px\";\n    copiedElement.style.fontFamily = \"Arial, sans-serif\";\n    copiedElement.style.display = \"flex\";\n    copiedElement.style.flexDirection = \"column\";\n    copiedElement.style.width = \"70vw\";\n\n    newDoc.body.style.display = \"flex\";\n    newDoc.body.style.alignItems = \"center\";\n    newDoc.body.style.justifyContent = \"center\";\n    newDoc.body.style.backgroundColor = \"#f2f2f2\";\n    // 将复制的元素添加到新文档的 body 中\n    newDoc.body.appendChild(copiedElement);\n\n    // 将新文档转换为 HTML 字符串\n    const htmlString = newDoc.documentElement.outerHTML;\n\n    // 创建一个下载链接\n    const blob = new Blob([htmlString], { type: 'text/html' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = fileName;\n\n    // 触发下载\n    link.click();\n}\n\n/**\n * 发送更新信息到本地\n */\nexport function sendChangeLog() {\n    let content = '';\n    for (const c in CHANGELOG) {\n        const version = CHANGELOG[c].version;\n        const type = CHANGELOG[c].type == ChangeType.main ? \"主版本\" : \"开发版本\";\n        const description = CHANGELOG[c].description;\n        const changes = CHANGELOG[c].changes;\n\n        let changesString = '<ul style=\"list-style-position: inside;  padding-left: 0;\">';\n        for (const s of changes) {\n            changesString += `<li>${s}</li>`;\n        }\n        changesString += '</ul>';\n\n        const backgroundColor = version == XSActivity_VERSION && (!DEBUG && type === \"主版本\") ? \"#764460\" : \"#442E3A\"\n        const styleForP = 'style=\"font-weight: bold; margin: 0;\"'\n        content += `<div style=\"background-color: ${backgroundColor}; display: flex; flex-direction: column;\"> <p ${styleForP}>版本: ${version}</p> <p ${styleForP}>类型: ${type}</p> <p ${styleForP}>描述: ${description}</p><p>----</p> <p ${styleForP}>改动: ${changesString}</p><p>========</p></div>`\n    }\n    content += \"<p>==当前页面显示时间1分钟==</p>\"\n    ChatRoomSendLocal(content, 60000);\n}\n\n/**\n * 处理结巴效果基于segmenter.segment()分词\n * @param str 传入的字符串\n * @returns 返回处理后的字符串\n */\nexport function segmentForCH(str: string): string[] | null {\n    conDebug({\n        name: \"segmentForCHTest\",\n        type: MSGType.DebugLog,\n        content: {\n            Intl: window.Intl ? true : false,\n            Segmenter: window.Intl.Segmenter ? true : false,\n            GAME_LANG: TranslationLanguage.toLowerCase()\n        }\n    })\n    // 检查浏览器是否支持 Intl.Segmenter\n    if (window.Intl && window.Intl.Segmenter && TranslationLanguage.toLowerCase() === \"cn\") {\n        const segmenter = new Intl.Segmenter('zh', { granularity: 'word' }); // 创建分词器实例\n        const segmenterResult = segmenter.segment(str); // 对文本进行分词\n        const results: string[] = []\n        for (const segment of segmenterResult) {\n            results.push(segment.segment);\n        }\n\n        conDebug(`segmentForCH: ${results}`)\n        return results;\n    } else {\n        return null;\n    }\n}\n/**\n * 检测数字是否被整除\n * @param num 要检测的数字\n * @param divisor 除数\n * @returns 是否被整除\n */\nexport function isDivisible(num: number, divisor: number): boolean {\n    return num % divisor === 0;\n}\n\n\n// 将滚动条滚动到底部\nexport function scrollToBottom(element: HTMLElement) {\n    const maxScrollTop = element.scrollHeight - element.clientHeight;\n    element.scrollTo({\n        top: maxScrollTop,\n        behavior: 'smooth'  // 可选：实现平滑滚动效果\n    });\n}\n\n/**\n * 确定是否应渲染资产层，假设资产本身是可见的。\n * @param C - 角色，穿戴该物品的角色\n * @param layer - 需要检查可见性的层\n * @param asset - 层所属的资产\n * @param typeRecord - 如果有的话，物品的类型记录\n * @returns - 如果层应显示则返回 TRUE，否则返回 FALSE\n */\nexport function CharacterAppearanceIsLayerIsHave(C: Character, layer: AssetLayer, typeRecord: TypeRecord | null = null) {\n    return !(layer.AllowTypes && typeRecord !== null && !CharacterAppearanceAllowForTypes(layer.AllowTypes, typeRecord));\n}\n\n\n/**\n * 获取一个随机整数\n * @param min 最小值\n * @param max 最大值\n * @returns 返回的随机整数\n */\nexport function GetRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","\n/**\n * 完整模块数量\n */\nexport const FullModCount = 8;\n\n\n/**\n * 模块的基础抽象类\n */\nexport abstract class BaseModule {\n    /** 模块名 */\n    moduleName: XS_ModuleName = \"Base\";\n    /** 模块优先级 数越大越靠后加载 */\n    priority: number = 0;\n    /** 是否加载完成 */\n    Loaded: boolean = false;\n\n\n    /**\n     * 初始化函数\n     */\n    public abstract Init(): void\n    /**\n     * 加载函数\n     */\n    public abstract Load(): void\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction, MSGType, SendActivity } from \"utils\";\n\n/*\n * 动作的限定条件信息对象\n*/\ninterface prerequisite {\n    Name: XSA_ActivityPrerequisite;\n    Action: (args: Array<unknown>) => boolean;\n}\n\n/**\n * 描述中表示自己的占位符\n */\nconst selfPlaceholder = \"SourceCharacter\";\n/** 描述中表示目标的占位符 */\nconst targetPlaceholder = \"TargetCharacter\";\n\n/**\n * 动作模块的类\n * 涉及功能有\"\n * - 添加自定义动作\n * - 接受特定动作的特殊效果 当前为瘙痒增加高潮抵抗难度\n */\nexport class ActivityModule extends BaseModule {\n\n\n    public Init(): void {\n        this.moduleName = \"ActivityModule\";\n        this.priority = 50;\n    }\n    public Load(): void {\n        this.LoadActivity();\n        this.hookListHandler();\n        this.Loaded = true;\n    }\n\n    // hook:\n\n\n\n    /**\n     * 狗子函数队列处理\n     */\n    hookListHandler(): void {\n        /**\n         * 处理没有装本插件的玩家接受到的消息\n         * 原理为使用hookFunction来拦截ServerSend函数的执行,并判断消息中是否包含自定义活动的关键词,如果包含则执行自定义操作\n         * - 即替换原本的描述\n         */\n        hookFunction(\"ServerSend\", 5, (args, next) => { // ServerSend 只能检测自己发出的聊天信息 可以用来替换自己发出去的文字\n            if (args[0] == \"ChatRoomChat\" && args[1]?.Type == \"Activity\") {\n                const data = args[1];\n                const actName = data.Dictionary[3]?.ActivityName ?? \"\";\n                if (actName.indexOf(\"XSAct_\") == 0) { // 这个条件表示只有当消息中包含以 \"XSAct_\" 开头的自定义活动时,才会执行下面的操作\n                    // 拦截自定义活动的发送并执行自定义操作\n                    const { substitutions } = ChatRoomMessageRunExtractors(data, Player)\n                    let msg = ActivityDictionaryText(data.Content);\n                    msg = CommonStringSubstitute(msg, substitutions ?? [])\n                    data.Dictionary.push({\n                        Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD \" + data.Content,\n                        Text: msg\n                    });\n                }\n            }\n            return next(args);\n        });\n\n        /**\n         * 1. 当条件关键词为自定义关键词时\n         * - 处理限制条件\n         * 2. 当关键词不是自定义关键词时\n         * - 执行原方法\n         */\n        hookFunction(\"ActivityCheckPrerequisite\", 500, (args, next) => {\n            const prereq = args[0];\n            if (prereq in this.prerequisiteDict) {\n                const customPrereq = this.prerequisiteDict[prereq as XSA_ActivityPrerequisite];\n                return customPrereq.Action(args);\n            } else {\n                return next(args);\n            }\n        });\n\n        /**\n         * args[0]: \"Assets/Female3DCG/Activity/XSAct_XXX.png\"\n         */\n        hookFunction(\"DrawImageResize\", 10, (args, next) => {\n            const source = args[0];\n\n            if (typeof source !== \"string\") return next(args);\n            // 使用 split 方法拆分字符串\n            const parts = source.split('/');\n            const fileName = parts[parts.length - 1];  // 获取文件名部分，即 \"XSAct_XXX.png\"\n\n            // 进一步处理文件名，去掉 \".png\" 后缀\n            const aName = fileName.replace('.png', '');\n\n            if (aName.indexOf(\"XSAct_\") == 0) {\n                const resultName = `Assets/Female3DCG/Activity/${this.activityToAddDict[aName as XSA_ActivityName].img}.png`;\n                args[0] = resultName;\n                return next(args);\n            }\n            return next(args);\n        });\n\n\n\n        /** 瘙痒动作增加抵抗难度 */\n        hookFunction(\"ChatRoomMessage\", this.priority, (args, next) => {\n            const data = args[0];\n            conDebug({\n                name: \"ChatRoomMessage\",\n                type: MSGType.DebugLog,\n                content: data\n            });\n            // 确定是否是活动消息\n            if (data.Type == \"Activity\") {\n                const actName = data.Dictionary[3]?.ActivityName as string;\n                const SourceCharacter = data.Dictionary[0]?.SourceCharacter as number;\n                const TargetCharacter = data.Dictionary[1]?.TargetCharacter as number;\n                if (actName == \"Tickle\" && !Number.isNaN(TargetCharacter) && TargetCharacter == Player?.MemberNumber) {// 瘙痒动作且目标为自己\n                    conDebug({\n                        type: MSGType.DebugLog,\n                        name: \"检测到自己为目标的瘙痒动作\",\n                        content: {\n                            高潮阶段: Player.ArousalSettings?.OrgasmStage,\n                            抵抗难度: ActivityOrgasmGameResistCount\n                        }\n                    });\n                    if (Player.ArousalSettings?.OrgasmStage == 1) {// 如果当前正在抵抗则添加难度并重新开始抵抗游戏\n                        conDebug({\n                            type: MSGType.DebugLog,\n                            name: \"捕捉到抵抗场景，开始截断抵抗 增加难度 并重新触发\",\n                            content: {\n                                高潮阶段: Player.ArousalSettings?.OrgasmStage,\n                                抵抗难度: ActivityOrgasmGameResistCount\n                            }\n                        });\n                        // 增加抵抗难度\n                        ActivityOrgasmGameResistCount++;\n                        // 发送活动消息\n                        SendActivity(`{target}紧闭双眼尽力抵抗着高潮，但被{source}的瘙痒干扰，从嘴巴里泄露出一声压抑的呻吟，不知是否还能忍住.`, SourceCharacter, TargetCharacter)\n                        // 打断当前高潮\n                        ActivityOrgasmStop(Player, 99.5);\n                        // 触发新的高潮\n                        ActivityOrgasmPrepare(Player);\n                    }\n                }\n            }\n            return next(args);\n        });\n    }\n\n    //============================================================\n\n    /**\n     * 载入自定义动作\n     */\n    LoadActivity(): void {\n        conDebug(\"加载自定义活动\");\n        let actLength = 0;\n        for (const aN in this.activityToAddDict) { // a 为活动名\n\n            this.pushToActivity(this.activityToAddDict[aN as XSA_ActivityName].act);\n\n            this.activityDictAdd();\n\n            //加载文字描述\n            const activityDesc = this.activityToAddDict[aN as XSA_ActivityName].desc;\n\n            activityDesc?.forEach((d) => {\n                ActivityDictionary?.push(d);\n            });\n            actLength += 1;\n        }\n        conDebug(`自定义活动加载完成.动作数: ${actLength}`)\n    }\n    //============================================================\n    /**\n     * 初始化活动的文字描述。\n     */\n    activityDictAdd() {\n\n        for (const a in this.activityToAddDict) {\n            const pendingActivity = this.activityToAddDict[a as XSA_ActivityName];\n\n            const actName = pendingActivity.act.Name;\n            const nameWithoutPrefix = actName.substring(6);\n            const actTarget = pendingActivity.act.Target;\n            const actTargetSelf = pendingActivity.act.TargetSelf;\n\n            const addedValues: string[][] = [];\n\n            addedValues.push([`ActivityAct_${actName}`, `${nameWithoutPrefix}`]);\n            addedValues.push([`Activity${actName}`, `${nameWithoutPrefix}`]);\n            if (actTarget.length > 0) {\n                for (const aT of actTarget) {\n                    addedValues.push([`Label-ChatOther-${aT}-${actName}`, `${nameWithoutPrefix}`]);\n                    addedValues.push([`ChatOther-${aT}-${actName}`, pendingActivity.descString[0]]);\n                }\n            }\n            if (typeof actTargetSelf !== 'undefined' && typeof actTargetSelf !== 'boolean' && actTargetSelf.length > 0) {\n                for (const aTS of actTargetSelf) {\n                    addedValues.push([`Label-ChatSelf-${aTS}-${actName}`, `${nameWithoutPrefix}`]);\n                    addedValues.push([`ChatSelf-${aTS}-${actName}`, pendingActivity.descString[1]]);\n                }\n            }\n\n            pendingActivity.desc = addedValues;\n        }\n    }\n    /**\n     * 将传入的活动对象载入\n     * @param activity 将要载入的活动对象\n     */\n    private pushToActivity(activity: Activity) {\n        ActivityFemale3DCG.push(activity);\n        ActivityFemale3DCGOrdering.push(activity.Name);\n        //}\n    }\n\n    //============================================================\n\n    //     ActivityNameXiaosu_onlyName =\n    //     \"眯眼\" | \"眼神飘忽\" | \"甩头发\" | \"轻抚发梢\" | \"叼起头发\" | \"嗅头发\" |  \"绕头发\" | \"大力甩头发\" | \"抿住嘴巴\" | \"恳求的看\" | \"恳求的摇头\"\n    //   | \"皱鼻子\" | \"打喷嚏\" | \"深呼吸\" \n    //   | \"低头\" | \"挺胸收腹\" | \"站直身体\" | \"坐直身体\" | \"身体一颤\"\n    //   | \"活动手臂\" | \"活动大腿\" | \"绷紧膝盖\" | \"内八夹腿\"\n    //   | \"蜷缩脚趾\" | \"绷直脚踝\" | \"踮脚\"\n    // ;\n    // SourceCharacter 为动作发起人  TargetCharacter 为动作目标人\n    /**\n     * 将要添加的动作字典\n     * @interface Activity - Activity对象的属性如下定义:\n     * @param  Name - 活动的名称\n     * @param  MaxProgress - 活动的最大进度\n     * @param  MaxProgressSelf - 活动自身的最大进度\n     * @param  Prerequisite - 活动的前置条件\n     * @param  Target - 活动的目标\n     * @param  TargetSelf - 活动的自身目标\n     * @param  Reverse - 是否反转前置条件的判断\n     * @param  MakeSound - 是否播放声音 used for setting {@link ExtendedItemAutoPunishHandled} \n     * @param  StimulationAction - 当使用该活动时触发的动作\n     * @param  ActivityExpression - 活动表达式,包含一系列的动作 该活动的默认表达式。可以使用资产上的ActivityExpression进行覆盖。\n     * -------\n     * @desc - desc默认需要为null,当活动初始化时,会自动添加文字描述\n     * @descString - 两个元素的数组 [0]为如果目标为他人的描述，[1]为目标自己的描述\n    */\n    activityToAddDict: { [ActivityIndex in XSA_ActivityName]: { act: Activity, desc: null | string[][], descString: [string, string], img: ActivityName } } = {\n        XSAct_眯眼: {\n            act: {\n                Name: \"XSAct_眯眼\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}眯了眯眼.`],\n            img: \"RestHead\"\n        },\n        XSAct_眼神飘忽: {\n            act: {\n                Name: \"XSAct_眼神飘忽\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}眼神飘忽的左看右看.`],\n            img: \"RestHead\"\n        },\n        XSAct_甩头发: {\n            act: {\n                Name: \"XSAct_甩头发\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}甩动着头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_大力甩头发: {\n            act: {\n                Name: \"XSAct_大力甩头发\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}连连摇头，慌乱的甩动着头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_轻抚发梢: {\n            act: {\n                Name: \"XSAct_轻抚发梢\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"UseArms\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}轻柔抚动着${targetPlaceholder}的头发.`, `${selfPlaceholder}轻柔抚动着自己的头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_叼起头发: {\n            act: {\n                Name: \"XSAct_叼起头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 50,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}轻轻咬起${targetPlaceholder}的头发.`, `${selfPlaceholder}轻轻咬起自己的头发.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_嗅头发: {\n            act: {\n                Name: \"XSAct_嗅头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"ItemNoseCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}在${targetPlaceholder}的发间嗅着，鼻息弥漫着${targetPlaceholder}的发香.`, `${selfPlaceholder}撩起自己的头发轻轻嗅着.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_绕头发: {\n            act: {\n                Name: \"XSAct_绕头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"UseArms\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}勾起一缕${targetPlaceholder}的发丝，在指尖绕来绕去.`, `${selfPlaceholder}勾起自己的一缕头发在指尖绕来绕去.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_皱鼻子: {\n            act: {\n                Name: \"XSAct_皱鼻子\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"ItemNoseCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}皱了皱自己的鼻头.`],\n            img: \"RestHead\"\n        },\n        XSAct_打喷嚏: {\n            act: {\n                Name: \"XSAct_打喷嚏\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}打了个喷嚏.`],\n            img: \"Kiss\"\n        },\n        XSAct_深呼吸: {\n            act: {\n                Name: \"XSAct_深呼吸\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"ItemNoseCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}深深的吸了口气.`],\n            img: \"Kiss\"\n        },\n        XSAct_低头: {\n            act: {\n                Name: \"XSAct_低头\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"MoveHead\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}红润着脸蛋低头逃避.`],\n            img: \"RestHead\"\n        },\n        XSAct_恳求的摇头: {\n            act: {\n                Name: \"XSAct_恳求的摇头\",\n                Target: [\"ItemHead\"],\n                TargetSelf: [\"\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"MoveHead\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}对着${targetPlaceholder}的方向恳求的摇头.`, ``],\n            img: \"RestHead\"\n        },\n        XSAct_恳求的看: {\n            act: {\n                Name: \"XSAct_恳求的看\",\n                Target: [\"ItemHead\"],\n                TargetSelf: [\"\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"TargetZoneNaked\", \"MoveHead\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}汪着眼睛恳求的看着${targetPlaceholder}.`, \"\"],\n            img: \"RestHead\"\n        },\n        XSAct_内八夹腿: {\n            act: {\n                Name: \"XSAct_内八夹腿\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}通红的脸蛋忍耐着快感，大腿紧紧夹起来，摆出着内八的姿势，身体微微颤抖.`],\n            img: \"Kick\"\n        },\n        XSAct_噘嘴: {\n            act: {\n                Name: \"XSAct_噘嘴\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}有些不满的噘起嘴巴.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_抿住嘴巴: {\n            act: {\n                Name: \"XSAct_抿住嘴巴\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}抿住嘴巴.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_瘪嘴: {\n            act: {\n                Name: \"XSAct_瘪嘴\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}瘪着嘴巴，一副委屈的样子.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_坐直身体: {\n            act: {\n                Name: \"XSAct_坐直身体\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺直了腰，坐直了身体.`],\n            img: \"Kick\"\n        },\n        XSAct_挺胸收腹: {\n            act: {\n                Name: \"XSAct_挺胸收腹\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBreast\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺起胸部，微收下巴，腹部用力收腰.`],\n            img: \"Kick\"\n        },\n        XSAct_站直身体: {\n            act: {\n                Name: \"XSAct_站直身体\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"NotKneeling\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺胸收腹，努力绷紧小腿，站直了身体.`],\n            img: \"Kick\"\n        },\n        XSAct_身体一颤: {\n            act: {\n                Name: \"XSAct_身体一颤\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}的身体猛然颤抖了一下.`],\n            img: \"Kick\"\n        },\n        XSAct_活动大腿: {\n            act: {\n                Name: \"XSAct_活动大腿\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}尝试活动了一下腿部.`],\n            img: \"Kick\"\n        },\n        XSAct_活动手臂: {\n            act: {\n                Name: \"XSAct_活动手臂\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemArms\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"CantUseArms\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}一边按摩一边活动着手臂.`],\n            img: \"MasturbateHand\"\n        },\n        XSAct_绷紧膝盖: {\n            act: {\n                Name: \"XSAct_绷紧膝盖\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"NotKneeling\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}努力的绷紧膝盖，尽可能站的更直.`],\n            img: \"Kick\"\n        },\n        XSAct_绷直脚踝: {\n            act: {\n                Name: \"XSAct_绷直脚踝\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}不自觉的用力绷直脚踝，释放涌来的快感.`],\n            img: \"Kick\"\n        },\n        XSAct_蜷缩脚趾: {\n            act: {\n                Name: \"XSAct_蜷缩脚趾\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}脚趾互相纠结，又时而蜷缩，忍耐着快感袭来.`],\n            img: \"Kick\"\n        },\n        XSAct_踮脚: {\n            act: {\n                Name: \"XSAct_踮脚\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"CantUseFeet\"],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}努力的踮起脚.`],\n            img: \"Kick\"\n        }\n\n    }\n    /**\n     * 前置条件字典\n     * @PrerequisiteName - 需要是在{@link XSA_ActivityPrerequisite}的字符串\n     * @Name - 需要是在{@link XSA_ActivityPrerequisite}的字符串\n     * @Action - 检测判断的具体动作\n     * - @param args - 一个数组,包含四个元素.\n     * - args[0]为@param prereq:{@link ActivityPrerequisite} 判定决定使用哪个条件的依据，但此处无用 请不要在这里使用该参数\n     * - args[1]为@param acting:{@link Character} | {@link PlayerCharacter} 代表动作发起者的数据\n     * - args[2]为@param acted:{@link Character} | {@link PlayerCharacter} 代表动作目标的数据\n     * - args[3]为@param group:{@link AssetGroup}.\n     */\n    prerequisiteDict: { [PrerequisiteName in XSA_ActivityPrerequisite]: prerequisite } = {\n        ItemHoodCovered: { //头部面罩位置是否覆盖\n            Name: \"ItemHoodCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                const acting = args[1] as Character | PlayerCharacter;\n                //const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemHoodCovered(acting);\n            }\n        },\n        TargetItemHoodCovered: { //目标的头部面罩位置是否覆盖\n            Name: \"TargetItemHoodCovered\",\n            Action: (args) => {\n                const acted = args[2] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemHoodCovered(acted);\n            }\n        },\n        ItemNoseCovered: { //头部鼻子位置是否覆盖\n            Name: \"ItemNoseCovered\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemNoseCovered(acting);\n            }\n        },\n        Kneeling: {\n            Name: \"Kneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.Kneeling(acting);\n            }\n        },\n        NotKneeling: {\n            Name: \"NotKneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.NotKneeling(acting);\n            }\n        }\n    }\n    /**\n     * 判断函数字典\n     * 前置条件字典将要调用的方法集合\n    */\n    Judgment: { [judgmentName: string]: (acting: Character | PlayerCharacter, acted?: Character | PlayerCharacter, group?: AssetGroup) => boolean } = {\n        ItemHoodCovered: (acting: Character | PlayerCharacter): boolean => { // 头部面罩位置是否覆盖 // 尝试修复\n            return InventoryPrerequisiteMessage(acting, \"HoodEmpty\") === \"\";\n        },\n        ItemNoseCovered: (acting: Character | PlayerCharacter): boolean => { // 鼻子位置是否覆盖 // 测试\n            return (InventoryGet(acting, \"NoseEmpty\") ? \"CannotBeUsedOverMask\" : \"\") === \"\";\n        },\n        Kneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return (acting as PlayerCharacter).IsKneeling();\n        },\n        NotKneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return !(acting as PlayerCharacter).IsKneeling();\n        }\n\n    }\n\n\n    public getAllAct(): XSA_ActivityName_onlyName[] {\n        const result: XSA_ActivityName_onlyName[] = []\n        for (const a in this.activityToAddDict) {\n            const suffix = a.substring(6) as XSA_ActivityName_onlyName; // 从索引为 6 的位置开始截取到字符串末尾\n            result.push(suffix); // 输出：XXXX\n        }\n        conDebug({\n            content: result,\n            name: \"ActivityNameXiaosu_onlyName\",\n            type: MSGType.DebugLog\n        });\n        return result;\n    }\n}\n","import { BaseModule } from \"Modules/BaseModule\";\nimport { MSGType, SendChat, SendEmote, conDebug, copyAndDownloadHtmlElement, hookFunction, segmentForCH, timeRange } from \"utils\";\n\nexport class ChatroomModule extends BaseModule {\n\n    // VVVV==========初始化与加载函数==========VVVV //\n    public Load(): void {\n        this.hookListHandler();\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.moduleName = \"ChatroomModule\";\n        this.priority = 30;\n\n    }\n\n\n    static InputElement: HTMLInputElement | null = null;\n\n    /**\n     * hook函数列表处理\n     */\n    hookListHandler(): void {\n        // hookFunction(\"ChatRoomSync\", this.priority, (args, next) => {\n        //     return next(args);\n        // });\n\n        hookFunction(\"ChatRoomLoad\", this.priority, (args, next) => {\n            const result = next(args);\n            if (!ChatroomModule.InputElement) {\n                ChatroomModule.InputElement = document.getElementById('InputChat') as HTMLInputElement;\n            }\n            ChatroomModule.buildKaomojiButton()\n\n            return result;\n        });\n\n\n        // 调整按钮位置\n        hookFunction(\"ElementPosition\", this.priority, (args, next) => {\n            const result = next(args);\n            if (args[0] === \"InputChat\") {\n                ChatroomModule.ResizeKaomojiButton();\n            }\n            return result;\n        });\n        // 生成InputChat元素时将InputChat元素保存起来\n        hookFunction(\"ElementCreateTextArea\", this.priority, (args, next) => {\n            const result = next(args);\n            if (args[0] === \"InputChat\") {\n                ChatroomModule.InputElement = document.getElementById('InputChat') as HTMLInputElement;\n            }\n            return result;\n        });\n        // 当聊天室清理全部元素时 删除表情系统元素\n        hookFunction(\"ChatRoomClearAllElements\", this.priority, (args, next) => {\n            ChatroomModule.removeKaomojiMenu();\n            ChatroomModule.InputElement = null;\n            return next(args);\n        });\n        // 当聊天室显示元素时 显示表情系统菜单\n        hookFunction(\"ChatRoomShowElements\", this.priority, (args, next) => {\n            const result = next(args);\n            ChatroomModule.showKaomojiMenu();\n            return result;\n        });\n        // 当聊天室隐藏元素时 隐藏表情系统元素\n        hookFunction(\"ChatRoomHideElements\", this.priority, (args, next) => {\n            const result = next(args);\n            ChatroomModule.hideKaomojiMenu();\n            return result;\n        });\n\n        // 处理聊天室发送消息时 接受 \" ` \" 命令和 接受 \" | \" 命令\n        hookFunction(\"CommandParse\", 0,\n            (args, next) => {\n                let msg: string = args[0];\n\n                // 匹配[ ` ]开头的命令 处理结巴系统\n                const match = msg.match(/^`([1-9])?(m)?( )? (.*)/);\n                if (match) {\n                    msg = match[2] != \"m\" ? this.stammerHandler(match[4], parseInt(match[1]), match[3] ? false : true, false) :\n                        this.stammerHandler(match[4], parseInt(match[1]), match[3] ? false : true, true);\n                }\n\n                // 匹配[ | ]的颜文字命令 处理表情系统\n                const kaomojiMatch = msg.match(/^\\|(.*)/);\n                if (kaomojiMatch) {\n                    if (Object.keys(ChatroomModule.kaomojiSet).includes(kaomojiMatch[1]) || kaomojiMatch[1] == \"all\") {\n                        ChatroomModule.kaomojiHandler(kaomojiMatch[1]);\n                        const inputElement: HTMLInputElement = document.getElementById('InputChat') as HTMLInputElement;\n                        inputElement.value = \"\";\n                    } else {\n                        ChatRoomSendLocal(\"该颜文字表情包不存在，请重新输入或输入 |help 查看参数\", 5000)\n                        const inputElement: HTMLInputElement = document.getElementById('InputChat') as HTMLInputElement;\n                        inputElement.value = \"|\";\n                    }\n                    return;\n                }\n\n                args[0] = msg;\n                return next(args);\n            });\n    }\n\n\n    // VVVV==========聊天记录模块==========VVVV //\n    /**\n     * 导出聊天记录\n     * @param time_limit 时间范围\n     */\n    ExportChat(time_limit: timeRange | null = null): void {\n        const exportName: string | undefined = `${ChatRoomData?.Name}_${new Date().toLocaleString()}`;\n\n        const mainElement: HTMLElement | null = document.getElementById('TextAreaChatLog')\n\n        copyAndDownloadHtmlElement(mainElement, exportName, time_limit)\n    }\n\n    // VVVV==========结巴模块==========VVVV //\n    /**\n     * \n     * @param content 将要处理的句子内容\n     * @param tenfoldStammeringProbability 结巴程度 [1 - 9]\n     * @param isSegmentForCH 是否使用中文分词效果\n     * @param haveMoan 是否呻吟\n     * @returns 最终处理后的句子\n     */\n    stammerHandler(content: string, tenfoldStammeringProbability: number, isSegmentForCH: boolean, haveMoan: boolean): string {\n        conDebug(`stammerHandler: content: ${content} tenfoldStammeringProbability: ${tenfoldStammeringProbability}`)\n\n        // 处理结巴程度，默认结巴程度为5\n        if (Number.isNaN(tenfoldStammeringProbability)) tenfoldStammeringProbability = 3;\n        const stammeringProbability = tenfoldStammeringProbability / 10;\n\n        // 使用segmentForCH进行分词，传入参数取消掉空白字符\n        const segmentList = isSegmentForCH ? segmentForCH(content.replace(/\\s/g, \"\")) : undefined;\n\n        // 如果segmentForCH没有返回内容，则使用源字符串通过空格分词\n        const stringArray: string[] = segmentList ? segmentList : content.split(' ');\n\n        return this.stammerForList(stringArray, stammeringProbability, haveMoan);\n    }\n\n    /** 呻吟词库 */\n    moan: string[] = [\n        \" 嗯~❤..\",\n        \" 昂~❤哈啊..\",\n        \" --唔~呜..\",\n        \" 姆嗯~❤...\",\n        \" --嘶-啊~\",\n        \" 唔..❤啊~\",\n        \" --❤嘶哈~\",\n        \" ❤呀~\",\n        \" ❤...呀嗯..\",\n        \" ❤.哦~嗯~.\"\n    ];\n    /**\n     * 将分词后的句子添加效果并返回完整句子.\n     * @param messageList 经过分词后的字符串列表\n     * @param stammeringProbability 结巴程度 [0.1~0.9]\n     * @param haveMoan 是否呻吟\n     * @returns 返回处理后的完整句子.\n     */\n    private stammerForList(messageList: string[], stammeringProbability: number, haveMoan: boolean): string {\n        //const stringArray: string[] = message.split(' ');\n        let result = '';\n\n        // 遍历单词数组\n        for (let i = 0; i < messageList.length; i++) {\n            // 将当前单词加入结果字符串\n            const currentWord: string = messageList[i];\n            result += currentWord;\n\n            // 随机决定是否添加结巴效果\n            if (Math.random() < stammeringProbability) { // 假设添加结巴效果的概率为50%\n                result += this.addStammerEffect(currentWord);\n            }\n\n            // 根据当前玩家的兴奋程度决定是否添加呻吟\n            if (haveMoan && Player.ArousalSettings?.Progress && 100 * Math.random() <= Player.ArousalSettings?.Progress) {\n                result += this.moan[Math.floor(Math.random() * this.moan.length)];\n            }\n\n            // 添加-分隔符，最后一个单词后添加 「 ... 」\n            if (i < messageList.length - 1) {\n                if (Math.random() < stammeringProbability)\n                    result += '-';\n            } else {\n                result += '...';\n            }\n        }\n\n        // 调试日志输出处理后的结果\n        conDebug({\n            name: 'stammer',\n            type: MSGType.DebugLog,\n            content: result\n        });\n\n        return result;\n    }\n    // 添加结巴效果的辅助方法\n    private addStammerEffect(word: string, depth: number = 0): string {\n        // 设置最大递归深度\n        const maxDepth = 3;\n        // 如果递归深度达到最大值，返回原单词\n        if (depth >= maxDepth) {\n            return word;\n        }\n        // 在这里实现添加结巴效果的逻辑，可以是随机的字符、重复的部分、乱序等等\n        const randomNumber: number = Math.random();\n        let result: string = randomNumber < 0.5 ? '...' : `-${word}`;\n\n        if (Math.random() < 0.2) {\n            result = this.addStammerEffect(result, depth + 1);\n        }\n        return result;\n    }\n\n    // VVVV==========颜文字表情模块==========VVVV //\n\n    /** 表情菜单对象 */\n    private static KaomojiMenuObject: {\n        menu: HTMLDivElement | null,\n        title: HTMLDivElement | null,\n        container: HTMLDivElement | null\n    } = {\n            menu: null,\n            title: null,\n            container: null\n        };\n\n    /** 表情菜单标题元素 */\n    private static menuTitleTextSet: { [key: string]: HTMLDivElement } = {\n        全部: document.createElement('div'),\n        开心: document.createElement('div'),\n        难过: document.createElement('div'),\n        害羞: document.createElement('div'),\n        生气: document.createElement('div'),\n        惊讶: document.createElement('div'),\n        困惑: document.createElement('div'),\n        搞怪: document.createElement('div')\n    }\n\n    /** 表情按钮 */\n    static KaomojiButton: HTMLButtonElement | null = null;\n    /** 是否应该显示表情菜单 处理跟随聊天室UI隐藏表情菜单时，等需要再显示时，菜单是否跟随显示 */\n    static KaomojiShouldShow: boolean = false;\n\n    /**\n     * 处理颜文字表情系统\n     * @param message 传入的信息，一般是命令\n     */\n    private static kaomojiHandler(message: string): void {\n        const kaomojiMenu = this.getKaomojiMenu(message);\n        kaomojiMenu!.style.display = \"flex\";\n        this.KaomojiShouldShow = true;\n    }\n\n    /** 表情库 */\n    private static kaomojiSet: { [groupName: string]: string[] } = {\n        help: [\"all ==> 全部表情\", \"hp ==> 开心\", \"sd ==> 伤心\", \"sy ==> 害羞\", \"ar ==> 生气\", \"ap ==> 惊讶\", \"cf ==> 困惑\", \"nt ==> 搞怪顽皮\"],\n        hp: [\"ヾ(❀╹◡╹)ﾉ~\", \" (๑>؂<๑）\", \"(｡･ω･｡)ﾉ♡\", \"(◍ ´꒳` ◍)\", \"(￣w￣)ノ\", \"Hi~ o(*￣▽￣*)ブ\", \"(≧∇≦)ﾉ\", \"o(^▽^)o\", \"(￣︶￣)↗\", \"<(￣︶￣)↗[GO!]\", \"o(*￣▽￣*)o\", \"(p≧w≦q)\", \"ㄟ(≧◇≦)ㄏ\", \"(/≧▽≦)/\", \"(　ﾟ∀ﾟ) ﾉ♡\", \"(●'◡'●)\", \"ヽ(✿ﾟ▽ﾟ)ノ\",\n            \"o(*￣︶￣*)o\", \"(๑¯∀¯๑)\", \"(≧∀≦)ゞ\", \"φ(≧ω≦*)♪\", \"╰(*°▽°*)╯\", \"(*^▽^*)\", \"(๑•̀ㅂ•́)و✧\", \"(੭*ˊᵕˋ)੭*ଘ*\", \"(o゜▽゜)o☆[BINGO!]\", \"(^▽^ )\", \"<(*￣▽￣*)/\", \"┌|*´∀｀|┘\",\n            \"♪(´∇`*)\", \"(｡◕ฺˇε ˇ◕ฺ｡）\", \" ✌︎( ᐛ )✌︎\", \"(*・ω・)ﾉ\", \"(„• ֊ •„)\"],\n        sd: [\"テ_デ\", \"□_□\", \"┭┮﹏┭┮\", \"╥﹏╥...\", \"o(TヘTo)\", \"〒▽〒\", \"ε(┬┬﹏┬┬)3\", \"(;´༎ຶД༎ຶ`)\", \"(ノへ`、)\", \"（-_-。）\", \"(ノへ￣、)\", \"｡◔‸◔｡\", \"(⊙﹏⊙)\"],\n        sy: [\"|ω・）\", \"|･ω･｀)\", \"◕ฺ‿◕ฺ✿ฺ)\", \"つ﹏⊂\", \"(* /ω＼*)\", \"o(*////▽////*)q\", \"(*/ω＼*)\", \"(′▽`〃)\", \"(✿◡‿◡)\", \"(/▽＼)\", \"(๑´ㅂ`๑)\", \"(◡ᴗ◡✿)\", \"⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄\", \"(〃'▽'〃)\", \"(๑╹ヮ╹๑)ﾉ\"],\n        ar: [\"/ᐠ｡ꞈ｡ᐟ\\\\\", \"˃ʍ˂\", \"(σ｀д′)σ\", \"＼(゜ロ＼)(／ロ゜)／\", \"<(－︿－)>\", \"(ー`´ー)\", \"（｀へ´）\", \"(-__-)=@))> o<)\", \"(///￣皿￣)○～\", \"┻━┻︵╰(‵□′)╯︵┻━┻\",\n            \"→)╥﹏╥)\", \"抽!!(￣ε(#￣)☆╰╮(￣▽￣///)\", \"(￣ε(#￣)☆╰╮o(￣皿￣///)\", \"(* ￣︿￣)\", \"（＃￣～￣＃）\", \"(⊙x⊙;)\", \"o(*≧▽≦)ツ┏━┓\", \"(ノω<。)ノ))☆.。\",\n            \"(〃＞目＜)\", \"( σ'ω')σ\", \"o(′益`)o\", \"(〃＞目＜)\", \"o(≧口≦)o\", \"Ｏ(≧口≦)Ｏ\", \"...(*￣０￣)ノ[等等我…]\", \"（≧0≦）\", \"ψ(*｀ー´)ψ\", \"ψ(￣皿￣)ノ\"],\n        sp: [\"✧∇✧\", \"!!!∑(ﾟДﾟノ)ノ\", \"’(°ー°〃)\", \"ヾ(ノ' ﹃' )ノ\", \"(ーー゛)\", \"(○´･д･)ﾉ\", \"wow~ ⊙o⊙\", \"~(￣0￣)/\", \"Σ(｀д′*ノ)ノ\", \"Σ(っ °Д °;)っ\", \"(⊙ˍ⊙)\", \"w(ﾟДﾟ)w\",\n            \"ｍ(o・ω・o)ｍ\", \"⊙▽⊙\", \"（இ௰இ）\", \"(●°u°●)​ 」\", \"（｡ò ∀ ó｡）\", \"(๑•̀ω•́)ノ\"],\n        cf: [\"⚆_⚆\", \"( -'`-)\", \"(=′ー`)\", \"( -'`-; )\", \"(・-・*)\", \"( ｀д′)\", \"(￣m￣）\", \"( ╯▽╰)\", \" o-o(=•ェ•=)m\", \"(⊙﹏⊙)\", \"Σ( ° △ °|||)︴\", \"(⊙ˍ⊙)\", \"( ᗜ ˰ ᗜ )\", \"꒰ ˶• ༝ •˶꒱\"],\n        nt: [\"(ˉ▽￣～) 切~~\", \"(￣w￣)ノ\", \"(￣v￣)ノ\", \"(￣l￣)ノ\", \"( ￣ー￣)\", \"(‾◡◝)\", \"(￣_,￣ )\", \"( ﹁ ﹁ ) ~→\", \"<(￣ ﹌ ￣)@m\", \"ꉂ-ꉂ(ˊᗜˋ*)\", \"(｀・ω・´）\", \"༼ つ ◕_◕ ༽つ\", \"ヽ(✿ﾟ▽ﾟ)ノ (°ー°〃)\",\n            \"ヾ(￣▽￣)Bye~Bye~\", \"(◉ω◉υ)⁼³₌₃\", \"(●—●)\", \"(｡･∀･)ﾉﾞ\", \"┬─┬ ノ('-'ノ)\", \"┸━━┸)>口<)\", \"(-.-)..zzZZ\", \"(｡◝ᴗ◜｡)\", \" =͟͟͞͞(꒪ᗜ꒪ ‧̣̥̇)\", \"(˵¯͒〰¯͒˵)\"]\n    }\n\n\n    private static isKaomojiMenuCloseEventListenerAdded : boolean = false;\n    /**\n     * 构建表情按钮并返回按钮实例\n     * @returns 创建的表情按钮\n     */\n    private static buildKaomojiButton(): HTMLButtonElement {\n        if (this.KaomojiButton) return this.KaomojiButton;\n        const button = document.createElement(\"button\");\n        button.id = \"kaomoji-button\";\n        button.className = \"kaomoji-button\";\n        button.type = 'button';\n        button.addEventListener(\"click\", () => {\n            if (!this.KaomojiMenuObject.menu || this.KaomojiMenuObject.menu.style.display === \"none\") {\n                this.kaomojiHandler('all');\n            } else if (this.KaomojiMenuObject.menu.style.display !== \"none\") {\n                this.KaomojiMenuObject.menu.style.display = \"none\";\n                this.KaomojiShouldShow = false;\n            }\n        });\n        if(!this.isKaomojiMenuCloseEventListenerAdded){\n            document.addEventListener('click', (event) => {\n                const target = event.target as HTMLElement; // 将事件目标转换为 HTMLElement 类型\n                if (!target.closest('#kaomoji-menu') && !target.closest('#kaomoji-button')  && this.KaomojiMenuObject.menu && this.KaomojiShouldShow) {\n                    this.KaomojiMenuObject.menu!.style.display = \"none\";\n                    this.KaomojiShouldShow = false;\n                }\n            });\n            this.isKaomojiMenuCloseEventListenerAdded = true;\n        }\n        button.innerHTML = \":)\";\n\n        this.ResizeKaomojiButton();\n        this.KaomojiButton = button;\n        document.body.appendChild(button);\n        return button;\n    }\n\n    /**\n     * 调整按钮位置\n     */\n    private static ResizeKaomojiButton() {\n        if (this.InputElement && this.KaomojiButton) {\n            this.KaomojiButton.style.top = parseInt(this.InputElement.style.top) - window.innerHeight*0.026 + \"px\";\n            this.KaomojiButton.style.left = parseInt(this.InputElement.style.left) - window.innerHeight*0.026 + \"px\";\n        }\n    }\n    /**\n     * 获取表情菜单\n     * @param key 要获取表情菜单的索引\n     * @returns 表情菜单的元素\n     */\n    private static getKaomojiMenu(key: string): HTMLDivElement {\n        // 获取表情菜单 如果不存在则创建\n        const { kaomojiContainer, menu }\n        : { kaomojiContainer: HTMLDivElement; menu: HTMLDivElement; }\n            = this.KaomojiMenuObject.menu\n                ? { kaomojiContainer: this.KaomojiMenuObject.container!, menu: this.KaomojiMenuObject.menu! }\n                : ChatroomModule.buildKaomojiMenu();\n\n        // 设置表情菜单内容\n        this.selectKaomojiTitle(kaomojiContainer, key);\n        return menu;\n    }\n\n    /**\n     * 点击表情元素后的事件处理\n     * &gt;>   &lt;<\n     */\n    private static kaomojiClick(event: MouseEvent, kaomojiElement: HTMLDivElement): void {\n        if (event.button === 0) { // 左键点击 将表情插入到输入框当前光标位置，如果不在焦点则插入到末尾\n\n            if (this.InputElement) {\n                // 获取光标位置\n                const cursorPosition = this.InputElement.selectionStart;\n                if (cursorPosition === null || cursorPosition == -1) {\n                    this.InputElement.value += kaomojiElement.textContent;\n                } else {\n                    // 插入字符串\n                    const value = this.InputElement.value;\n                    const newValue = value.substring(0, cursorPosition) + kaomojiElement.textContent + value.substring(cursorPosition);\n                    this.InputElement.value = newValue;\n                    // 将光标位置移到插入字符串后面\n                    const newCursorPosition = cursorPosition + (kaomojiElement.textContent == null ? 0 : kaomojiElement.textContent.length);\n                    this.InputElement.setSelectionRange(newCursorPosition, newCursorPosition);\n                }\n            }\n        } else if (event.button === 2) { // 右键点击直接使用*消息发送表情\n            SendEmote(kaomojiElement.textContent);\n        } else if (event.button === 1) { // 中键点击直接发送表情\n            SendChat(kaomojiElement.textContent);\n        }\n    }\n\n\n    /**\n     * 构建表情菜单 并填充内容\n     * @returns 表情菜单的div元素包含菜单和菜单内表情容器元素\n     */\n    private static buildKaomojiMenu() {\n        // 创建表情菜单的div元素\n        const menu: HTMLDivElement = document.createElement('div');\n        menu.id = 'kaomoji-menu';\n        menu.style.display = 'flex';//\n\n        // 创建表情菜单标题的div元素\n        const menuTitle: HTMLDivElement = document.createElement('div');\n        // 创建表情菜单选择标题元素\n        const menuTitleTextSet: { [key: string]: HTMLDivElement } = this.menuTitleTextSet;\n\n\n        // 创建表情菜单标题关闭按钮的div元素\n        const menuTitleClose: HTMLButtonElement = document.createElement('button');\n        menuTitleClose.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"red\" />\n        </svg>`\n\n        // 创建表情容器的div元素\n        const kaomojiContainer: HTMLDivElement = document.createElement('div');\n\n        // 将表情菜单标题、表情容器添加到表情菜单div元素中  关闭按钮的添加在选择菜单添加之后\n        menu.appendChild(menuTitle);\n        menu.appendChild(kaomojiContainer);\n\n\n        // 设置除菜单按钮之外的其他元素的类名\n        menu.className = 'kaomoji-menu';\n        menuTitle.className = 'kaomoji-title';\n        menuTitleClose.className = 'kaomoji-title-close';\n        kaomojiContainer.className = 'kaomoji-container';\n\n        // 监听表情菜单标题关闭按钮的点击事件，点击时隐藏表情菜单\n        menuTitleClose.addEventListener('click', () => {\n            menu.style.display = 'none';\n            this.KaomojiShouldShow = false;\n        });\n\n        // 处理表情选择菜单\n        for (const key in menuTitleTextSet) {\n            /** 获取菜单标题元素的索引key key为中文菜单的字符串在这里{@link menuTitleTextSet} */\n\n            // 赋值菜单选择按钮的内容\n            menuTitleTextSet[key].innerHTML = key;\n            // 类名\n            menuTitleTextSet[key].className = 'kaomoji-title-text';\n            // 添加到菜单标题元素中\n            menuTitle.appendChild(menuTitleTextSet[key]);\n\n            // 为按钮添加点击事件\n            menuTitleTextSet[key].addEventListener('click', () => {\n                /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n                const selectKey = this.getKaomojiSelectKey(key);\n                this.selectKaomojiTitle(kaomojiContainer, selectKey)\n            })\n        }\n\n        // 添加关闭按钮\n        menuTitle.appendChild(menuTitleClose);\n\n        // 将表情菜单标题、表情容器和表情菜单对象保存到静态属性中\n        this.KaomojiMenuObject = { title: menuTitle, container: kaomojiContainer, menu: menu };\n\n        document.body.appendChild(menu);\n        // 返回表情菜单标题、表情容器和表情菜单对象\n        return { kaomojiContainer, menu };\n    }\n\n    /**\n     * 将菜单的样式设置成当前选择的样式\n     * @param selectKey 表情库的中文key\n     */\n    private static selectMenuTitleStyleHandle(selectKey: string) {\n        const _className = 'kaomoji-title-text-active';\n        if (!this.menuTitleTextSet[selectKey].classList.contains(_className)) {\n            this.menuTitleTextSet[selectKey].classList.add(_className);\n        }\n        for (const key2 in this.menuTitleTextSet) {\n            if (key2 != selectKey) {\n                this.menuTitleTextSet[key2].classList.remove('kaomoji-title-text-active');\n            }\n        }\n    }\n\n    /**\n     * 将中文key变为表情库的key\n     * @param key 将中文key变为表情库的key\n     * @returns 返回表情库key\n     */\n    private static getKaomojiSelectKey(key: string): string {\n        /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n        let selectKey: string | null = null;\n        switch (key) {\n            case '开心':\n                selectKey = 'hp';\n                break;\n            case '难过':\n                selectKey = 'sd';\n                break;\n            case '害羞':\n                selectKey = 'sy';\n                break;\n            case '生气':\n                selectKey = 'ar';\n                break;\n            case '惊讶':\n                selectKey = 'sp';\n                break;\n            case '困惑':\n                selectKey = 'cf';\n                break;\n            case '搞怪':\n                selectKey = 'nt';\n                break;\n            default:\n                selectKey = 'all';\n                break;\n        }\n        return selectKey;\n    }\n\n    /**\n     * 将表情库的key变为中文菜单key\n     * @param selectKey 将中文key变为表情库的key\n     * @returns 返回表情库key\n     */\n    private static getKaomojiKey(selectKey: string): string {\n        /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n        let key: string | null = null;\n        switch (selectKey) {\n            case 'hp':\n                key = '开心';\n                break;\n            case 'sd':\n                key = '难过';\n                break;\n            case 'sy':\n                key = '害羞';\n                break;\n            case 'ar':\n                key = '生气';\n                break;\n            case 'sp':\n                key = '惊讶';\n                break;\n            case 'cf':\n                key = '困惑';\n                break;\n            case 'nt':\n                key = '搞怪';\n                break;\n            default:\n                key = '全部';\n                break;\n        }\n        return key;\n    }\n\n    /**\n     * 选择标题按钮时触发的方法\n     * @param kaomojiContainer 容纳表情的容器元素\n     * @param key 要显示表情库索引键 英文\n     */\n    private static selectKaomojiTitle(kaomojiContainer: HTMLDivElement, key: string): void {\n\n\n        const kaomojiList: string[] = key == \"all\" ? this.getAllKaomoji() : this.kaomojiSet[key]\n        // 设置表情菜单内容\n        kaomojiContainer.innerHTML = '';\n        const kaomojiClassName = 'kaomoji';\n        this.selectMenuTitleStyleHandle(this.getKaomojiKey(key));\n\n        for (const kaomoji of kaomojiList) {\n            const kaomojiElement: HTMLDivElement = document.createElement('div');\n            kaomojiElement.className = kaomojiClassName;\n            kaomojiElement.innerText = kaomoji;\n            if (key !== \"help\") {\n                kaomojiElement.addEventListener('click', (event) => {\n                    this.kaomojiClick(event, kaomojiElement);\n                });\n                // 阻断该元素的右键点击和中间点击事件\n                kaomojiElement.addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    this.kaomojiClick(event, kaomojiElement);\n                })\n                kaomojiElement.addEventListener('mousedown', (event) => {\n                    if (event.button === 1) {\n                        event.preventDefault();\n                        this.kaomojiClick(event, kaomojiElement);\n                    }\n                })\n            }\n            kaomojiContainer.appendChild(kaomojiElement);\n        }\n    }\n\n    /**\n     * 移除表情菜单\n     */\n    private static removeKaomojiMenu() {\n        if (this.KaomojiButton) {\n            this.KaomojiButton.remove();\n            this.KaomojiButton = null;\n        }\n        if (this.KaomojiMenuObject.menu) {\n            this.KaomojiMenuObject.menu.remove();\n            this.KaomojiMenuObject = {\n                menu: null,\n                title: null,\n                container: null,\n            };\n        }\n    }\n\n    /**\n     * 隐藏表情菜单\n     */\n    private static hideKaomojiMenu() {\n        if (this.KaomojiMenuObject.menu) {\n            this.KaomojiMenuObject.menu.style.display = \"none\";\n        }\n        if (this.KaomojiButton) {\n            this.KaomojiButton.style.display = \"none\";\n        }\n    }\n\n    /**\n     * 显示表情菜单\n     */\n    private static showKaomojiMenu() {\n        if (this.KaomojiMenuObject.menu && this.KaomojiShouldShow == true) {\n            this.KaomojiMenuObject.menu.style.display = 'flex';\n        }\n        if (this.KaomojiButton) {\n            this.KaomojiButton.style.display = 'inline';\n\n        }\n    }\n\n    /**\n     * 返回全部的表情\n     * @returns 全部的表情列表\n     */\n    private static getAllKaomoji(): string[] {\n        const allKaomojiList: string[] = [];\n        for (const key in this.kaomojiSet) {\n            if (key == 'help') continue;\n            for (const kaomoji of this.kaomojiSet[key]) {\n                allKaomojiList.push(kaomoji);\n            }\n        }\n        return allKaomojiList;\n    }\n}","import { hookFunction } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\nimport { CSShref } from \"utils\";\n\n\nexport const PlayerStorage = () => Player.XSA;\nexport const PlayerOnlineSharedSettingsStorage = () => Player.OnlineSharedSettings?.XSA;\nexport const ExtensionStorage = () => Player.ExtensionSettings.XSA as string;\nconst XSA_OnlineSharedSettingsDataKeyList = ['wombTattoosAppliedEffects', 'sensitiveLevel'];\nexport class DataModule extends BaseModule {\n\n    // 获取用户代理字符串\n    static userAgentString = navigator.userAgent;\n    // 创建正则表达式，匹配常见的浏览器版本信息\n    static browserVersionRegex = /(chrome|firefox|safari|opera|edge|msie|trident(?=\\/))\\/?\\s*(\\d+)/i;\n    // 使用正则表达式匹配浏览器版本信息\n    static match = this.userAgentString.match(this.browserVersionRegex);\n\n    static DefaultData: XSA_Data = {\n        haveWombTattoos: false,\n        wombTattoosAppliedEffects: [],\n        sensitiveLevel: 0,\n        resistCount: 0,\n        player_Progress: 0\n    }\n    static DefaultSetting: XSA_SettingsData = {\n\n    }\n    static DefaultOnlineSharedSettingsData: XSA_OnlineSharedSettingsData = {\n        wombTattoosAppliedEffects: [],\n        sensitiveLevel: 0\n    }\n    /**\n     * 浏览器名称\n     */\n    static browserName = this.match ? this.match[1] : 'unknown';\n    /**\n     * 浏览器版本\n     */\n    static browserVersion = this.match ? parseInt(this.match[2]) : -1;\n\n    public Load(): void {\n        this.hookListHandle();\n\n        DataModule.allDataTake();\n\n        DataModule.SyncDataForPlayer();\n\n        setTimeout(() => {\n            ActivityChatRoomArousalSync(Player);\n        }, 1000);\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.moduleName = \"DataModule\";\n        this.priority = 0;\n\n        window.BROWSER_NAME = DataModule.browserName;\n        window.BROWSER_VERSION = DataModule.browserVersion;\n\n        const linkElement = document.createElement(\"link\");\n        linkElement.rel = \"stylesheet\";\n        linkElement.type = \"text/css\";\n        linkElement.href = CSShref;\n\n        // 将 link 元素插入到 head 标签中\n        document.head.appendChild(linkElement);\n\n    }\n\n    private hookListHandle(): void {\n        hookFunction('ChatRoomLeave', this.priority, (args, next) => {\n            DataModule.allDataSave();\n            return next(args);\n        });\n        // hookFunction(\"ChatRoomSync\", this.priority, (args, next) => {\n        //     return next(args);\n        // });\n        hookFunction('ChatRoomSync', this.priority, (args, next) => {\n            DataModule.allDataSave();\n            return next(args);\n        });\n    }\n\n    /**\n     * 从ExtensionStorage获取mod数据\n     */\n    public static allDataTake() {\n        // 处理XSASettingAndData的获取 从ExtensionStorage获取数据\n        if (ExtensionStorage()) {\n            // 处理XSASettingAndData的获取 从ExtensionStorage获取数据\n            Player.XSA = JSON.parse(LZString.decompressFromBase64(ExtensionStorage()) ?? '') as XSASettingAndData\n            // 如果没有获取到数据则读取默认数据\n            for (const k in Player.XSA){\n                // 处理data\n                if (k === 'data'){\n                    for (const k2 in Player.XSA.data){\n                        if (Player.XSA.data[k2] === undefined){\n                            Player.XSA.data[k2] = this.DefaultData[k2]\n                        }\n                    }\n                }\n                // 处理settings\n                if (k === 'settings') {\n                    for (const k3 in Player.XSA.settings){\n                        if (Player.XSA.settings[k3] === undefined){\n                            Player.XSA.settings[k3] = this.DefaultSetting[k3]\n                        }\n                    }\n                }\n            }\n        } else {\n            // 如果没有定义ExtensionStorage 则读取默认数据\n            Player.XSA = {\n                version: XSActivity_VERSION,\n                data: this.DefaultData,\n                settings: this.DefaultSetting\n            }\n        }\n\n        // 将获取到的数据输出到PlayerOnlineSharedSettingsStorage\n        if (PlayerOnlineSharedSettingsStorage()) {\n            Player.OnlineSharedSettings!.XSA = {\n                // 需要手动处理每一条需要的 PlayerOnlineSharedSettings 后续如果有使用额外的数据需要手动添加\n                wombTattoosAppliedEffects: Player.XSA.data.wombTattoosAppliedEffects ?? [],\n                sensitiveLevel: Player.XSA.data.sensitiveLevel ?? 0\n            }\n        } else {\n            Player.OnlineSharedSettings!.XSA = this.DefaultOnlineSharedSettingsData\n        }\n    }\n\n    /**\n     * 储存设置到ExtensionStorage\n     */\n    public static allDataSave() {\n        if (!ExtensionStorage()) {\n            Player.ExtensionSettings.XSA = ''\n        }\n        const data: XSASettingAndData = {\n            version: PlayerStorage()?.version ?? XSActivity_VERSION,\n            settings: PlayerStorage()?.settings ?? <XSA_SettingsData>{},\n            data: PlayerStorage()?.data ?? <XSA_Data>{},\n        }\n        Player.ExtensionSettings.XSA = LZString.compressToBase64(JSON.stringify(data));\n        ServerPlayerExtensionSettingsSync('XSA');\n    }\n\n    /**\n     * 保存设置到PlayerStorage\n     * @param settingKey 要保存的设置 key\n     * @param settingValue 要保存的值\n     */\n    public static SaveSettings(settingsItem: { [settingKey: string]: any }): void {\n        const settingsData = PlayerStorage()?.settings;\n        for (const item in settingsItem) {\n            if (settingsData && settingsData[item] != settingsItem[item]) {\n                settingsData[item] = settingsItem[item];\n            }\n        }\n    }\n    public static SaveData(dataItem: { [dataKey: string]: any }): void {\n        const data = PlayerStorage()?.data;\n        const OnlineSharedSettings = PlayerOnlineSharedSettingsStorage();\n        for (const itemKey in dataItem) {\n            if (data && data[itemKey] != dataItem[itemKey]) {\n                data[itemKey] = dataItem[itemKey];\n            }\n            if (OnlineSharedSettings && XSA_OnlineSharedSettingsDataKeyList.includes(itemKey)) {\n                OnlineSharedSettings[itemKey as keyof XSA_OnlineSharedSettingsData] = dataItem[itemKey];\n            }\n        }\n    }\n    /**\n     * 将PlayerStorage中的数据同步到Player 在模块加载时 takeData后调用\n     * @see Load\n     * @returns 无\n     */\n    public static SyncDataForPlayer() {\n        const data = PlayerStorage()?.data;\n        if (!data) return;\n        if (Player.ArousalSettings && Player.ArousalSettings.Progress && data.player_Progress) {\n            Player.ArousalSettings.Progress = data.player_Progress;\n        }\n        ActivityOrgasmGameResistCount = data.resistCount ?? 0\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction } from \"utils\";\n\n/**\n * 进程注入集合\n */\ninterface IProcessInjectionSetOBJ {\n    [key: string]: IInjectionCode\n}\n/**\n * 注入进程对象\n */\nexport interface IInjectionCode {\n    name: string,\n    priority: number,\n    preconditions: () => boolean,\n    timeInterval: number | (() => number),\n    code: () => void\n}\n\nexport class TimerProcessInjector extends BaseModule {\n\n    /** 注入进程的顺序队列 */\n    private static processInjectionSequence: IInjectionCode[] = [];\n    /** 注入进程集合 */\n    private static processInjectionSet: IProcessInjectionSetOBJ = {};\n    /** 注入进程集合 需要在Init函数的末尾注入 */\n    public static set setProcessInjectionSequence(sequence: IInjectionCode[]) {\n        for (const c of sequence) {\n            this.processInjectionSet[c.name] = c;\n        }\n    }\n\n    public Load(): void {\n        TimerProcessInjector.ProcessInjection();\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.moduleName = \"TimerProcessInjector\"\n        this.priority = 999;\n    }\n\n    /** 记录上次调用时间 & 时间间隔 的集合 */\n    private static TimerLastCycleCallSet: { [name: string]: { timerLastCycleCall: number, timeInterval: number, isDynamic: boolean, getTimeInterval?: () => number } } = {};\n\n    /**\n     * 时序进程注入\n     */\n    private static ProcessInjection(): void {\n        // 根据优先级排序 从小到大 priority越大越靠后\n        this.InjectionSort();\n\n        // 设置计时器Set\n        for (const c of this.processInjectionSequence) {\n            if (typeof c.timeInterval == 'number') {\n                this.TimerLastCycleCallSet[c.name] = {\n                    timerLastCycleCall: -1,\n                    timeInterval: c.timeInterval,\n                    isDynamic: false\n                }\n            } else {\n                this.TimerLastCycleCallSet[c.name] = {\n                    timerLastCycleCall: -1,\n                    timeInterval: c.timeInterval(),\n                    isDynamic: true,\n                    getTimeInterval: c.timeInterval\n                }\n            }\n\n        }\n\n        conDebug(`[TimerProcessInjector] Injection Process... Injection Count: ${this.processInjectionSequence.length}`);\n        // 注入TimerProcess\n        hookFunction(\"TimerProcess\", 100, (args, next) => {\n            const currentTime = CommonTime();\n            for (const c of this.processInjectionSequence) {\n                if (c.name == 'RandomTrance'){\n                    conDebug(`[TimerProcessInjector] ${c.name} is Running...`);\n                }\n\n                // 初始化计时器\n                if (this.TimerLastCycleCallSet[c.name].timerLastCycleCall == -1) this.TimerLastCycleCallSet[c.name].timerLastCycleCall == currentTime;\n\n                if (c.name == 'RandomTrance'){\n                    conDebug(`[TimerProcessInjector]\\n this.TimerLastCycleCallSet[c.name].timerLastCycleCall + this.TimerLastCycleCallSet[c.name].timeInterval:${this.TimerLastCycleCallSet[c.name].timerLastCycleCall + this.TimerLastCycleCallSet[c.name].timeInterval}\\n currentTime: ${currentTime}\\n`);\n                }\n                // 判定前置条件 && 时间间隔已到\n                if (c.preconditions() && this.TimerLastCycleCallSet[c.name].timerLastCycleCall + this.TimerLastCycleCallSet[c.name].timeInterval <= currentTime) {\n                    if (c.name == 'RandomTrance'){\n                        conDebug(`[TimerProcessInjector]\\n 恍惚触发!!`);\n                    }\n                    c.code();\n                    if (typeof c.timeInterval !== 'number') {\n                        conDebug(`[TimerProcessInjector] ${c.name} is Dynamic... value: ${this.TimerLastCycleCallSet[c.name].timeInterval}.`);\n                    }\n\n                    this.TimerLastCycleCallSet[c.name].timerLastCycleCall = currentTime;\n                    if (this.TimerLastCycleCallSet[c.name].isDynamic) {\n                        this.TimerLastCycleCallSet[c.name].timeInterval = this.TimerLastCycleCallSet[c.name].getTimeInterval!();\n                        conDebug(`[TimerProcessInjector] ${c.name} is Dynamic... value: ${this.TimerLastCycleCallSet[c.name].timeInterval}.`);\n                    }\n                }\n\n                //conDebug(`[TimerProcessInjector] ${c.name} is Done.`);\n            }\n\n            return next(args);\n        });\n\n\n    }\n\n    /**\n     * 注入排序\n     */\n    private static InjectionSort(): void {\n        this.processInjectionSequence = Object.values(this.processInjectionSet)\n            .sort((a, b) => a.priority - b.priority);\n    }\n\n\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseModule } from \"./BaseModule\";\nimport { conDebug, GetModule, timeRange, sendChangeLog, MSGType, hookFunction } from \"utils\";\n\n\nexport class DrawModule extends BaseModule {\n\n    public Load(): void {\n\n        // 绘制闪光的hook\n        hookFunction(\"DrawProcessScreenFlash\", 999, (args, next) => {\n            DrawModule.DrawFlash();\n            return next(args);\n        });\n\n        // 绘制模糊效果的hook\n        hookFunction('Player.GetBlurLevel', -999, (args, next) => {\n            let blurLevel = next(args);\n            if (!CommonPhotoMode && blurLevel === 0 && DrawModule.blurLevel !== 0) {\n                blurLevel = DrawModule.blurLevel;\n            }\n            return blurLevel;\n        });\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.moduleName = \"DrawModule\";\n        this.priority = 20;\n    }\n\n    /** 模糊等级 */\n    public static blurLevel: number = 0;\n\n    /** 绘制闪光事件map */\n    public static DrawFlashEventMap: Map<symbol, { color: string, time: number, intensity: number, evenEnd: boolean, callback?: () => void }>\n        = new Map<symbol, { color: string, time: number, intensity: number, evenEnd: boolean, callback?: () => void }>();\n\n    /**\n     * 设置一个闪光事件\n     * @param color 闪光颜色\n     * @param time 闪光时间\n     * @param intensity 闪光强度\n     * @param callback 闪光结束后的回调函数\n     */\n    public static setFlash(color: string, time: number, intensity: number, callback?: () => void): void {\n        this.DrawFlashEventMap.set(Symbol(), { color: color, time: time, intensity: intensity, evenEnd: false, callback: callback });\n    }\n\n    /** 当前正在处理的闪光事件的结束时间 */\n    public static FlashEndTime: number | null = null;\n\n\n    /**\n     * 绘制闪光效果\n     */\n    private static DrawFlash(): void {\n        // 如果当前屏幕不是聊天室且没有触发的闪光事件，则直接返回\n        if (CurrentScreen !== 'ChatRoom' && this.DrawFlashEventMap.size === 0) return;\n\n        // 遍历所有触发的闪光事件\n        for (const [key, event] of this.DrawFlashEventMap.entries()) {\n            // 如果事件触发已完成，则删除该事件并继续处理下一个事件\n            if (event.evenEnd) {\n                this.DrawFlashEventMap.delete(key);\n                continue;\n            }\n            // 获取当前时间\n            const commonTime = CommonTime();\n            // 闪光结束时间 如果存在则不变 如果不存在则初始化为当前时间加上闪光时间\n            this.FlashEndTime = this.FlashEndTime ?? event.time + commonTime;\n            // 如果闪光结束时间晚于当前时间\n            if (this.FlashEndTime > commonTime) {\n                // 计算闪光的透明度\n                const FlashAlpha = this.DrawGetFlashAlpha(this.FlashEndTime - commonTime, event.intensity);\n                // 绘制矩形\n                DrawRect(0, 0, 2000, 1000, event.color + FlashAlpha);\n                // 跳出循环进入调用本函数的下一个大循环\n                break;\n            } else {\n                // 标记事件触发完成\n                event.evenEnd = true;\n                // 清空闪光结束时间 以备下个事件使用\n                this.FlashEndTime = null;\n                // 调用回调函数\n                event.callback?.();\n                continue;\n            }\n        }\n    }\n\n    /**\n     * 设置当前屏幕模糊并持续一段时间\n     * @param duration 持续时间\n     * @param level 模糊等级\n     */\n    public static setDrawBlur(duration: number, level: number) {\n        this.blurLevel = level;\n        setTimeout(() => {\n            this.blurLevel = 0;\n        }, duration);\n    }\n\n    /**\n     * Gets the alpha of a screen flash. append to a color like \"#111111\" + DrawGetScreenFlash(FlashTime)\n     * @param  flashTime - Time remaining as part of the screen flash\n     * @param flashIntensity - Intensity of the screen flash\n     * @returns - alpha of screen flash\n     */\n    private static DrawGetFlashAlpha(flashTime: number, flashIntensity: number) {\n        let alpha = Math.max(0, Math.min(255, Math.floor(flashIntensity * (1 - Math.exp(-flashTime / 2500))))).toString(16);\n        if (alpha.length < 2) alpha = \"0\" + alpha;\n        return alpha;\n    }\n\n\n    /**\n     * Calculates dynamic intensity based on elapsed time.\n     * This example simulates a flickering effect.\n     * @param elapsedTime - The time elapsed since the flash started, in milliseconds.\n     * @param baseIntensity - The base intensity of the flash.\n     * @param totalDuration - The total duration of the flash.\n     * @returns - Adjusted intensity.\n     */\n    private static calculateDynamicIntensity(elapsedTime: number, baseIntensity: number, totalDuration: number): number {\n        // Oscillation period (in milliseconds)\n        const period = 500;\n        // Calculate phase of the sine wave\n        const phase = (2 * Math.PI * elapsedTime) / period;\n        // Oscillate intensity around the baseIntensity value\n        return baseIntensity + baseIntensity * 0.1 * Math.sin(phase);\n    }\n\n}\n\n\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [18,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [46,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [62,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [178, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [257, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [282, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n","import { BaseModule } from \"./BaseModule\";\nimport { DataModule } from \"./MData\";\nimport { hookFunction, patchFunction, SendActivity } from \"utils\";\nimport { TimerProcessInjector } from \"./MTimerProcessInjector\";\n\n\nexport class ArousalModule extends BaseModule {\n    public Init(): void {\n        this.moduleName = \"ArousalModule\";\n        this.priority = 60;\n\n        TimerProcessInjector.setProcessInjectionSequence = [\n            {// 处理边缘计数计算 并且每45秒 增加一层 抵抗高潮难度  如果高潮则禁用inputChat\n                name: \"EdgeTimerLastCycleCall\",\n                priority: 0,\n                preconditions: () => Player.ArousalSettings?.Progress !== undefined,\n                timeInterval: 45000,\n                code: () => {\n                    if (Player.ArousalSettings!.Progress >= 93) {\n                        ActivityOrgasmGameResistCount++;\n                        DataModule.SaveData({ resistCount: ActivityOrgasmGameResistCount, Player_Progress: Player.ArousalSettings!.Progress });\n                    } else {\n                        if (ActivityOrgasmGameResistCount >= 1) ActivityOrgasmGameResistCount--;\n                    }\n                }\n            },\n            {// 每1.5秒检查是否高潮或在抵抗  如果高潮则禁用inputChat 如果在抵抗则每1.5秒有30%概率发送一次抵抗反应\n                name: \"OrgasmTimerLastCycleCall\",\n                priority: 1,\n                preconditions: () => CurrentScreen == \"ChatRoom\" && Player.MemberNumber !== undefined,\n                timeInterval: 1500,\n                code: () => {\n                    const inputElement: HTMLTextAreaElement | null = document.getElementById(\"InputChat\") as HTMLTextAreaElement;\n                    const orgasmStage = Player.ArousalSettings?.OrgasmStage;\n                    if (orgasmStage == 2 || orgasmStage == 1) {\n                        this.setFormElementsForAbsentState(inputElement, true);\n                        if (Player.ArousalSettings?.OrgasmStage == 1) {\n                            if (Math.random() < 0.3) SendActivity(this.getEndureDesc, Player.MemberNumber!);\n                        }\n                    } else {\n                        this.setFormElementsForAbsentState(inputElement, false);\n                    }\n                }\n            }\n        ];\n    }\n\n    public Load(): void {\n        this.patchListHandler();\n        this.Loaded = true;\n\n        hookFunction('ActivityOrgasmStart', 999, (args, next) => {\n            const P = args[0] as Character;\n            if (P.IsPlayer() && ArousalModule.needActivityOrgasmRuined) {\n                ActivityOrgasmRuined = true;\n            }\n            return next(args);\n        })\n    }\n\n    /** 对于忍耐高潮时的反应描述 */\n    private descriptionOfEnduranceActivities = [\n        `{source}脚趾一蜷一缩，难耐的交织.`,\n        `{source}闭眼忍耐，鼻息中泄露出粉红的喘息.`,\n        `{source}蜷缩脚趾忍耐着连续的快感.`,\n        `{source}难耐的双腿颤抖着，身体的每一处都充满快感.`,\n        `{source}拼命咬住牙齿，却从鼻腔泄露出诱人的声音.`,\n        `{source}在汹涌的快感下浑身粉红，奋力的想要忍住高潮.`,\n        `{source}浑身颤抖的抵抗高潮的逼近.`\n    ];\n\n    /** 获取忍耐高潮时的反应描述 */\n    get getEndureDesc(): string {\n        return this.descriptionOfEnduranceActivities[Math.floor(Math.random() * this.descriptionOfEnduranceActivities.length)];\n    }\n\n\n    public static needActivityOrgasmRuined: boolean = false;\n\n\n    /** 默认的输入框样式 */\n    inputDefaultStyle: { backgroundColor: string, borderColor: string, borderRadius: string } | undefined = undefined;\n\n    /**\n     * 获取{@link HTMLTextAreaElement}的默认样式，根据{@param isAbsent}决定是否禁用或取消禁用\n}\n     * @param formElements 表单元素\n     * @param isAbsent 是否为失能状态\n     * @returns 无\n     */\n    setFormElementsForAbsentState(formElements: HTMLTextAreaElement | null, isAbsent: boolean): void {\n        if (!formElements) return;\n        if (isAbsent) {\n            if (!formElements.readOnly) {\n                if (!this.inputDefaultStyle) {\n                    this.inputDefaultStyle = {\n                        backgroundColor: formElements.style.backgroundColor,\n                        borderColor: formElements.style.borderColor,\n                        borderRadius: formElements.style.borderRadius\n                    };\n                }\n                formElements.readOnly = true;\n                formElements.style.backgroundColor = \"#8d6f83\";\n                formElements.style.borderColor = \"#ea44a9\";\n                formElements.style.borderRadius = \"5px\";\n            }\n        } else {\n            if (formElements.readOnly) {\n                formElements.readOnly = false;\n                if (this.inputDefaultStyle) {\n                    formElements.style.backgroundColor = this.inputDefaultStyle.backgroundColor;\n                    formElements.style.borderColor = this.inputDefaultStyle.borderColor;\n                    formElements.style.borderRadius = this.inputDefaultStyle.borderRadius;\n                }\n            }\n        }\n    }\n\n    /**\n     * 补丁列表处理\n     */\n    patchListHandler(): void {\n        // 处理OrgasmStart\n        patchFunction(\"ActivityOrgasmStart\",\n            {// XSA补丁处理~ 基础高潮时间为 4~7秒, 每边缘45秒钟增加随机的 300ms ~ 1300ms 的高潮时间。 最多增加 20000ms，也就是最长高潮时间为 27 秒\n                \"C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\":\n                    `if (window?.XSActivity_Loaded === undefined) {\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\n            } else {\n                const addedTime = (Math.random() + 0.3) * 1000 * ActivityOrgasmGameResistCount;\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (addedTime > 20000 ? 20000 : addedTime) + 4000 + (3000 * Math.random());\n            }`,\n                // 高潮时将抵抗难度减半而非变为0\n                \"ActivityOrgasmGameResistCount = 0;\":\n                    \"ActivityOrgasmGameResistCount = Math.round(ActivityOrgasmGameResistCount / 2);\"\n            });\n    }\n\n}\n\n","import { BaseModule } from \"./BaseModule\";\nimport { DataModule, PlayerStorage } from \"./MData\";\nimport { CharacterAppearanceIsLayerIsHave, hookFunction, PatchHook, SendActivity, PH, SendLocalMessage } from \"utils\";\nimport { TimerProcessInjector } from \"./MTimerProcessInjector\";\nimport { DrawModule } from \"./MDrawModule\";\nimport randomColor from 'randomcolor';\nimport { ArousalModule } from \"./MArousal\";\n\n\ntype wombTattoosLayersName = \"Zoom\" | \"Big\" | \"Bloom\" | \"BottomSpike\" | \"Flash\" | \"Fly\" | \"Grass\" | \"Grow\" | \"GrowHollow\" | \"HeartSmallOutline\" | \"Heartline\" | \"HeartSmall\" | \"HeartSolid\" | \"HeartWings\" | \"In\" | \"Leaves\" | \"MidSpike\" | \"Ribow\" | \"Sense\" | \"Shake\" | \"SideHearts\" | \"Swim\" | \"Thorn\" | \"ThornOut\" | \"TopSpike\" | \"Venom\" | \"Viper\" | \"Waves\" | \"WingSmall\";\n//  VVVV========淫纹大修=========VVVV  //\nexport class WombTattoosModule extends BaseModule {\n    public Init(): void {\n        this.moduleName = \"WombTattoosModule\";\n        this.priority = 100;\n\n        /**\n         * 设置定时器进程注入序列，用于管理各个检查和处理逻辑的执行顺序、优先级及条件等信息\n         */\n        TimerProcessInjector.setProcessInjectionSequence = [\n            {\n                name: \"WombTattoosCheck\",\n                priority: 10,\n\n                // 预先条件函数，判断是否满足执行该过程的条件\n                // 在本例中，返回值为 `WombTattoosModule.checkPlayerHaveWombTattoos()` 的结果\n                preconditions: () => WombTattoosModule.checkPlayerHaveWombTattoos() && WombTattoosModule.isCheckWombTattoosEffect,\n                timeInterval: 1000,\n\n                // 执行代码块，当预设条件满足时，会运行此函数体内的逻辑\n                // 此处功能：检查玩家当前应用的子宫纹身层，并根据子宫纹身效果模块(E)来决定哪些效果应当生效\n                code: () => {\n                    // 触发该代码块后 `isCheckWombTattoosEffect` 设置为 `false`，以防止后续的持续检查逻辑执行消耗资源\n                    WombTattoosModule.isCheckWombTattoosEffect = false;\n\n                    // 获取当前玩家应用的子宫纹身图层名称列表\n                    const wombTattoosAppliedLayerNames = WombTattoosModule.getAppliedLayerNames(Player);\n\n                    // 获取所有子宫纹身效果集合\n                    const E = WombTattoosModule.wombTattoosEffects;\n\n                    // 初始化已应用的效果列表\n                    const appliedEffects: WombTattoosEffect[] = [];\n\n                    // 如果有核心图层 HeartSmall\n                    if (wombTattoosAppliedLayerNames.includes('HeartSmall')) {\n                        // 遍历所有子宫纹身效果 \n                        for (const e in E) {\n                            const effect = E[e];\n                            const name = effect.name\n                            // 如果有心(小)图层 当前效果的所有关联图层都在玩家已应用的图层列表中，则添加该效果至已应用效果列表\n                            if (effect.layers.every(l => wombTattoosAppliedLayerNames.includes(l))) {\n                                appliedEffects.push(name);\n                            }\n                        }\n                    }\n\n                    // 处理敏感等级 敏感等级在激活敏感效果的前提下 每多一个效果等级+1 每级额外增加0.5倍的敏感度\n                    // 保存数据，将当前未应用的子宫纹身效果存储到游戏数据中\n                    DataModule.SaveData({ wombTattoosAppliedEffects: appliedEffects, sensitiveLevel: appliedEffects.length });\n                }\n            },\n            {\n                name: \"HaveWombTattoosEffectsHandle\",\n                priority: 11,\n                timeInterval: 200,\n                preconditions: () => (PlayerStorage()?.data?.haveWombTattoos ?? false) && (PlayerStorage()?.data?.wombTattoosAppliedEffects?.length ?? 0) > 0,\n                code: () => {\n                    // 获取所有子宫纹身效果集合\n                    const E = WombTattoosModule.wombTattoosEffects;\n                    // 遍历所有子宫纹身效果\n                    for (const e in E) {\n                        const effect = E[e];\n                        if (effect.defaultTimerCode) effect?.defaultTimerCode();\n                    }\n                }\n            },\n            {\n                name: \"RandomTrance\",\n                priority: 13,\n                timeInterval: WombTattoosModule.wombTattoosEffects.trance.dynamicTimeInterval!,\n                preconditions: () => WombTattoosModule.HasWombTattoosEffect(Player, 'trance'),\n                code: () => {\n                    WombTattoosModule.wombTattoosEffects.trance.customizeTimerCode!();\n                }\n            }\n        ];\n    }\n\n    public Load(): void {\n        /** 在加载角色画布时，如果是玩家 则 检查是否有纹身 如果有则 添加纹身效果指示器 */\n        hookFunction(\"CharacterLoadCanvas\", 0, (args, next) => {\n            if (args[0] === Player) {\n                this.checkHaveWombTattoosToAddOrRemoveEffect();\n            }\n            return next(args)\n        })\n\n        const hookList: { [functionName: string]: [PatchHook, number][] } = {}\n        const WE = WombTattoosModule.wombTattoosEffects\n        for (const e in WE) {\n            const name = WE[e].name\n            const hookItem = WE[name].hook;\n            if (!hookItem) continue;\n            for (const i in hookItem) {\n                if (hookList[i]) {\n                    hookList[i].push([hookItem[i].hook, hookItem[i].priority])\n                } else {\n                    hookList[i] = [[hookItem[i].hook, hookItem[i].priority]]\n                }\n            }\n        }\n        for (const fn in hookList) {\n            for (const h in hookList[fn]) {\n                hookFunction(fn, hookList[fn][h][1], hookList[fn][h][0])\n            }\n        }\n        this.Loaded = true;\n    }\n\n    private static isCheckWombTattoosEffect: boolean = false;\n    /** 玩家的纹身实例 */\n    static get PlayerWombTattoos(): Item | null {\n        for (const item of Player.Appearance) {\n            if (item.Asset.Name === \"WombTattoos\") {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 获取目标应用的纹身效果\n     * @param C 要获取的角色\n     * @returns 返回目标的已经应用的纹身效果列表\n     */\n    public static GetCharacterWombTattoosEffects(C: Character | PlayerCharacter): WombTattoosEffect[] | null {\n        if (C.IsOnline()) {\n            if (C.IsPlayer()) return C.XSA?.data?.wombTattoosAppliedEffects ?? [];\n            else return C.OnlineSharedSettings?.XSA?.wombTattoosAppliedEffects ?? [];\n        }\n        return [];\n    }\n\n    /**\n     * 检测目标角色是否具有对应的效果\n     * @param C 要检测的角色\n     * @param effectName 要检测的效果名\n     * @returns 是否有该效果\n     */\n    public static HasWombTattoosEffect(C: Character | PlayerCharacter, effectName: WombTattoosEffect): boolean {\n        const haveEffects = this.GetCharacterWombTattoosEffects(C);\n        if (haveEffects && haveEffects.includes(effectName)) return true;\n        else return false;\n    }\n\n    /**\n     * 添加子宫纹身效果的方法，可选检查指定层，默认不检查\n     * @param {boolean} checkLayer - 是否检查特定层，默认为false\n     */\n    private onHaveWombTattoos(checkLayer: boolean = false) {\n        // 保存数据，根据checkLayer参数决定是否使用Player的子宫纹身状态，否则默认为true\n        DataModule.SaveData({\n            haveWombTattoos: checkLayer ? WombTattoosModule.haveWombTattoos(Player) : true\n        });\n    }\n\n    /**\n     * 移除子宫纹身效果的方法，可选检查指定层，默认不检查\n     * @param {boolean} checkLayer - 是否检查特定层，默认为false\n     */\n    private offHaveWombTattoos(checkLayer: boolean = false) {\n        // 保存数据，根据checkLayer参数决定是否使用Player的子宫纹身状态，否则默认为false\n        DataModule.SaveData({\n            haveWombTattoos: checkLayer ? WombTattoosModule.haveWombTattoos(Player) : false\n        });\n    }\n\n    /**\n     * 检查玩家是否拥有子宫纹身以添加或移除相应效果的方法\n     */\n    private checkHaveWombTattoosToAddOrRemoveEffect() {\n        // 检查Player是否拥有子宫纹身\n        if (WombTattoosModule.haveWombTattoos(Player)) {\n            // 若有，则调用添加子宫纹身效果的方法\n            this.onHaveWombTattoos();\n            WombTattoosModule.isCheckWombTattoosEffect = true;\n        } else {\n            // 若无，则调用移除子宫纹身效果的方法\n            this.offHaveWombTattoos();\n            WombTattoosModule.isCheckWombTattoosEffect = false;\n        }\n    }\n\n    /** 储存的纹身图层数据 */\n    private wombTattoosLayers_data: AssetLayerDefinition[] | undefined;\n    /** 获取纹身图层定义数据 */\n    get wombTattoosLayers() {\n        if (this.wombTattoosLayers_data) return this.wombTattoosLayers_data;\n        return this.wombTattoosLayers_data = this.getWombTattoosLayers();\n    }\n    /** 纹身图层的名字 */\n    static wombTattoosLayersName: wombTattoosLayersName[] = [\n        \"Zoom\", // 膨胀\n        \"Big\", //大\n        \"Bloom\", // 开花 ::高潮渴望\n        \"BottomSpike\", // 底部尖刺\n        \"Flash\", // 爆炸\n        \"Fly\", // 飞  :开花 :: 恍惚 \n        \"Grass\", // 花托\n        \"Grow\", // 卵巢\n        \"GrowHollow\", // 卵巢-空心\n        \"HeartSmallOutline\", // 心 小边缘\n        \"Heartline\", // 心 边线\n        \"HeartSmall\", // 心 小\n        \"HeartSolid\", // 心 实心\n        \"HeartWings\", // 心 翅膀\n        \"In\", // 阴道\n        \"Leaves\", // 叶子\n        \"MidSpike\", // 中间尖刺\n        \"Ribow\", // 心 丝带\n        \"Sense\", // Sense(感官)\n        \"Shake\", // 摇晃\n        \"SideHearts\", // 两侧心\n        \"Swim\", // 精子\n        \"Thorn\", // 荆棘\n        \"ThornOut\", // 荆棘-两侧\n        \"TopSpike\", // 顶部尖刺\n        \"Venom\", // 毒液\n        \"Viper\", // 毒蛇\n        \"Waves\", // 波浪\n        \"WingSmall\" // 小翼\n    ]\n    static wombTattoosEffects: {\n        [key: string]:\n        {\n            name: WombTattoosEffect, layers: wombTattoosLayersName[],\n            defaultTimerCode?: () => void, customizeTimerCode?: () => void, highFrequencyTimerTimerCode?: () => void, dynamicTimeInterval?: () => number,\n            hook?: { [functionName: string]: { hook: PatchHook, priority: number } }\n        }\n    } = {\n            sensitive: { // 敏感提升\n                name: \"sensitive\",\n                layers: ['Leaves'],\n                hook: {\n                    ActivityTimerProgress: {\n                        priority: 3,\n                        hook: (args, next) => {\n                            const C = args[0] as Character;\n                            let addedProgress = args[1] as number;\n                            if (C.IsOnline()) {\n                                if (C.IsPlayer()) {\n                                    const data = PlayerStorage()?.data.wombTattoosAppliedEffects;\n                                    if (data?.find(e => e === 'sensitive')) {\n                                        // 如果sensitiveLevel未定义则设置为1 当sensitive触发时 sensitiveLevel >= 1\n                                        const sensitiveLevel = PlayerStorage()?.data?.sensitiveLevel ?? 1;\n                                        // 如果sensitiveLevel ==1 快感倍数为2[   x  *  (2 + (1 - 1) * 0.5)  ]\n                                        addedProgress = WombTattoosModule.handleProgressParametersBasedOnSensitivityLevel(addedProgress, sensitiveLevel);\n                                    }\n                                } else { // 处理非玩家自己的逻辑\n                                    const onlineSharedSettings = C.OnlineSharedSettings?.XSA;\n                                    if (onlineSharedSettings\n                                        && onlineSharedSettings.sensitiveLevel) {\n                                        if (onlineSharedSettings?.wombTattoosAppliedEffects?.find(e => e === 'sensitive')) {\n                                            const sensitiveLevel = onlineSharedSettings?.sensitiveLevel;\n                                            addedProgress = WombTattoosModule.handleProgressParametersBasedOnSensitivityLevel(addedProgress, sensitiveLevel);\n                                        }\n                                    }\n                                }\n                            }\n                            args[1] = addedProgress;\n                            return next(args)\n                        },\n                    }\n                }\n            },\n            // orgasmControl: () => { //高潮控制\n\n            // },\n            pinkShock: { //电击\n                name: \"pinkShock\",\n                layers: ['Flash'],\n                defaultTimerCode: () => {\n                    if (WombTattoosModule.HasWombTattoosEffect(Player, 'pinkShock')) {\n                        if (Math.random() < 0.003) {\n                            this.PinkShock();\n                        }\n                    }\n                }\n            },\n            trance: { // 迷幻 使用随机的 10 ~ 20 分钟 动态的时间间隔来控制时间间隔\n                name: 'trance',\n                layers: ['Bloom', 'Fly'],\n                defaultTimerCode: () => {\n                    if (WombTattoosModule.HasWombTattoosEffect(Player, 'trance') && this.IsTrancing) {\n                        if (Math.random() < 0.003) {\n                            ArousalModule.needActivityOrgasmRuined = true;\n                            ActivityOrgasmPrepare(Player);\n                            SendActivity(`${PH.s}被自己的淫纹影响，突然一阵剧烈的快感袭来，却仿佛梦幻般消失.....`, Player.MemberNumber!);\n                        }\n                        if (Math.random() < 0.02) {\n                            SendLocalMessage(this.getTranceMessage, 'trance-message', 10001);\n                        }\n                    }\n                },\n                customizeTimerCode: () => {\n                        // TODO: 迷幻演出\n                        WombTattoosModule.Trance();\n                },\n                dynamicTimeInterval: (): number => ((Math.random() + 1) * 20000) //////////////////测试使用0.333分钟~1.333分钟/////////////// 十~二十 分钟触发一次 600000 \n            }\n        }\n\n\n    /**\n     * 根据敏感等级处理进度参数----\n     * 如果sensitiveLevel ==1 快感倍数为2[   x  *  (2 + (1 - 1) * 0.5)  ]\n     * @param args 正常的增加进度\n     * @param sensitiveLevel 敏感等级\n     */\n    private static handleProgressParametersBasedOnSensitivityLevel(addedProgress: number, sensitiveLevel: number) {\n        addedProgress = addedProgress * (2 + (sensitiveLevel - 1) * 0.5);\n        return addedProgress;\n    }\n\n    private getWombTattoosLayers() {\n        const a = AssetFemale3DCG.find(group => group.Group === 'BodyMarkings')?.Asset as AssetDefinition.Item[]\n        return a.find(item => item.Name === \"WombTattoos\")?.Layer;\n    }\n\n\n\n    /**\n     * 判断目标角色是否有淫纹\n     */\n    public static haveWombTattoos(C: Character | PlayerCharacter): boolean {\n        //查找WombTattoos\n        for (const item of C.Appearance) {\n            if (item.Asset.Name === \"WombTattoos\") return true;\n        }\n        return false;\n    }\n    /**\n     * @see checkHaveWombTattoosToAddOrRemoveEffect\n     * @see onHaveWombTattoos\n     * @see offHaveWombTattoos\n     * @returns 玩家的XSA.data.haveWombTattoos是否为真 表示玩家是否有淫纹\n     */\n    public static checkPlayerHaveWombTattoos() {\n        return Player.XSA?.data.haveWombTattoos ?? false\n    }\n\n    /**\n     * 返回目标角色应用的淫纹图层\n     * @param C 要检测的角色\n     * @returns 已经应用的图层\n     */\n    public static getAppliedLayerNames(C: Character | PlayerCharacter): string[] {\n        const appliedLayersNames = [];\n        const wombTattoos = C.DrawAppearance?.find(item => item.Asset.Name === \"WombTattoos\");\n        if (wombTattoos) {\n            const asset = wombTattoos.Asset;\n            if (InventoryChatRoomAllow(asset.Category as readonly ServerChatRoomBlockCategory[])) {\n                const typeRecord = wombTattoos.Property && wombTattoos.Property.TypeRecord;\n                const appliedLayers = asset.Layer.filter(layer => CharacterAppearanceIsLayerIsHave(C, layer, typeRecord)); \n                const results = appliedLayers.map(item => item.Name);\n                for (const name of results) {\n                    if (name !== null) appliedLayersNames.push(name);\n                }\n            }\n        }\n        return appliedLayersNames;\n    }\n\n\n\n    public static PinkShock() {\n        AudioPlayInstantSound(\"Audio/Shocks.mp3\");\n        SendActivity(`${PH.s}的淫纹突然发出一丝诱人的光芒，释放出一道奇异的粉色电流!`, Player.MemberNumber!);\n        InventoryShockExpression(Player);\n        const currentProgress = Player.ArousalSettings?.Progress;\n        const addedProgress = (currentProgress ?? 0) + 30;\n        if (addedProgress > 100) {\n            ActivitySetArousal(Player, 100);\n            ActivityOrgasmPrepare(Player);\n        } else {\n            ActivitySetArousal(Player, addedProgress);\n        }\n        DrawModule.setFlash('#FF2ED9', 1000, 500);\n    }\n\n    private static readonly tranceMessage: string[] = [\n        `你的身体开始发软，大脑开始一片空白.....`,\n        `你的意识突然变得模糊，似乎在进入一种未知的状态......`,\n        `你的身体突然抖动一下，好像看到了什么...或感觉到了什么...`,\n        `你的意识突然变得清晰，似乎恢复了正..?..正常么?`\n    ]\n    private static get getTranceMessage() {\n        return WombTattoosModule.tranceMessage[Math.floor(Math.random() * WombTattoosModule.tranceMessage.length)];\n    }\n\n    /** 在恍惚中  */\n    public static IsTrancing: boolean = false;\n\n    private static Trance() {///////////////////////////////////BUG!!! 登录游戏会触发一次 检查条件\n        WombTattoosModule.IsTrancing = true;\n        SendActivity(`${PH.s}被自己的淫纹影响，大脑陷入了一阵恍惚之中.....`, Player.MemberNumber!);\n        const pt = Player.ArousalSettings?.ProgressTimer ?? 0;\n        if (Player.ArousalSettings?.ProgressTimer) {\n            Player.ArousalSettings.ProgressTimer = pt + 25;\n        }\n        AudioPlayInstantSound(\"Audio/BellMedium.mp3\");\n        // DrawModule.setFlash('#FF2ED9', 10000, 80, () => {\n        //     AudioPlayInstantSound(\"Audio/BellMedium.mp3\", 0.5);\n        // });\n        DrawModule.setFlash(randomColor({\n            luminosity: 'light',\n            hue: 'pink',\n        }), 10000, 80, () => {\n            AudioPlayInstantSound(\"Audio/BellMedium.mp3\", 0.5);\n            WombTattoosModule.IsTrancing = false;\n        });\n        DrawModule.setDrawBlur(10000, 50);\n    }\n}\n//  ^^^^========淫纹大修=========^^^^  //","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseModule } from \"./BaseModule\";\nimport { conDebug, GetModule, timeRange, sendChangeLog, MSGType } from \"utils\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { ActivityModule } from \"./MActivity\";\n\nimport { WombTattoosModule } from \"./MWombTattoos\";\n\nconst timeRangeRegex: RegExp = /^(((0|1)\\d|2[0-3]):[0-5]\\d)-(((0|1)\\d|2[0-3]):[0-5]\\d)$/;\n\nexport class CommandsModule extends BaseModule {\n\n    commandsDict: { [CommandName: string]: ICommand } = {\n        help: {\n            Tag: \"help\",\n            Description: \"显示 [小酥的活动模组] 的相关命令.\",\n            Action: (args, msg, parsed) => {\n                this.DisplayHelp();\n            }\n        },\n        export: {\n            Tag: \"export\",\n            Description: \"导出当前聊天室的聊天记录. 输入: ‘/xsa export -h’ 显示导出命令的使用方法.\",\n            Action: (args, msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params == 'h') {\n                    ChatRoomSendLocal('输入: ‘/xsa export -[时间]’导出指定时间范围内的聊天记录.\\n例如: ‘/xsa export -05:34-20:40’\\n默认导出当前聊天室的全部聊天记录.\\n注意! \\n如果时间段过长例如第一天的05:34到第二天的06:00则可能出现导出错误.', 20000)\n                } else if (params === '') {\n                    // 导出当前聊天室的全部聊天记录\n                    conDebug(\"导出当前聊天室的全部聊天记录\");\n                    GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat();\n                }\n                else if (timeRangeRegex.test(params)) {\n                    // 导出指定时间段的聊天记录 \n                    conDebug(`导出指定的 ${params} 时间段的聊天记录`);\n                    const separatorIndex = params.indexOf('-');\n\n                    if (separatorIndex !== -1) {\n                        const startTime = params.slice(0, separatorIndex).trim();\n                        const endTime = params.slice(separatorIndex + 1).trim();\n\n                        const time_limit: timeRange = {\n                            minTime: startTime,\n                            maxTime: endTime\n                        };\n                        GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat(time_limit);\n                    }\n                }\n\n            }\n        },\n        v: {\n            Tag: \"v\",\n            Description: \"显示 [小酥的活动模组] 的版本信息.\",\n            Action: (args, msg, parsed) => {\n                sendChangeLog();\n            }\n        },\n        act: {\n            Tag: \"act\",\n            Description: \"显示 [小酥的活动模组] 所添加的全部动作列表.\",\n            Action: (args, msg, parsed) => {\n                let content = ''\n                GetModule<ActivityModule>(\"ActivityModule\").getAllAct().forEach((item) => {\n                    content += `<p style=\"font-weight: bold; margin: 0;\">${item}</p>`\n                })\n                conDebug(`command: AL    content: ${content}`)\n\n                ChatRoomSendLocal(content, 20000)\n            }\n        },\n        jieba: {\n            Tag: \"jieba\",\n            Description: \"显示 自动结巴效果 的命令帮助.\",\n            Action: (args, msg, parsed) => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                ChatRoomSendLocal(`输入: <span ${stressStyle}>\\`</span><span ${stressStyle}>空格</span><span ${weakStyle}>空格</span> 开头的话将以口吃结巴的形式发出.\\n结巴生效位置有两种方式: 如果键入两个<span ${stressStyle}>空格</span> 将会在空格位置概率产生结巴效果.\\n如果键入一个<span ${stressStyle}>空格</span>将会使用分词系统进行结巴效果.\\n该命令有一个可选参数:\\n如果以<span ${stressStyle}>\\`</span><span ${stressStyle}>[1-9]</span> 的形式作为开头，数字代表结巴程度，默认为3，越高将越口吃.\\n不带结巴程度参数的例子:\\n<span ${stressStyle}>\\`</span> [要说 的 话]\\n处理之后的效果就可能是:  「 要说...-的-的话... 」=>注意空格的位置.\\n带参数的命令方法:\\n<span ${stressStyle}>\\`</span>3 [要说 的 话]\\n此处的3就是结巴等级，代表着每处句子中的空格位置的词段都将有30%的概率发生结巴.上面的话就意味着发生了3等级的结巴效果.\\n如果有两个空格: <span ${stressStyle}>\\`</span>  [要说的话]\\n💡另外: 如果数字后跟<span ${stressStyle}>m</span>结尾，则会在结巴处根据当前兴奋程度添加呻吟效果.`)\n            }\n        },\n        edge: {\n            Tag: \"edge\",\n            Description: \"显示 关于边缘机制的修改内容帮助.\",\n            Action: (args, msg, parsed) => {\n                ChatRoomSendLocal(`模组修改了的边缘机制:\\n每持续45秒钟边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间.\\n 如果失去边缘状态，将每45秒钟降低一层高潮抵抗难度，并且减少0.3~1.3秒的即将到来的高潮的持续时间-最少高潮持续时间范围4~7秒.\\n\\n`)\n            }\n        },\n        orgasm: {\n            Tag: \"orgasm\",\n            Description: \"显示 关于高潮机制的修改内容帮助.\",\n            Action: (args, msg, parsed) => {\n                ChatRoomSendLocal(`当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度\\n当高潮或抵抗高潮时禁用输入框.`)\n            }\n        },\n        kaomoji: {\n            Tag: \"kaomoji\",\n            Description: \"显示 快速颜文字 的使用说明.\",\n            Action: () => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                ChatRoomSendLocal(`输入<span ${stressStyle}>|</span>+<span ${weakStyle}>参数</span>，或点击聊天室输入栏下方的小按钮，显示颜文字面板。\n                左键点击表情: 将表情插入到输入栏的光标当前位置;\n                右键点击表情: 将表情以**星号消息的形式直接发出;\n                中键点击表情: 将表情以普通消息发出.\n                当前的参数有:\n                <span ${stressStyle}>help</span>显示所有的参数作用。\n                <span ${stressStyle}>all</span>显示全部表情包。\n                <span ${stressStyle}>hp</span>显示开心的颜文字包。\n                <span ${stressStyle}>sd</span>显示伤心的颜文字包。\n                <span ${stressStyle}>sy</span>显示害羞的颜文字包。\n                <span ${stressStyle}>ar</span>显示生气的颜文字包。\n                <span ${stressStyle}>sp</span>显示惊讶的颜文字包。\n                <span ${stressStyle}>cf</span>显示疑惑的颜文字包。\n                <span ${stressStyle}>nt</span>显示顽皮搞怪的颜文字包。\n                `)\n            }\n        },\n        wttest: {\n            Tag: \"wttest\",\n            Description: \"测试淫纹模块\",\n            Action: (args, msg, parsed) => {\n                if (parsed.length == 0) {\n                    conDebug(\"没有指令\");\n                    return;\n                }\n                const params: string = this.getCommandParameters(parsed);\n                const WombTattoosModuleExample = GetModule(\"WombTattoosModule\") as WombTattoosModule\n                switch (params) {\n                    case \"get_womb_tattoos_layers\":\n                        conDebug({\n                            name: 'WombTattoosModule layers',\n                            type: MSGType.DebugLog,\n                            content: WombTattoosModuleExample.wombTattoosLayers\n                        });\n                        break;\n                    case \"player_have_wt\":\n                        conDebug({\n                            name: 'haveWombTattoos',\n                            type: MSGType.DebugLog,\n                            content: WombTattoosModule.haveWombTattoos(Player)\n                        });\n                        break;\n                    case \"get_applied_layer_names\":\n                        conDebug({\n                            name: 'getAppliedLayerNames',\n                            type: MSGType.DebugLog,\n                            content: WombTattoosModule.getAppliedLayerNames(Player)\n                        });\n                        break;\n                }\n            }\n        }\n    }\n\n    public Load(): void {\n        CommandCombine(\n            {\n                Tag: \"xsa\",\n                Description: \"显示 [小酥的活动模组] 的相关命令.\",\n                Action: (args, msg, parsed) => {\n                    if (parsed.length > 0) this.CommandHandler(parsed);\n                    else this.DisplayHelp();\n                }\n            }\n        )\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.moduleName = \"CommandsModule\";\n        this.priority = 20;\n    }\n\n\n    private getCommandParameters(parsed: string[]): string {\n        // if (parsed.length === 0) {\n        //     return '';\n        // }\n        const lastParam = parsed[parsed.length - 1];\n        if (lastParam.startsWith(\"-\")) {\n            return lastParam.slice(1);\n        }\n        return '';\n    }\n\n    private DisplayHelp(msg: string | undefined = undefined): void {\n        if (msg === undefined) {\n            let content: string = ``;\n            for (const c in this.commandsDict) {\n                content += `/xsa ${c} ${this.commandsDict[c].Description}\\n`;\n            }\n            content += `小酥的活动模组 版本号: ${XSActivity_VERSION}\\n`\n            ChatRoomSendLocal(content, 10000);\n        } else {\n            ChatRoomSendLocal(msg, 10000)\n        }\n    }\n\n    private CommandHandler(parsed: Array<string>): void {\n        const parsedCount: number = parsed.length;\n        if (parsedCount == 0) this.DisplayHelp();\n        if (parsedCount >= 1) {\n            const last = parsed[parsedCount - 1];\n            if (last.startsWith(\"-\")) {\n                const cmd: string = parsed[parsedCount - 2];\n                if (cmd in this.commandsDict) {\n                    this.commandsDict[cmd]?.Action?.('', '', parsed);\n                }\n            } else {\n                if (last in this.commandsDict) {\n                    this.commandsDict[last]?.Action?.('', '', parsed);\n                }\n            }\n        }\n    }\n}","import { conDebug } from \"utils\";\nimport { BaseModule, FullModCount } from \"./BaseModule\";\nimport { ActivityModule } from \"./MActivity\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { CommandsModule } from \"./MCommand\";\nimport { DataModule } from \"./MData\";\nimport { ArousalModule } from \"./MArousal\";\nimport { TimerProcessInjector } from \"./MTimerProcessInjector\";\nimport { WombTattoosModule } from \"./MWombTattoos\";\nimport { DrawModule } from \"./MDrawModule\";\nimport { modules } from \"./ModulesDict\";\n\nexport class ModuleLoader {\n    public static modules: { [key: string]: BaseModule } = modules;\n    static mList: [BaseModule] | undefined;\n    public static modulesLoadCount: number = 0;\n    public static modulesInitCount: number = 0;\n    public static CompleteLoadingSuccessful: boolean = false;\n\n    /**\n     * 初始化模块 对外初始化入口\n     */\n    public static InitModules(): number {\n        this.generateModule();\n\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .sort((a, b) => a.priority - b.priority)\n                .forEach((m) => {\n                    // 初始化模块\n                    m.Init();\n                    conDebug(`模块 ${m.moduleName} 尝试初始化完成`);\n                    this.modulesInitCount++;\n                });\n        }\n\n        return this.modulesInitCount;\n    }\n\n    /**\n     * 加载模块   Loader对外加载入口.\n     */\n    public static LoadModules(): number {\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .forEach((m) => {\n                    // 加载模块\n                    m.Load();\n                    conDebug(`模块 ${m.moduleName} 已尝试加载`);\n                    this.modulesLoadCount++;\n                });\n        }\n\n        if (this.CheckModulesLoaded()) {\n            this.CompleteLoadingSuccessful = true;\n            window.XSActivity_Loaded = true;\n        } else {\n            this.CompleteLoadingSuccessful = false;\n            window.XSActivity_Loaded = false;\n        }\n        return this.modulesLoadCount;\n    }\n\n\n    public static CheckModulesLoaded(): boolean {\n        if (this.modulesLoadCount != FullModCount || this.modulesInitCount != this.modulesLoadCount) {\n            conDebug(`模块加载失败，模块数量不匹配，初始化数量为${this.modulesInitCount}模块加载数量为${this.modulesLoadCount}，应为${FullModCount}`);\n            return false;\n        }\n        if (ModuleLoader.mList === undefined) {\n            conDebug(`模块加载失败，模块列表未初始化`);\n            return false;\n        }\n        for (const m of ModuleLoader.mList) {\n            if (!m.Loaded) {\n                conDebug(`模块加载失败，模块 ${m.moduleName} 未加载完成`);\n                return false;\n            }\n        }\n        conDebug(`模块加载完成`);\n        return true;\n    }// 该方法在加载模块完成之后调用，确保mList中的所有模块都已加载。\n\n    /**\n     * 将模块添加到模块数组中\n     * @param module 要添加的模块对象\n     */\n    private static pushToModules(module: BaseModule): void {\n        this.modules[module.moduleName] = module;\n\n        if (typeof this.mList !== \"undefined\") {\n            this.mList.push(module);\n        } else {\n            this.mList = [module];\n        }\n    }\n\n    public static ModuleMap: { [mName in XS_ModuleName]: () => void } = {\n        Base: () => {\n            throw new Error(\"Base为模块的抽象类，请勿加载\");\n        },\n        TimerProcessInjector: () => {\n            this.pushToModules(new TimerProcessInjector());\n        },\n        ActivityModule: () => {\n            this.pushToModules(new ActivityModule());\n        },\n        ChatroomModule: () => {\n            this.pushToModules(new ChatroomModule());\n        },\n        CommandsModule: () => {\n            this.pushToModules(new CommandsModule());\n        },\n        DataModule: () => {\n            this.pushToModules(new DataModule());\n        },\n        ArousalModule: () => {\n            this.pushToModules(new ArousalModule());\n        },\n        WombTattoosModule: () => {\n            this.pushToModules(new WombTattoosModule());\n        },\n        DrawModule: () => {\n            this.pushToModules(new DrawModule());\n        }\n    }\n\n\n    private static generateModule(): number {\n        let generateModuleCount: number = 0;\n        for (const mN in ModuleLoader.ModuleMap) {\n            if (mN !== \"Base\" && this.modules[mN] === undefined) {\n                ModuleLoader.ModuleMap[mN as XS_ModuleName]();\n                generateModuleCount++;\n            }\n        }\n\n        return generateModuleCount;\n    }\n\n}","import { conDebug, hookFunction, MSGType } from \"./utils\";\nimport { ModuleLoader } from \"Modules/ModuleLoader\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: MSGType.Workflow_Log,\n        content: \"Init wait\"\n    });\n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        // 修改WombTattoos为非cosplay物品\n        hookFunction('LoginResponse', 999, (args, next) => {\n            const response = args[0];\n            if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n                for (const group of AssetFemale3DCG as AssetGroupDefinition.Appearance[]) {\n                    if (group.Group === 'ClothAccessory') {\n                        for (const item of group.Asset as AssetDefinition.Appearance[]) {\n                            if (item.Name === \"WombTattoos\") {\n                                item.BodyCosplay = false;\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n            return next(args);\n        });\n        // 加载模组\n        hookFunction('LoginResponse', 10, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: MSGType.Workflow_Log\n            });\n            const response = args[0];\n            if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string' || !ModuleLoader.CompleteLoadingSuccessful) {\n                init();\n            }\n            return result;\n        });\n    }\n}\n\nexport function init() {\n    if (window.XSActivity_Loaded)\n        return;\n\n    const InitModuleCount = ModuleLoader.InitModules();\n\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Initialized!\",\n        content: `Init ${InitModuleCount} modules `\n    });\n\n    const moduleCount = ModuleLoader.LoadModules();\n\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Loaded!\",\n        content: `Loaded ${moduleCount} modules    FullLoaded: ${ModuleLoader.CompleteLoadingSuccessful}`\n    });\n\n    if (!ModuleLoader.CompleteLoadingSuccessful) {\n        throw new Error(\"XSActivity load or init failed\");\n    }\n}\n\n\n\ninitWait();\n"],"names":["e","o","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","d","warn","s","p","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","c","precomputed","window","split","slice","join","encode","padStart","toUpperCase","l","originalHash","Object","assign","router","context","contextProperty","keys","f","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","allowReplace","repository","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","startsWith","_shim10register","defineProperty","exports","value","modules","ChangeType","CHANGELOG","description","type","dev","changes","main","CSShref","DEBUG","bcModSDK","bcModSDKRef","XSActivity_VERSION","target","SendActivity","msg","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","find","MemberNumber","targetCharacterObj","undefined","sourceCharacterNickname","CharacterNickname","targetCharacterNickname","resultDict","Tag","Text","SourceCharacter","TargetCharacter","conDebug","MSGType","Workflow_Log","content","Type","Content","Dictionary","Sender","ServerSend","PH","color","style","result","DebugLog","time","Date","toLocaleString","ModVersion","debug","GetModule","moduleName","copyAndDownloadHtmlElement","element","fileName","time_limit","newDoc","document","implementation","createHTMLDocument","copiedElement","cloneNode","querySelectorAll","forEach","dataTimeValue","getAttribute","currentTime","minTimeDate","minTime","maxTimeDate","maxTime","setDate","getDate","remove","removeElementsByTimeRange","removeProperty","clearElementStyle","fontSize","fontFamily","display","flexDirection","width","body","alignItems","justifyContent","backgroundColor","appendChild","htmlString","documentElement","outerHTML","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","BaseModule","constructor","Loaded","selfPlaceholder","ActivityModule","activityToAddDict","act","Name","Target","TargetSelf","MaxProgress","MaxProgressSelf","Prerequisite","desc","descString","img","StimulationAction","prerequisiteDict","ItemHoodCovered","Action","args","acting","Judgment","TargetItemHoodCovered","acted","ItemNoseCovered","Kneeling","NotKneeling","InventoryPrerequisiteMessage","InventoryGet","IsKneeling","Init","Load","LoadActivity","hookListHandler","next","data","ActivityName","substitutions","ChatRoomMessageRunExtractors","Player","ActivityDictionaryText","CommonStringSubstitute","prereq","source","parts","aName","replace","resultName","actName","Number","isNaN","ArousalSettings","OrgasmStage","ActivityOrgasmGameResistCount","ActivityOrgasmStop","ActivityOrgasmPrepare","actLength","aN","pushToActivity","activityDictAdd","activityDesc","ActivityDictionary","pendingActivity","nameWithoutPrefix","substring","actTarget","actTargetSelf","addedValues","aT","aTS","activity","ActivityFemale3DCG","ActivityFemale3DCGOrdering","getAllAct","suffix","ChatroomModule","moan","InputElement","getElementById","buildKaomojiButton","ResizeKaomojiButton","removeKaomojiMenu","showKaomojiMenu","hideKaomojiMenu","match","stammerHandler","parseInt","kaomojiMatch","kaomojiSet","kaomojiHandler","ChatRoomSendLocal","ExportChat","exportName","ChatRoomData","tenfoldStammeringProbability","isSegmentForCH","haveMoan","stammeringProbability","segmentList","str","Intl","Segmenter","GAME_LANG","TranslationLanguage","toLowerCase","segmenterResult","granularity","segment","results","segmentForCH","stringArray","stammerForList","messageList","currentWord","Math","random","addStammerEffect","Progress","floor","word","depth","message","getKaomojiMenu","KaomojiShouldShow","KaomojiButton","button","id","className","addEventListener","KaomojiMenuObject","menu","isKaomojiMenuCloseEventListenerAdded","event","closest","innerHTML","top","innerHeight","left","key","kaomojiContainer","container","buildKaomojiMenu","selectKaomojiTitle","kaomojiClick","kaomojiElement","cursorPosition","selectionStart","textContent","newValue","newCursorPosition","setSelectionRange","SendChat","menuTitle","menuTitleTextSet","menuTitleClose","selectKey","getKaomojiSelectKey","title","selectMenuTitleStyleHandle","classList","contains","key2","getKaomojiKey","kaomojiList","getAllKaomoji","kaomoji","innerText","preventDefault","allKaomojiList","help","hp","sd","sy","ar","sp","cf","nt","PlayerStorage","XSA","PlayerOnlineSharedSettingsStorage","OnlineSharedSettings","ExtensionStorage","ExtensionSettings","XSA_OnlineSharedSettingsDataKeyList","DataModule","hookListHandle","_a","allDataTake","SyncDataForPlayer","setTimeout","ActivityChatRoomArousalSync","BROWSER_NAME","browserName","BROWSER_VERSION","browserVersion","linkElement","rel","head","allDataSave","JSON","parse","LZString","decompressFromBase64","k","k2","DefaultData","k3","settings","DefaultSetting","wombTattoosAppliedEffects","sensitiveLevel","DefaultOnlineSharedSettingsData","compressToBase64","stringify","ServerPlayerExtensionSettingsSync","SaveSettings","settingsItem","settingsData","item","SaveData","dataItem","itemKey","player_Progress","resistCount","userAgentString","navigator","userAgent","browserVersionRegex","haveWombTattoos","TimerProcessInjector","setProcessInjectionSequence","sequence","processInjectionSet","ProcessInjection","InjectionSort","processInjectionSequence","timeInterval","TimerLastCycleCallSet","timerLastCycleCall","isDynamic","getTimeInterval","CommonTime","preconditions","code","b","DrawModule","DrawFlash","blurLevel","CommonPhotoMode","setFlash","intensity","callback","DrawFlashEventMap","Symbol","evenEnd","CurrentScreen","commonTime","FlashEndTime","FlashAlpha","DrawGetFlashAlpha","DrawRect","setDrawBlur","duration","level","flashTime","flashIntensity","alpha","max","min","exp","calculateDynamicIntensity","elapsedTime","baseIntensity","totalDuration","phase","PI","sin","root","factory","randomColor","seed","colorDictionary","loadColorBounds","colorRanges","options","stringToInteger","TypeError","H","S","count","totalColors","colors","setFormat","pickHue","pickSaturation","pickBrightness","hue","randomWithin","hueRange","getRealHueRange","step","j","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","HSVtoRGB","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","colorInput","number","HexToHSB","colorName","range","golden_ratio","rnd","rgb","componentToHex","hex","defineColor","brightnessRange","v","h_i","q","red","substr","green","blue","cMax","delta","saturation","round","string","total","MAX_SAFE_INTEGER","charCodeAt","colorHue","module","ArousalModule","descriptionOfEnduranceActivities","inputDefaultStyle","Player_Progress","inputElement","orgasmStage","setFormElementsForAbsentState","getEndureDesc","patchListHandler","IsPlayer","needActivityOrgasmRuined","ActivityOrgasmRuined","formElements","isAbsent","readOnly","borderColor","borderRadius","functionName","WombTattoosModule","checkPlayerHaveWombTattoos","isCheckWombTattoosEffect","wombTattoosAppliedLayerNames","getAppliedLayerNames","E","wombTattoosEffects","appliedEffects","effect","layers","every","defaultTimerCode","trance","dynamicTimeInterval","HasWombTattoosEffect","customizeTimerCode","checkHaveWombTattoosToAddOrRemoveEffect","hookList","WE","hookItem","fn","PlayerWombTattoos","Appearance","Asset","GetCharacterWombTattoosEffects","C","IsOnline","effectName","haveEffects","onHaveWombTattoos","checkLayer","offHaveWombTattoos","wombTattoosLayers","wombTattoosLayers_data","getWombTattoosLayers","handleProgressParametersBasedOnSensitivityLevel","addedProgress","AssetFemale3DCG","group","Group","Layer","appliedLayersNames","wombTattoos","DrawAppearance","asset","InventoryChatRoomAllow","Category","typeRecord","Property","TypeRecord","appliedLayers","layer","AllowTypes","CharacterAppearanceAllowForTypes","CharacterAppearanceIsLayerIsHave","PinkShock","AudioPlayInstantSound","InventoryShockExpression","currentProgress","ActivitySetArousal","getTranceMessage","tranceMessage","Trance","IsTrancing","pt","ProgressTimer","wombTattoosLayersName","sensitive","ActivityTimerProgress","onlineSharedSettings","pinkShock","timeout","SendLocalMessage","timeRangeRegex","CommandsModule","commandsDict","Description","parsed","DisplayHelp","export","params","getCommandParameters","test","separatorIndex","trim","changesString","styleForP","sendChangeLog","jieba","stressStyle","edge","orgasm","wttest","WombTattoosModuleExample","CommandCombine","CommandHandler","lastParam","parsedCount","last","cmd","ModuleLoader","InitModules","generateModule","mList","modulesInitCount","LoadModules","modulesLoadCount","CheckModulesLoaded","CompleteLoadingSuccessful","XSActivity_Loaded","pushToModules","generateModuleCount","mN","ModuleMap","init","InitModuleCount","moduleCount","Base","response","AccountName","BodyCosplay"],"mappings":"wYAGA,WAAqC,MAAMA,EAAE,QAAQ,SAASC,EAAED,GAAGE,MAAM,eAAeF,GAAG,MAAMC,EAAE,IAAIE,MAAMH,GAAG,MAAMI,QAAQC,MAAMJ,GAAGA,CAAC,CAAC,MAAMK,EAAE,IAAIC,YAAY,SAASC,EAAER,GAAG,QAAQA,GAAG,iBAAiBA,IAAIS,MAAMC,QAAQV,EAAE,CAAC,SAASW,EAAEX,GAAG,MAAMC,EAAE,IAAIW,IAAI,OAAOZ,EAAEa,QAAQb,IAAIC,EAAEa,IAAId,IAAIC,EAAEc,IAAIf,IAAI,CAAC,MAAMgB,EAAE,IAAIC,IAAIC,EAAE,IAAIN,IAAI,SAASO,EAAEnB,GAAGkB,EAAEJ,IAAId,KAAKkB,EAAEH,IAAIf,GAAGI,QAAQgB,KAAKpB,GAAG,CAAC,SAASqB,EAAErB,GAAG,MAAMC,EAAE,GAAGK,EAAE,IAAIW,IAAIT,EAAE,IAAII,IAAI,IAAI,MAAMD,KAAKW,EAAEC,SAAS,CAAC,MAAMP,EAAEL,EAAEa,SAASC,IAAIzB,EAAE0B,MAAM,GAAGV,EAAE,CAACf,EAAE0B,QAAQX,EAAEY,OAAO,IAAI,MAAM3B,EAAEiB,KAAKF,EAAEa,QAAQC,UAAUxB,EAAEQ,IAAIb,IAAIK,EAAEmB,IAAIxB,KAAKiB,GAAGC,EAAE,gBAAgBR,EAAEe,8BAA8B1B,EAAE0B,2GAA2GzB,eAAeK,EAAEmB,IAAIxB,IAAI,gBAAgBiB,KAAKZ,EAAEyB,IAAI9B,EAAEiB,GAAGV,EAAEO,IAAIJ,EAAEe,KAAK,CAAC,CAACzB,EAAE+B,MAAI,CAAGhC,EAAEC,IAAIA,EAAEgC,SAASjC,EAAEiC,WAAW,MAAMtB,EAAE,SAASX,EAAEC,GAAG,GAAG,IAAIA,EAAEiC,KAAK,OAAOlC,EAAE,IAAIM,EAAEN,EAAEmC,WAAWC,WAAW,OAAO,MAAM,IAAI,MAAM5B,EAAEG,KAAKV,EAAE6B,UAAUxB,EAAE+B,SAAS7B,IAAIW,EAAE,oBAAoBnB,EAAE0B,eAAelB,iBAAiBF,EAAEA,EAAE8B,WAAW5B,EAAEG,GAAG,OAAM,EAAG2B,MAAM,IAAIhC,KAAK,CAAhO,CAAkON,EAAEuC,SAASjC,GAAG,IAAIU,EAAE,SAASf,GAAG,IAAIK,EAAEU,EAAE,MAAME,EAAE,QAAQF,GAAGV,EAAEkC,EAAEC,oBAAoBC,qBAAgB,IAAS1B,OAAE,EAAOA,EAAE2B,KAAKrC,EAAEN,EAAE0B,KAAKlB,GAAGW,EAAER,EAAEiC,MAAMC,KAAK5C,GAAG,OAAO,MAAMiB,GAAGA,IAAIC,CAAC,EAAE,IAAI,IAAIb,EAAEL,EAAE6C,OAAO,EAAExC,GAAG,EAAEA,IAAI,CAAC,MAAME,EAAEP,EAAEK,GAAGK,EAAEK,EAAEA,EAAE,SAASf,GAAG,IAAIK,EAAEU,EAAE,MAAME,EAAE,QAAQF,GAAGV,EAAEkC,EAAEC,oBAAoBM,iBAAY,IAAS/B,OAAE,EAAOA,EAAE2B,KAAKrC,EAAEN,EAAE0B,KAAKlB,EAAEwC,KAAK7B,EAAEX,EAAEyC,KAAKL,MAAMC,KAAK,CAAC5C,EAAED,IAAI,GAAG,IAAIkD,UAAUJ,SAASrC,MAAMC,QAAQT,GAAG,MAAM,IAAIE,MAAM,OAAOK,EAAEwC,uEAAuEhD,KAAK,OAAOW,EAAEgC,KAAKE,KAAK7C,EAAC,IAAK,OAAO,MAAMkB,GAAGA,IAAIC,CAAC,CAAC,CAAC,MAAM,CAACS,MAAM3B,EAAE4B,QAAQvB,EAAE6C,eAAe3C,EAAE4C,MAAMpC,EAAEqC,MAAM1C,EAAE,CAAC,SAAS2C,EAAEtD,EAAEC,GAAE,GAAI,IAAIU,EAAEK,EAAES,IAAIzB,GAAG,GAAGW,EAAEV,IAAIU,EAAE4C,YAAYlC,EAAEV,QAAQ,CAAC,IAAIV,EAAEuD,OAAO,MAAMtC,EAAElB,EAAEyD,MAAM,KAAK,IAAI,IAAInD,EAAE,EAAEA,EAAEY,EAAE4B,OAAO,EAAExC,IAAI,GAAGL,EAAEA,EAAEiB,EAAEZ,KAAKE,EAAEP,GAAG,MAAM,IAAIE,MAAM,oBAAoBH,8BAA8BkB,EAAEwC,MAAM,EAAEpD,EAAE,GAAGqD,KAAK,sBAAsB,MAAMxC,EAAElB,EAAEiB,EAAEA,EAAE4B,OAAO,IAAI,GAAG,mBAAmB3B,EAAE,MAAM,IAAIhB,MAAM,oBAAoBH,6BAA6B,MAAMsD,EAAE,SAAStD,GAAG,IAAIC,GAAG,EAAE,IAAI,MAAMO,KAAKF,EAAEsD,OAAO5D,GAAG,CAAC,IAAIA,EAAE,KAAKC,EAAEO,GAAG,IAAI,IAAIP,EAAE,EAAEA,EAAE,EAAEA,IAAID,EAAE,EAAEA,GAAG,UAAUA,IAAI,EAAEA,IAAI,EAAEC,EAAEA,IAAI,EAAED,CAAC,CAAC,SAAS,EAAEC,KAAK,GAAGkC,SAAS,IAAI0B,SAAS,EAAE,KAAKC,aAAa,CAAzL,CAA2L3C,EAAEgB,WAAWC,WAAW,OAAO,OAAO2B,EAAE,CAACrC,KAAK1B,EAAEuC,SAASpB,EAAE6C,aAAaV,GAAG3C,EAAEsD,OAAOC,OAAOD,OAAOC,OAAO,GAAGH,GAAG,CAACR,YAAYlC,EAAE0C,GAAGI,OAAO,OAAOC,QAAQnE,EAAEoE,gBAAgBnD,EAAEA,EAAE4B,OAAO,KAAKnC,EAAEwD,OAAO,SAASnE,GAAG,OAAO,YAAYC,GAAG,OAAOD,EAAEuD,YAAYH,MAAMR,MAAMC,KAAK,CAAC5C,GAAG,CAAC,CAA7E,CAA+EU,GAAGK,EAAEe,IAAI/B,EAAEW,GAAGV,EAAEU,EAAE0D,iBAAiB1D,EAAEwD,MAAM,CAAC,OAAOxD,CAAC,CAAC,SAASoD,IAAI,MAAM/D,EAAE,IAAIY,IAAI,IAAI,MAAMX,KAAKqB,EAAEC,SAAS,IAAI,MAAMjB,KAAKL,EAAEuB,SAAS8C,OAAOtE,EAAEe,IAAIT,GAAG,IAAI,MAAML,KAAKe,EAAEsD,OAAOtE,EAAEe,IAAId,GAAG,IAAI,MAAMA,KAAKD,EAAEsD,EAAErD,GAAE,EAAG,CAAC,SAASsE,IAAI,MAAMvE,EAAE,IAAIiB,IAAI,IAAI,MAAMhB,EAAEK,KAAKU,EAAEhB,EAAE+B,IAAI9B,EAAE,CAACyB,KAAKzB,EAAEsC,SAASjC,EAAEiC,SAASyB,aAAa1D,EAAE0D,aAAaQ,cAAclE,EAAE6D,OAAOM,kBAAkBnE,EAAE8D,QAAQ9D,EAAE+D,iBAAiBK,aAAa/D,EAAEL,EAAEiD,YAAY3B,MAAM+C,KAAK3E,GAAGA,EAAEgD,OAAO4B,cAAcnE,MAAMoE,KAAKvE,EAAEiD,YAAYJ,kBAAkB,OAAOnD,CAAC,CAAC,MAAMsB,EAAE,IAAIL,IAAI,SAAS6D,EAAE9E,GAAGsB,EAAEG,IAAIzB,EAAE0B,QAAQ1B,GAAGC,EAAE,yBAAyBD,EAAE0B,yBAAyBJ,EAAEyD,OAAO/E,EAAE0B,MAAM1B,EAAEgF,QAAO,EAAGjB,GAAG,CAAC,SAASkB,EAAEjF,EAAEM,EAAEK,GAAG,iBAAiBX,GAAG,iBAAiBM,IAAIJ,MAAM,yBAAyBF,qGAAqGA,EAAE,CAAC0B,KAAK1B,EAAEkF,SAASlF,EAAEmF,QAAQ7E,GAAGA,EAAE,CAAC8E,cAAa,IAAKzE,IAAIX,GAAG,iBAAiBA,GAAGC,EAAE,4DAA4DD,GAAG,iBAAiBA,EAAE0B,MAAM1B,EAAE0B,MAAMzB,EAAE,4EAA4ED,EAAE0B,MAAM,IAAIV,EAAE,IAAIhB,EAAE0B,QAAQ,iBAAiB1B,EAAEkF,UAAUlF,EAAEkF,UAAUjF,EAAE,0BAA0Be,2DAA2DhB,EAAEkF,YAAYlE,EAAE,IAAIhB,EAAEkF,aAAalF,EAAE0B,SAAS,iBAAiB1B,EAAEmF,SAASlF,EAAE,0BAA0Be,gDAAgDhB,EAAEmF,WAAWnF,EAAEqF,aAAarF,EAAEqF,gBAAW,QAAQ,IAASrF,EAAEqF,YAAY,iBAAiBrF,EAAEqF,YAAYpF,EAAE,0BAA0Be,gEAAgEhB,EAAEmF,WAAW,MAAM7E,IAAIA,EAAE,CAAA,GAAIA,GAAG,iBAAiBA,GAAGL,EAAE,0BAA0Be,6DAA6DV,KAAK,MAAMY,GAAE,IAAKZ,EAAE8E,aAAajE,EAAEG,EAAEG,IAAIzB,EAAE0B,MAAMP,IAAIA,EAAEiE,cAAclE,GAAGjB,EAAE,wBAAwBe,iGAAiG8D,EAAE3D,IAAI,MAAME,EAAErB,IAAI,iBAAiBA,GAAGA,GAAGC,EAAE,OAAOe,2EAA2EhB,KAAK,IAAIM,EAAE2E,EAAEzD,SAASC,IAAIzB,GAAG,OAAOM,IAAIA,EAAE,CAACsB,MAAM,GAAGC,QAAQ,IAAIZ,KAAKgE,EAAEzD,SAASO,IAAI/B,EAAEM,IAAIA,GAAGiE,EAAE,CAACe,OAAO,IAAIR,EAAEG,GAAGM,aAAa,CAACvF,EAAEM,EAAEE,KAAKyE,EAAED,QAAQ/E,EAAE,OAAOe,yDAAyD,MAAML,EAAEU,EAAErB,GAAG,iBAAiBM,GAAGL,EAAE,OAAOe,8BAA8BhB,4CAA4CM,KAAK,mBAAmBE,GAAGP,EAAE,OAAOe,8BAA8BhB,0CAA0CQ,KAAK,MAAMU,EAAE,CAAC8B,IAAIiC,EAAEvD,KAAKO,SAAS3B,EAAE2C,KAAKzC,GAAG,OAAOG,EAAEiB,MAAMD,KAAKT,GAAG6C,IAAI,KAAK,MAAM/D,EAAEW,EAAEiB,MAAM4D,QAAQtE,GAAGlB,GAAG,IAAIW,EAAEiB,MAAM6D,OAAOzF,EAAE,GAAG+D,IAAG,CAAC,EAAG2B,cAAc,CAAC1F,EAAEM,KAAK2E,EAAED,QAAQ/E,EAAE,OAAOe,yDAAyD,MAAML,EAAEU,EAAErB,GAAGQ,EAAEF,IAAIL,EAAE,OAAOe,+BAA+BhB,2CAA2CM,KAAK,IAAI,MAAME,EAAEU,KAAK+C,OAAOnC,QAAQxB,GAAG,iBAAiBY,EAAEP,EAAEkB,QAAQE,IAAIvB,EAAEU,GAAG,OAAOA,EAAEP,EAAEkB,QAAQkD,OAAOvE,GAAGP,EAAE,OAAOe,+BAA+BhB,gCAAgCQ,MAAMuD,GAAC,EAAI4B,cAAc3F,IAAIiF,EAAED,QAAQ/E,EAAE,OAAOe,yDAAyDK,EAAErB,GAAG6B,QAAQ+D,QAAQ7B,GAAC,EAAI8B,aAAa,CAAC7F,EAAEM,EAAEE,KAAKyE,EAAED,QAAQ/E,EAAE,OAAOe,yDAAyD,iBAAiBhB,GAAGA,GAAGC,EAAE,OAAOe,0EAA0EhB,KAAKS,MAAMC,QAAQJ,IAAIL,EAAE,OAAOe,gEAAgEV,KAAK,SAASN,EAAEC,EAAEK,EAAEkD,QAAQ,OAAOF,EAAEtD,GAAGuC,SAASK,MAAMtC,EAAEL,EAAE,CAAtD,CAAwDD,EAAEM,EAAEE,IAAIsF,gBAAgB9F,IAAI,iBAAiBA,GAAGA,GAAGC,EAAE,OAAOe,mEAAmEhB,KAAKsD,EAAEtD,GAAGgE,eAAeiB,EAAE,CAACvD,KAAK1B,EAAE0B,KAAKwD,SAASlF,EAAEkF,SAASC,QAAQnF,EAAEmF,QAAQE,WAAWrF,EAAEqF,WAAWD,aAAalE,EAAE6E,IAAIxB,EAAES,QAAO,EAAGxD,SAAS,IAAIP,KAAK,OAAOK,EAAES,IAAI/B,EAAE0B,KAAKuD,GAAGhB,OAAO+B,OAAOzB,EAAE,CAAC,SAAS0B,IAAI,MAAMjG,EAAE,GAAG,IAAI,MAAMC,KAAKqB,EAAEC,SAASvB,EAAE2B,KAAK,CAACD,KAAKzB,EAAEyB,KAAKwD,SAASjF,EAAEiF,SAASC,QAAQlF,EAAEkF,QAAQE,WAAWpF,EAAEoF,aAAa,OAAOrF,CAAC,CAAC,IAAIwC,EAAE,MAAM0D,EAAE,WAAW,QAAG,IAAS1C,OAAO2C,SAAS,OAAO3C,OAAO2C,SAAS,WAAW,MAAMlG,EAAE,CAACkF,QAAQnF,EAAEoG,WAAW,EAAEC,YAAYpB,EAAEqB,YAAYL,EAAEM,gBAAgBhC,EAAE9B,mBAAmBwB,OAAOuC,KAAK,CAACzD,UAAU,KAAKL,cAAc,QAAQ,OAAOF,EAAEvC,EAAEgE,OAAO+B,OAAO/F,EAAE,CAAzL,GAA6L,GAAGO,EAAEgD,OAAO2C,WAAWlG,EAAE,+CAA+C,IAAIuD,OAAO2C,SAASC,YAAYnG,EAAE,yEAAyEuD,OAAO2C,SAAShB,aAAa3B,OAAO2C,SAAShB,UAAUnF,IAAIE,MAAM,2EAA2EsD,OAAO2C,SAAShB,gIAAgI3B,OAAO2C,SAAShB,QAAQsB,WAAW,cAAS,IAASjD,OAAO2C,SAASO,iBAAiB,CAAC,MAAM1G,EAAEwD,OAAO2C,SAASlG,EAAEgE,OAAO+B,OAAO/B,OAAOC,OAAOD,OAAOC,OAAO,GAAGlE,GAAG,CAACqG,YAAY,CAACpG,EAAEK,EAAEE,IAAIP,GAAG,iBAAiBA,GAAG,iBAAiBA,EAAEyB,MAAM,iBAAiBzB,EAAEkF,QAAQnF,EAAEqG,YAAYpG,EAAEyB,KAAKzB,EAAEkF,QAAQ,iBAAiB7E,KAAKA,IAAG,IAAKA,EAAE8E,cAAcpF,EAAEqG,YAAYpG,EAAEK,EAAEE,GAAGkG,iBAAgB,KAAMlD,OAAO2C,SAASlG,CAAC,CAAC,OAAOuD,OAAO2C,QAAQ,CAA5mC,GAAopClC,OAAO0C,eAAeC,QAAQ,aAAa,CAACC,OAAM,IAAKD,gBAAgBV,EAA9jP,gECDO,MAAMY,QAAyC,CAAE,ECFxD,IAAYC,YAAZ,SAAYA,YACXA,WAAAA,WAAA,KAAA,GAAA,OACAA,WAAAA,WAAA,IAAA,GAAA,KACA,CAHD,CAAYA,aAAAA,WAGX,CAAA,IAQM,MAAMC,UAA4B,CACrC,CACI7B,QAAS,QACT8B,YAAa,kBACbC,KAAMH,WAAWI,IACjBC,QAAS,CAAC,iBAEd,CACIjC,QAAS,QACT8B,YAAa,KACbC,KAAMH,WAAWI,IACjBC,QAAS,CAAC,UAAU,WAExB,CACIjC,QAAS,QACT8B,YAAa,KACbC,KAAMH,WAAWI,IACjBC,QAAS,CAAC,UAAU,SAExB,CACIjC,QAAS,QACT8B,YAAa,gBACbC,KAAMH,WAAWI,IACjBC,QAAS,CAAC,uBAAwB,YAAY,SAElD,CACIjC,QAAS,QACT8B,YAAa,KACbC,KAAMH,WAAWI,IACjBC,QAAS,CAAC,eAEd,CACIjC,QAAS,QACT8B,YAAa,gBACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,wCAAwC,cAEtD,CACIjC,QAAS,QACT8B,YAAa,WACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,cAAc,2BAA4B,qDAExD,CACIjC,QAAS,QACT8B,YAAa,YACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,UAAU,WAAW,oHAEnC,CACIjC,QAAS,QACT8B,YAAa,gCACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,8BAA8B,kBAAmB,mDAE/D,CACIjC,QAAS,QACT8B,YAAa,eACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,qHAAsH,2BAA4B,4BAA6B,eAAgB,kBAE7M,CACIjC,QAAS,QACT8B,YAAa,aACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,yCAEd,CACIjC,QAAS,QACT8B,YAAa,QACbC,KAAMH,WAAWM,KACjBD,QAAS,CAAC,yBAAyB,4CC5E9BE,QAAUC,MAAQ,mEAAqE,oEAMvFC,SAAWC,YAAYpB,YAAY,CAC5C3E,KAAM,iBACNwD,SAAU,2BACVC,QAASuC,mBAAmBjB,WAAW,KAAOiB,mBAAmBhE,MAAM,GAAKgE,mBAC5ErC,WAAY,uDAIAE,aAAaoC,OAAgB1F,SAAkBgB,MAE3D,OADuBuE,SAASjC,aAAaoC,OAAQ1F,SAAUgB,KAEnE,UAwCgB2E,aAAaC,IAAaC,gBAAyBC,iBAE/D,MAAMC,mBAA4CC,kBAAkBC,MAAK5E,GAAKA,EAAE6E,cAAgBL,kBAC5FM,mBAA4CL,gBAAkBE,kBAAkBC,MAAK5E,GAAKA,EAAE6E,cAAgBJ,uBAAmBM,EAEnI,QAA2BA,IAAvBL,yBAA2DK,IAAvBD,mBAAkC,OAE1E,MAAME,wBAA0BN,mBAAqBO,kBAAkBP,oBAAsB,GACzFQ,wBAA0BJ,mBAAqBG,kBAAkBH,oBAAsB,GACrFK,WAAoC,CACtC,CAAEC,IAAK,0DAA2DC,KAAMd,IAAIzF,WAAW,WAAYkG,yBAAyBlG,WAAW,WAAYoG,2BAGvJC,WAAW9G,KAAK,CAAEiH,gBAAiBd,uBACXO,IAApBN,iBAA+BU,WAAW9G,KAAK,CAAEkH,gBAAiBd,kBACtEe,SAAS,CACL5B,KAAM6B,QAAQC,aACdtH,KAAM,iBACNuH,QAAS,CACLC,KAAM,WAAYC,QAAS,iBAAkBC,WAAYX,WAAYY,OAAQvB,mBAIrFwB,WAAW,eAAgB,CACvBJ,KAAM,WAAYC,QAAS,iBAAkBC,WAAYX,WAAYY,OAAQvB,iBAErF,CAsCA,MAOayB,KAPW,WAsBxB,IAAYR,QAWN,SAAUD,SAASjB,IAA0B2B,MAAuB,KAAMC,MAAuB,MACnG,IAAc,IAAVlC,MAAiB,OAGrB,MAAMmC,OAAgC,iBAAR7B,IAAmB,CAC7CnG,KAAM,uBACNwF,KAAM6B,QAAQY,SACdV,QAASpB,IACT+B,MAAM,IAAIC,MAAOC,iBACjBC,WAAYrC,oBACZ,CACAhG,KAAMmG,IAAInG,KACVwF,KAAMW,IAAIX,KACV+B,QAASpB,IAAIoB,QACbW,MAAM,IAAIC,MAAOC,iBACjBC,WAAYrC,oBAEZ+B,MACArJ,QAAQ4J,MAAM,cAAeP,MAAOC,SAEhCF,QACAC,MAAQ,qBAAqBD,6BAEjCpJ,QAAQ4J,MAAM,cAAe,+DAAgEN,QAErG,CAOM,SAAUO,UAAaC,YACzB,OAAOpD,QAAQoD,WACnB,CAqDM,SAAUC,2BAA2BC,QAA6BC,SAAkBC,WAA+B,MAErH,MAAMC,OAASC,SAASC,eAAeC,qBAEvC,GAAgB,OAAZN,QAEA,YADAtB,SAAS,mBAab,MAAM6B,cAAgBP,QAAQQ,WAAU,GAErB,OAAfN,YAlER,SAAmCF,QAAsBE,YACpCF,QAAQS,iBAAiB,eAEjCC,SAASV,UACd,MAAMW,cAAgBX,QAAQY,aAAa,aAE3C,GAAID,cAAe,CAEf,MAAME,YAAc,IAAIpB,KAAK,cAAckB,iBACrCG,YAAc,IAAIrB,KAAK,cAAcS,WAAWa,WAChDC,YAAc,IAAIvB,KAAK,cAAcS,WAAWe,WAGlDD,YAAcF,aACdE,YAAYE,QAAQF,YAAYG,UAAY,IAI5CN,YAAcC,aAAeD,YAAcG,cAE3ChB,QAAQoB,QAKf,IAET,CAwCQC,CAA0Bd,cAAeL,YAZ7C,SAA2BF,SACvB,MAAMX,MAAQW,QAAQX,MAEtB,KAAOA,MAAM3G,OAAS,GAClB2G,MAAMiC,eAAejC,MAAM,GAElC,CASDkC,CAAkBhB,eAElBA,cAAclB,MAAMmC,SAAW,WAC/BjB,cAAclB,MAAMoC,WAAa,oBACjClB,cAAclB,MAAMqC,QAAU,OAC9BnB,cAAclB,MAAMsC,cAAgB,SACpCpB,cAAclB,MAAMuC,MAAQ,OAE5BzB,OAAO0B,KAAKxC,MAAMqC,QAAU,OAC5BvB,OAAO0B,KAAKxC,MAAMyC,WAAa,SAC/B3B,OAAO0B,KAAKxC,MAAM0C,eAAiB,SACnC5B,OAAO0B,KAAKxC,MAAM2C,gBAAkB,UAEpC7B,OAAO0B,KAAKI,YAAY1B,eAGxB,MAAM2B,WAAa/B,OAAOgC,gBAAgBC,UAGpCC,KAAO,IAAIC,KAAK,CAACJ,YAAa,CAAEpF,KAAM,cACtCyF,KAAOnC,SAASoC,cAAc,KACpCD,KAAKE,KAAOC,IAAIC,gBAAgBN,MAChCE,KAAKK,SAAW3C,SAGhBsC,KAAKM,OACT,EApJA,SAAYlE,SACRA,QAAAA,QAAA,SAAA,GAAA,WACAA,QAAAA,QAAA,aAAA,GAAA,cACH,CAHD,CAAYA,UAAAA,QAGX,CAAA,UC9IqBmE,WAAtB,WAAAC,GAEItK,KAAUqH,WAAkB,OAE5BrH,KAAQZ,SAAW,EAEnBY,KAAMuK,QAAY,CAWrB,ECbD,MAAMC,gBAAkB,kBAUlB,MAAOC,uBAAuBJ,WAApC,WAAAC,uBAiOItK,KAAA0K,kBAA0J,CACtJ,WAAU,CACNC,IAAK,CACDC,KAAM,WACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,wBACpBY,IAAK,YAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,6BACpBY,IAAK,YAET,YAAW,CACPT,IAAK,CACDC,KAAM,YACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,oBAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,yBACpBY,IAAK,YAET,cAAa,CACTT,IAAK,CACDC,KAAM,cACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,oBAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,iCACpBY,IAAK,YAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,YACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,kBAAmB,wBAAyB,YAE/DC,KAAM,KACNC,WAAY,CAAC,GAAGX,0CAAgD,GAAGA,8BACnEY,IAAK,YAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,YACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,WAAY,kBAAmB,yBAC9CI,kBAAmB,QAEvBH,KAAM,KACNC,WAAY,CAAC,GAAGX,yCAA+C,GAAGA,6BAClEY,IAAK,qBAET,YAAW,CACPT,IAAK,CACDC,KAAM,YACNC,OAAQ,CAAC,YACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,kBAAmB,wBAAyB,mBAC3DI,kBAAmB,QAEvBH,KAAM,KACNC,WAAY,CAAC,GAAGX,gEAA2E,GAAGA,+BAC9FY,IAAK,qBAET,YAAW,CACPT,IAAK,CACDC,KAAM,YACNC,OAAQ,CAAC,YACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,UAAW,kBAAmB,0BAEjDC,KAAM,KACNC,WAAY,CAAC,GAAGX,iDAAuD,GAAGA,oCAC1EY,IAAK,qBAET,YAAW,CACPT,IAAK,CACDC,KAAM,YACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,kBAAmB,oBAEtCC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,4BACpBY,IAAK,YAET,YAAW,CACPT,IAAK,CACDC,KAAM,YACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,WAAY,mBAC3BI,kBAAmB,QAEvBH,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,yBACpBY,IAAK,QAET,YAAW,CACPT,IAAK,CACDC,KAAM,YACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,WAAY,kBAAmB,mBAC9CI,kBAAmB,QAEvBH,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,2BACpBY,IAAK,QAET,WAAU,CACNT,IAAK,CACDC,KAAM,WACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,kBAAmB,aAEtCC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,6BACpBY,IAAK,YAET,cAAa,CACTT,IAAK,CACDC,KAAM,cACNC,OAAQ,CAAC,YACTC,WAAY,CAAC,IACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,aAEnBC,KAAM,KACNC,WAAY,CAAC,GAAGX,4CAAkD,IAClEY,IAAK,YAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,YACTC,WAAY,CAAC,IACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,kBAAmB,aAEtCC,KAAM,KACNC,WAAY,CAAC,GAAGX,2CAAiD,IACjEY,IAAK,YAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,sDACpBY,IAAK,QAET,WAAU,CACNT,IAAK,CACDC,KAAM,WACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YAAa,aAAc,cACxCC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,aAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,6BACpBY,IAAK,cAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YAAa,aAAc,cACxCC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,aAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,wBACpBY,IAAK,cAET,WAAU,CACNT,IAAK,CACDC,KAAM,WACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YAAa,aAAc,cACxCC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,aAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,gCACpBY,IAAK,cAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YAAa,cAC1BC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,8BACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,cACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,oCACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YAAa,cAC1BC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,gBAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,qCACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YAAa,cAC1BC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,8BACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,6BACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,gBAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,+BACpBY,IAAK,kBAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,YACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,gBAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,mCACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,aACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,sCACpBY,IAAK,QAET,aAAY,CACRT,IAAK,CACDC,KAAM,aACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,aACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,IAElBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,wCACpBY,IAAK,QAET,WAAU,CACNT,IAAK,CACDC,KAAM,WACNC,OAAQ,CAAC,IACTC,WAAY,CAAC,aACbC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,CAAC,gBAEnBC,KAAM,KACNC,WAAY,CAAC,GAAI,GAAGX,0BACpBY,IAAK,SAebpL,KAAAsL,iBAAqF,CACjFC,gBAAiB,CACbX,KAAM,kBACNY,OAASC,OAEL,MAAMC,OAASD,KAAK,GAIpB,OAAOzL,KAAK2L,SAASJ,gBAAgBG,OAAO,GAGpDE,sBAAuB,CACnBhB,KAAM,wBACNY,OAASC,OACL,MAAMI,MAAQJ,KAAK,GAEnB,OAAOzL,KAAK2L,SAASJ,gBAAgBM,MAAM,GAGnDC,gBAAiB,CACblB,KAAM,kBACNY,OAASC,OACL,MAAMC,OAASD,KAAK,GAEpB,OAAOzL,KAAK2L,SAASG,gBAAgBJ,OAAO,GAGpDK,SAAU,CACNnB,KAAM,WACNY,OAASC,OACL,MAAMC,OAASD,KAAK,GAEpB,OAAOzL,KAAK2L,SAASI,SAASL,OAAO,GAG7CM,YAAa,CACTpB,KAAM,cACNY,OAASC,OACL,MAAMC,OAASD,KAAK,GAEpB,OAAOzL,KAAK2L,SAASK,YAAYN,OAAO,IAQpD1L,KAAA2L,SAAkJ,CAC9IJ,gBAAkBG,QAC+C,KAAtDO,6BAA6BP,OAAQ,aAEhDI,gBAAkBJ,QAC+D,KAArEQ,aAAaR,OAAQ,aAAe,uBAAyB,IAEzEK,SAAWL,QACCA,OAA2BS,aAEvCH,YAAcN,SACDA,OAA2BS,aAmB/C,CA3qBU,IAAAC,GACHpM,KAAKqH,WAAa,iBAClBrH,KAAKZ,SAAW,EACnB,CACM,IAAAiN,GACHrM,KAAKsM,eACLtM,KAAKuM,kBACLvM,KAAKuK,QAAS,CACjB,CASD,eAAAgC,GAMI7J,aAAa,aAAc,GAAG,CAAC+I,KAAMe,QACjC,GAAe,gBAAXf,KAAK,IAAyC,YAAjBA,KAAK,IAAIpF,KAAoB,CAC1D,MAAMoG,KAAOhB,KAAK,GAElB,GAAiC,IADjBgB,KAAKlG,WAAW,IAAImG,cAAgB,IACxC/J,QAAQ,UAAgB,CAEhC,MAAMgK,cAAEA,eAAkBC,6BAA6BH,KAAMI,QAC7D,IAAI7H,IAAM8H,uBAAuBL,KAAKnG,SACtCtB,IAAM+H,uBAAuB/H,IAAK2H,eAAiB,IACnDF,KAAKlG,WAAWzH,KAAK,CACjB+G,IAAK,4CAA8C4G,KAAKnG,QACxDR,KAAMd,KAEb,CACJ,CACD,OAAOwH,KAAKf,KAAK,IASrB/I,aAAa,4BAA6B,KAAK,CAAC+I,KAAMe,QAClD,MAAMQ,OAASvB,KAAK,GACpB,GAAIuB,UAAUhN,KAAKsL,iBAAkB,CAEjC,OADqBtL,KAAKsL,iBAAiB0B,QACvBxB,OAAOC,KAC9B,CACG,OAAOe,KAAKf,KACf,IAML/I,aAAa,kBAAmB,IAAI,CAAC+I,KAAMe,QACvC,MAAMS,OAASxB,KAAK,GAEpB,GAAsB,iBAAXwB,OAAqB,OAAOT,KAAKf,MAE5C,MAAMyB,MAAQD,OAAOrM,MAAM,KAIrBuM,MAHWD,MAAMA,MAAMjN,OAAS,GAGfmN,QAAQ,OAAQ,IAEvC,GAA+B,GAA3BD,MAAMxK,QAAQ,UAAgB,CAC9B,MAAM0K,WAAa,8BAA8BrN,KAAK0K,kBAAkByC,OAA2B/B,UAEnG,OADAK,KAAK,GAAK4B,WACHb,KAAKf,KACf,CACD,OAAOe,KAAKf,KAAK,IAMrB/I,aAAa,kBAAmB1C,KAAKZ,UAAU,CAACqM,KAAMe,QAClD,MAAMC,KAAOhB,KAAK,GAOlB,GANAxF,SAAS,CACLpH,KAAM,kBACNwF,KAAM6B,QAAQY,SACdV,QAASqG,OAGI,YAAbA,KAAKpG,KAAoB,CACzB,MAAMiH,QAAUb,KAAKlG,WAAW,IAAImG,aAC9B3G,gBAAkB0G,KAAKlG,WAAW,IAAIR,gBACtCC,gBAAkByG,KAAKlG,WAAW,IAAIP,gBAC7B,UAAXsH,SAAwBC,OAAOC,MAAMxH,kBAAoBA,iBAAmB6G,QAAQvH,eACpFW,SAAS,CACL5B,KAAM6B,QAAQY,SACdjI,KAAM,gBACNuH,QAAS,CACL,OAAMyG,OAAOY,iBAAiBC,YAC9B,OAAMC,iCAG6B,GAAvCd,OAAOY,iBAAiBC,cACxBzH,SAAS,CACL5B,KAAM6B,QAAQY,SACdjI,KAAM,4BACNuH,QAAS,CACL,OAAMyG,OAAOY,iBAAiBC,YAC9B,OAAMC,iCAIdA,gCAEA5I,aAAa,+DAAgEgB,gBAAiBC,iBAE9F4H,mBAAmBf,OAAQ,MAE3BgB,sBAAsBhB,SAGjC,CACD,OAAOL,KAAKf,KAAK,GAExB,CAOD,YAAAa,GACIrG,SAAS,WACT,IAAI6H,UAAY,EAChB,IAAK,MAAMC,MAAM/N,KAAK0K,kBAAmB,CAErC1K,KAAKgO,eAAehO,KAAK0K,kBAAkBqD,IAAwBpD,KAEnE3K,KAAKiO,kBAGL,MAAMC,aAAelO,KAAK0K,kBAAkBqD,IAAwB7C,KAEpEgD,cAAcjG,SAAS3J,IACnB6P,oBAAoBrP,KAAKR,EAAE,IAE/BwP,WAAa,CAChB,CACD7H,SAAS,kBAAkB6H,YAC9B,CAKD,eAAAG,GAEI,IAAK,MAAM5P,KAAK2B,KAAK0K,kBAAmB,CACpC,MAAM0D,gBAAkBpO,KAAK0K,kBAAkBrM,GAEzCiP,QAAUc,gBAAgBzD,IAAIC,KAC9ByD,kBAAoBf,QAAQgB,UAAU,GACtCC,UAAYH,gBAAgBzD,IAAIE,OAChC2D,cAAgBJ,gBAAgBzD,IAAIG,WAEpC2D,YAA0B,GAIhC,GAFAA,YAAY3P,KAAK,CAAC,eAAewO,UAAW,GAAGe,sBAC/CI,YAAY3P,KAAK,CAAC,WAAWwO,UAAW,GAAGe,sBACvCE,UAAUtO,OAAS,EACnB,IAAK,MAAMyO,MAAMH,UACbE,YAAY3P,KAAK,CAAC,mBAAmB4P,MAAMpB,UAAW,GAAGe,sBACzDI,YAAY3P,KAAK,CAAC,aAAa4P,MAAMpB,UAAWc,gBAAgBjD,WAAW,KAGnF,QAA6B,IAAlBqD,eAA0D,kBAAlBA,eAA+BA,cAAcvO,OAAS,EACrG,IAAK,MAAM0O,OAAOH,cACdC,YAAY3P,KAAK,CAAC,kBAAkB6P,OAAOrB,UAAW,GAAGe,sBACzDI,YAAY3P,KAAK,CAAC,YAAY6P,OAAOrB,UAAWc,gBAAgBjD,WAAW,KAInFiD,gBAAgBlD,KAAOuD,WAC1B,CACJ,CAKO,cAAAT,CAAeY,UACnBC,mBAAmB/P,KAAK8P,UACxBE,2BAA2BhQ,KAAK8P,SAAShE,KAE5C,CA6dM,SAAAmE,GACH,MAAMlI,OAAsC,GAC5C,IAAK,MAAMxI,KAAK2B,KAAK0K,kBAAmB,CACpC,MAAMsE,OAAS3Q,EAAEiQ,UAAU,GAC3BzH,OAAO/H,KAAKkQ,OACf,CAMD,OALA/I,SAAS,CACLG,QAASS,OACThI,KAAM,8BACNwF,KAAM6B,QAAQY,WAEXD,MACV,EClsBC,MAAOoI,uBAAuB5E,WAApC,WAAAC,uBA+IItK,KAAAkP,KAAiB,CACb,SACA,WACA,WACA,WACA,UACA,UACA,UACA,OACA,YACA,WA6dP,CAnnBU,IAAA7C,GACHrM,KAAKuM,kBAELvM,KAAKuK,QAAS,CACjB,CACM,IAAA6B,GACHpM,KAAKqH,WAAa,iBAClBrH,KAAKZ,SAAW,EAEnB,CAQD,eAAAmN,GAKI7J,aAAa,eAAgB1C,KAAKZ,UAAU,CAACqM,KAAMe,QAC/C,MAAM3F,OAAS2F,KAAKf,MAMpB,OALKwD,eAAeE,eAChBF,eAAeE,aAAexH,SAASyH,eAAe,cAE1DH,eAAeI,qBAERxI,MAAM,IAKjBnE,aAAa,kBAAmB1C,KAAKZ,UAAU,CAACqM,KAAMe,QAClD,MAAM3F,OAAS2F,KAAKf,MAIpB,MAHgB,cAAZA,KAAK,IACLwD,eAAeK,sBAEZzI,MAAM,IAGjBnE,aAAa,wBAAyB1C,KAAKZ,UAAU,CAACqM,KAAMe,QACxD,MAAM3F,OAAS2F,KAAKf,MAIpB,MAHgB,cAAZA,KAAK,KACLwD,eAAeE,aAAexH,SAASyH,eAAe,cAEnDvI,MAAM,IAGjBnE,aAAa,2BAA4B1C,KAAKZ,UAAU,CAACqM,KAAMe,QAC3DyC,eAAeM,oBACfN,eAAeE,aAAe,KACvB3C,KAAKf,SAGhB/I,aAAa,uBAAwB1C,KAAKZ,UAAU,CAACqM,KAAMe,QACvD,MAAM3F,OAAS2F,KAAKf,MAEpB,OADAwD,eAAeO,kBACR3I,MAAM,IAGjBnE,aAAa,uBAAwB1C,KAAKZ,UAAU,CAACqM,KAAMe,QACvD,MAAM3F,OAAS2F,KAAKf,MAEpB,OADAwD,eAAeQ,kBACR5I,MAAM,IAIjBnE,aAAa,eAAgB,GACzB,CAAC+I,KAAMe,QACH,IAAIxH,IAAcyG,KAAK,GAGvB,MAAMiE,MAAQ1K,IAAI0K,MAAM,2BACpBA,QACA1K,IAAkB,KAAZ0K,MAAM,GAAY1P,KAAK2P,eAAeD,MAAM,GAAIE,SAASF,MAAM,KAAKA,MAAM,IAAmB,GAC/F1P,KAAK2P,eAAeD,MAAM,GAAIE,SAASF,MAAM,KAAKA,MAAM,IAAmB,IAInF,MAAMG,aAAe7K,IAAI0K,MAAM,WAC/B,IAAIG,aAcJ,OADApE,KAAK,GAAKzG,IACHwH,KAAKf,MAbR,GAAIrK,OAAOK,KAAKwN,eAAea,YAAYtQ,SAASqQ,aAAa,KAA0B,OAAnBA,aAAa,GAAa,CAC9FZ,eAAec,eAAeF,aAAa,IACJlI,SAASyH,eAAe,aAClDpL,MAAQ,EACxB,KAAM,CACHgM,kBAAkB,iCAAkC,KACbrI,SAASyH,eAAe,aAClDpL,MAAQ,GACxB,CAKY,GAE5B,CAQD,UAAAiM,CAAWxI,WAA+B,MACtC,MAAMyI,WAAiC,GAAGC,cAAcvF,SAAQ,IAAI5D,MAAOC,mBAI3EK,2BAFwCK,SAASyH,eAAe,mBAExBc,WAAYzI,WACvD,CAWD,cAAAkI,CAAevJ,QAAiBgK,6BAAsCC,eAAyBC,UAC3FrK,SAAS,4BAA4BG,yCAAyCgK,gCAG1E7C,OAAOC,MAAM4C,gCAA+BA,6BAA+B,GAC/E,MAAMG,sBAAwBH,6BAA+B,GAGvDI,YAAcH,eHgMtB,SAAuBI,KAWzB,GAVAxK,SAAS,CACLpH,KAAM,mBACNwF,KAAM6B,QAAQY,SACdV,QAAS,CACLsK,OAAM/P,OAAO+P,KACbC,YAAWhQ,OAAO+P,KAAKC,UACvBC,UAAWC,oBAAoBC,iBAInCnQ,OAAO+P,MAAQ/P,OAAO+P,KAAKC,WAAmD,OAAtCE,oBAAoBC,cAAwB,CACpF,MACMC,gBADY,IAAIL,KAAKC,UAAU,KAAM,CAAEK,YAAa,SACxBC,QAAQR,KACpCS,QAAoB,GAC1B,IAAK,MAAMD,WAAWF,gBAClBG,QAAQpS,KAAKmS,QAAQA,SAIzB,OADAhL,SAAS,iBAAiBiL,WACnBA,OACV,CACG,OAAO,IAEf,CGxN6CC,CAAa/K,QAAQgH,QAAQ,MAAO,UAAO5H,EAG1E4L,YAAwBZ,aAA4BpK,QAAQxF,MAAM,KAExE,OAAOZ,KAAKqR,eAAeD,YAAab,sBAAuBD,SAClE,CAsBO,cAAAe,CAAeC,YAAuBf,sBAA+BD,UAEzE,IAAIzJ,OAAS,GAGb,IAAK,IAAI1I,EAAI,EAAGA,EAAImT,YAAYrR,OAAQ9B,IAAK,CAEzC,MAAMoT,YAAsBD,YAAYnT,GACxC0I,QAAU0K,YAGNC,KAAKC,SAAWlB,wBAChB1J,QAAU7G,KAAK0R,iBAAiBH,cAIhCjB,UAAYzD,OAAOY,iBAAiBkE,UAAY,IAAMH,KAAKC,UAAY5E,OAAOY,iBAAiBkE,WAC/F9K,QAAU7G,KAAKkP,KAAKsC,KAAKI,MAAMJ,KAAKC,SAAWzR,KAAKkP,KAAKjP,UAIzD9B,EAAImT,YAAYrR,OAAS,EACrBuR,KAAKC,SAAWlB,wBAChB1J,QAAU,KAEdA,QAAU,KAEjB,CASD,OANAZ,SAAS,CACLpH,KAAM,UACNwF,KAAM6B,QAAQY,SACdV,QAASS,SAGNA,MACV,CAEO,gBAAA6K,CAAiBG,KAAcC,MAAgB,GAInD,GAAIA,OAFa,EAGb,OAAOD,KAIX,IAAIhL,OADyB2K,KAAKC,SACE,GAAM,MAAQ,IAAII,OAKtD,OAHIL,KAAKC,SAAW,KAChB5K,OAAS7G,KAAK0R,iBAAiB7K,OAAQiL,MAAQ,IAE5CjL,MACV,CAoCO,qBAAOkJ,CAAegC,SACN/R,KAAKgS,eAAeD,SAC3BnL,MAAMqC,QAAU,OAC7BjJ,KAAKiS,mBAAoB,CAC5B,CA0BO,yBAAO5C,GACX,GAAIrP,KAAKkS,cAAe,OAAOlS,KAAKkS,cACpC,MAAMC,OAASxK,SAASoC,cAAc,UA2BtC,OA1BAoI,OAAOC,GAAK,iBACZD,OAAOE,UAAY,iBACnBF,OAAO9N,KAAO,SACd8N,OAAOG,iBAAiB,SAAS,KACxBtS,KAAKuS,kBAAkBC,MAAsD,SAA9CxS,KAAKuS,kBAAkBC,KAAK5L,MAAMqC,QAEb,SAA9CjJ,KAAKuS,kBAAkBC,KAAK5L,MAAMqC,UACzCjJ,KAAKuS,kBAAkBC,KAAK5L,MAAMqC,QAAU,OAC5CjJ,KAAKiS,mBAAoB,GAHzBjS,KAAK+P,eAAe,MAIvB,IAED/P,KAAKyS,uCACL9K,SAAS2K,iBAAiB,SAAUI,QAChC,MAAM5N,OAAS4N,MAAM5N,QAChBA,OAAO6N,QAAQ,mBAAqB7N,OAAO6N,QAAQ,oBAAuB3S,KAAKuS,kBAAkBC,MAAQxS,KAAKiS,oBAC/GjS,KAAKuS,kBAAkBC,KAAM5L,MAAMqC,QAAU,OAC7CjJ,KAAKiS,mBAAoB,EAC5B,IAELjS,KAAKyS,sCAAuC,GAEhDN,OAAOS,UAAY,KAEnB5S,KAAKsP,sBACLtP,KAAKkS,cAAgBC,OACrBxK,SAASyB,KAAKI,YAAY2I,QACnBA,MACV,CAKO,0BAAO7C,GACPtP,KAAKmP,cAAgBnP,KAAKkS,gBAC1BlS,KAAKkS,cAActL,MAAMiM,IAAMjD,SAAS5P,KAAKmP,aAAavI,MAAMiM,KAA0B,KAAnBlS,OAAOmS,YAAoB,KAClG9S,KAAKkS,cAActL,MAAMmM,KAAOnD,SAAS5P,KAAKmP,aAAavI,MAAMmM,MAA2B,KAAnBpS,OAAOmS,YAAoB,KAE3G,CAMO,qBAAOd,CAAegB,KAE1B,MAAMC,iBAAEA,iBAAgBT,KAAEA,MAEpBxS,KAAKuS,kBAAkBC,KACnB,CAAES,iBAAkBjT,KAAKuS,kBAAkBW,UAAYV,KAAMxS,KAAKuS,kBAAkBC,MACpFvD,eAAekE,mBAIzB,OADAnT,KAAKoT,mBAAmBH,iBAAkBD,KACnCR,IACV,CAMO,mBAAOa,CAAaX,MAAmBY,gBAC3C,GAAqB,IAAjBZ,MAAMP,QAEN,GAAInS,KAAKmP,aAAc,CAEnB,MAAMoE,eAAiBvT,KAAKmP,aAAaqE,eACzC,GAAuB,OAAnBD,iBAA8C,GAAnBA,eAC3BvT,KAAKmP,aAAanL,OAASsP,eAAeG,gBACvC,CAEH,MAAMzP,MAAQhE,KAAKmP,aAAanL,MAC1B0P,SAAW1P,MAAMsK,UAAU,EAAGiF,gBAAkBD,eAAeG,YAAczP,MAAMsK,UAAUiF,gBACnGvT,KAAKmP,aAAanL,MAAQ0P,SAE1B,MAAMC,kBAAoBJ,gBAAgD,MAA9BD,eAAeG,YAAsB,EAAIH,eAAeG,YAAYxT,QAChHD,KAAKmP,aAAayE,kBAAkBD,kBAAmBA,kBAC1D,CACJ,OACuB,IAAjBjB,MAAMP,OH1UV,OADWnN,IG4UJsO,eAAeG,cH1UjChN,WAAW,eAAgB,CAAEH,QAAStB,IAAKqB,KAAM,UG2UjB,IAAjBqM,MAAMP,QHpUnB,SAAmBnN,KACV,MAAPA,KACJyB,WAAW,eAAgB,CAAEJ,KAAM,OAAQC,QAAStB,KACxD,CGkUY6O,CAASP,eAAeG,aH9U9B,IAAoBzO,GGgVrB,CAOO,uBAAOmO,GAEX,MAAMX,KAAuB7K,SAASoC,cAAc,OACpDyI,KAAKJ,GAAK,eACVI,KAAK5L,MAAMqC,QAAU,OAGrB,MAAM6K,UAA4BnM,SAASoC,cAAc,OAEnDgK,iBAAsD/T,KAAK+T,iBAI3DC,eAAoCrM,SAASoC,cAAc,UACjEiK,eAAepB,UAAY,uLAO3B,MAAMK,iBAAmCtL,SAASoC,cAAc,OAGhEyI,KAAKhJ,YAAYsK,WACjBtB,KAAKhJ,YAAYyJ,kBAIjBT,KAAKH,UAAY,eACjByB,UAAUzB,UAAY,gBACtB2B,eAAe3B,UAAY,sBAC3BY,iBAAiBZ,UAAY,oBAG7B2B,eAAe1B,iBAAiB,SAAS,KACrCE,KAAK5L,MAAMqC,QAAU,OACrBjJ,KAAKiS,mBAAoB,CAAK,IAIlC,IAAK,MAAMe,OAAOe,iBAIdA,iBAAiBf,KAAKJ,UAAYI,IAElCe,iBAAiBf,KAAKX,UAAY,qBAElCyB,UAAUtK,YAAYuK,iBAAiBf,MAGvCe,iBAAiBf,KAAKV,iBAAiB,SAAS,KAE5C,MAAM2B,UAAYjU,KAAKkU,oBAAoBlB,KAC3ChT,KAAKoT,mBAAmBH,iBAAkBgB,UAAU,IAY5D,OAPAH,UAAUtK,YAAYwK,gBAGtBhU,KAAKuS,kBAAoB,CAAE4B,MAAOL,UAAWZ,UAAWD,iBAAkBT,KAAMA,MAEhF7K,SAASyB,KAAKI,YAAYgJ,MAEnB,CAAES,kCAAkBT,UAC9B,CAMO,iCAAO4B,CAA2BH,WAEjCjU,KAAK+T,iBAAiBE,WAAWI,UAAUC,SAD7B,8BAEftU,KAAK+T,iBAAiBE,WAAWI,UAAUnW,IAF5B,6BAInB,IAAK,MAAMqW,QAAQvU,KAAK+T,iBAChBQ,MAAQN,WACRjU,KAAK+T,iBAAiBQ,MAAMF,UAAU1L,OAAO,4BAGxD,CAOO,0BAAOuL,CAAoBlB,KAE/B,IAAIiB,UAA2B,KAC/B,OAAQjB,KACJ,IAAK,KACDiB,UAAY,KACZ,MACJ,IAAK,KACDA,UAAY,KACZ,MACJ,IAAK,KACDA,UAAY,KACZ,MACJ,IAAK,KACDA,UAAY,KACZ,MACJ,IAAK,KACDA,UAAY,KACZ,MACJ,IAAK,KACDA,UAAY,KACZ,MACJ,IAAK,KACDA,UAAY,KACZ,MACJ,QACIA,UAAY,MAGpB,OAAOA,SACV,CAOO,oBAAOO,CAAcP,WAEzB,IAAIjB,IAAqB,KACzB,OAAQiB,WACJ,IAAK,KACDjB,IAAM,KACN,MACJ,IAAK,KACDA,IAAM,KACN,MACJ,IAAK,KACDA,IAAM,KACN,MACJ,IAAK,KACDA,IAAM,KACN,MACJ,IAAK,KACDA,IAAM,KACN,MACJ,IAAK,KACDA,IAAM,KACN,MACJ,IAAK,KACDA,IAAM,KACN,MACJ,QACIA,IAAM,KAGd,OAAOA,GACV,CAOO,yBAAOI,CAAmBH,iBAAkCD,KAGhE,MAAMyB,YAA+B,OAAPzB,IAAehT,KAAK0U,gBAAkB1U,KAAK8P,WAAWkD,KAEpFC,iBAAiBL,UAAY,GAE7B5S,KAAKoU,2BAA2BpU,KAAKwU,cAAcxB,MAEnD,IAAK,MAAM2B,WAAWF,YAAa,CAC/B,MAAMnB,eAAiC3L,SAASoC,cAAc,OAC9DuJ,eAAejB,UALM,UAMrBiB,eAAesB,UAAYD,QACf,SAAR3B,MACAM,eAAehB,iBAAiB,SAAUI,QACtC1S,KAAKqT,aAAaX,MAAOY,eAAe,IAG5CA,eAAehB,iBAAiB,eAAgBI,QAC5CA,MAAMmC,iBACN7U,KAAKqT,aAAaX,MAAOY,eAAe,IAE5CA,eAAehB,iBAAiB,aAAcI,QACrB,IAAjBA,MAAMP,SACNO,MAAMmC,iBACN7U,KAAKqT,aAAaX,MAAOY,gBAC5B,KAGTL,iBAAiBzJ,YAAY8J,eAChC,CACJ,CAKO,wBAAO/D,GACPvP,KAAKkS,gBACLlS,KAAKkS,cAAcvJ,SACnB3I,KAAKkS,cAAgB,MAErBlS,KAAKuS,kBAAkBC,OACvBxS,KAAKuS,kBAAkBC,KAAK7J,SAC5B3I,KAAKuS,kBAAoB,CACrBC,KAAM,KACN2B,MAAO,KACPjB,UAAW,MAGtB,CAKO,sBAAOzD,GACPzP,KAAKuS,kBAAkBC,OACvBxS,KAAKuS,kBAAkBC,KAAK5L,MAAMqC,QAAU,QAE5CjJ,KAAKkS,gBACLlS,KAAKkS,cAActL,MAAMqC,QAAU,OAE1C,CAKO,sBAAOuG,GACPxP,KAAKuS,kBAAkBC,MAAkC,GAA1BxS,KAAKiS,oBACpCjS,KAAKuS,kBAAkBC,KAAK5L,MAAMqC,QAAU,QAE5CjJ,KAAKkS,gBACLlS,KAAKkS,cAActL,MAAMqC,QAAU,SAG1C,CAMO,oBAAOyL,GACX,MAAMI,eAA2B,GACjC,IAAK,MAAM9B,OAAOhT,KAAK8P,WACnB,GAAW,QAAPkD,IACJ,IAAK,MAAM2B,WAAW3U,KAAK8P,WAAWkD,KAClC8B,eAAehW,KAAK6V,SAG5B,OAAOG,cACV,WAtmBM7F,eAAYE,aAA4B,KA8MhCF,eAAAsD,kBAIX,CACIC,KAAM,KACN2B,MAAO,KACPjB,UAAW,MAIJjE,eAAA8E,iBAAsD,CACjE,KAAIpM,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,OAC3B,KAAIpC,SAASoC,cAAc,QAIxBkF,eAAaiD,cAA6B,KAE1CjD,eAAiBgD,mBAAY,EAarBhD,eAAAa,WAAgD,CAC3DiF,KAAM,CAAC,eAAgB,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,eACrGC,GAAI,CAAC,YAAa,WAAY,YAAa,YAAa,SAAU,gBAAiB,SAAU,UAAW,SAAU,eAAgB,YAAa,UAAW,UAAW,UAAW,YAAa,UAAW,WACpM,YAAa,UAAW,SAAU,WAAY,YAAa,UAAW,aAAc,cAAe,mBAAoB,SAAU,YAAa,WAC9I,UAAW,eAAgB,aAAc,UAAW,aACxDC,GAAI,CAAC,MAAO,MAAO,QAAS,SAAU,UAAW,MAAO,YAAa,aAAc,SAAU,SAAU,SAAU,QAAS,SAC1HC,GAAI,CAAC,OAAQ,SAAU,WAAY,MAAO,WAAY,kBAAmB,UAAW,SAAU,SAAU,QAAS,UAAW,SAAU,kBAAmB,UAAW,YACpKC,GAAI,CAAC,WAAY,MAAO,UAAW,eAAgB,UAAW,SAAU,QAAS,kBAAmB,aAAc,kBAC9G,SAAU,wBAAyB,sBAAuB,UAAW,UAAW,SAAU,cAAe,eACzG,SAAU,WAAY,UAAW,SAAU,UAAW,UAAW,mBAAoB,QAAS,WAAY,WAC9GC,GAAI,CAAC,MAAO,cAAe,UAAW,aAAc,QAAS,WAAY,WAAY,UAAW,YAAa,cAAe,QAAS,UACjI,YAAa,MAAO,QAAS,aAAc,YAAa,aAC5DC,GAAI,CAAC,MAAO,UAAW,SAAU,YAAa,SAAU,SAAU,QAAS,SAAU,eAAgB,QAAS,gBAAiB,QAAS,YAAa,cACrJC,GAAI,CAAC,aAAc,SAAU,SAAU,SAAU,SAAU,QAAS,UAAW,aAAc,aAAc,YAAa,UAAW,aAAc,kBAC7I,iBAAkB,aAAc,QAAS,WAAY,cAAe,YAAa,cAAe,UAAW,mBAAoB,cAIxHrG,eAAoCwD,sCAAa,ECnR7D,MAAM8C,cAAgB,IAAM1I,OAAO2I,IAC7BC,kCAAoC,IAAM5I,OAAO6I,sBAAsBF,IACvEG,iBAAmB,IAAM9I,OAAO+I,kBAAkBJ,IACzDK,oCAAsC,CAAC,4BAA6B,kBACpE,MAAOC,mBAAmBzL,WAgCrB,IAAAgC,GACHrM,KAAK+V,iBAELC,KAAWC,cAEXD,KAAWE,oBAEXC,YAAW,KACPC,4BAA4BvJ,OAAO,GACpC,KAEH7M,KAAKuK,QAAS,CACjB,CACM,IAAA6B,GACHpM,KAAKqH,WAAa,aAClBrH,KAAKZ,SAAW,EAEhBuB,OAAO0V,aAAeL,KAAWM,YACjC3V,OAAO4V,gBAAkBP,KAAWQ,eAEpC,MAAMC,YAAc9O,SAASoC,cAAc,QAC3C0M,YAAYC,IAAM,aAClBD,YAAYpS,KAAO,WACnBoS,YAAYzM,KAAOvF,QAGnBkD,SAASgP,KAAKnN,YAAYiN,YAE7B,CAEO,cAAAV,GACJrT,aAAa,gBAAiB1C,KAAKZ,UAAU,CAACqM,KAAMe,QAChDwJ,KAAWY,cACJpK,KAAKf,SAKhB/I,aAAa,eAAgB1C,KAAKZ,UAAU,CAACqM,KAAMe,QAC/CwJ,KAAWY,cACJpK,KAAKf,QAEnB,CAKM,kBAAOwK,GAEV,GAAIN,mBAAoB,CAEpB9I,OAAO2I,IAAMqB,KAAKC,MAAMC,SAASC,qBAAqBrB,qBAAuB,IAE7E,IAAK,MAAMsB,KAAKpK,OAAO2I,IAAI,CAEvB,GAAU,SAANyB,EACA,IAAK,MAAMC,MAAMrK,OAAO2I,IAAI/I,UACIjH,IAAxBqH,OAAO2I,IAAI/I,KAAKyK,MAChBrK,OAAO2I,IAAI/I,KAAKyK,IAAMlX,KAAKmX,YAAYD,KAKnD,GAAU,aAAND,EACA,IAAK,MAAMG,MAAMvK,OAAO2I,IAAI6B,cACQ7R,IAA5BqH,OAAO2I,IAAI6B,SAASD,MACpBvK,OAAO2I,IAAI6B,SAASD,IAAMpX,KAAKsX,eAAeF,IAI7D,CACJ,MAEGvK,OAAO2I,IAAM,CACTlT,QAASuC,mBACT4H,KAAMzM,KAAKmX,YACXE,SAAUrX,KAAKsX,gBAKnB7B,oCACA5I,OAAO6I,qBAAsBF,IAAM,CAE/B+B,0BAA2B1K,OAAO2I,IAAI/I,KAAK8K,2BAA6B,GACxEC,eAAgB3K,OAAO2I,IAAI/I,KAAK+K,gBAAkB,GAGtD3K,OAAO6I,qBAAsBF,IAAMxV,KAAKyX,+BAE/C,CAKM,kBAAOb,GACLjB,qBACD9I,OAAO+I,kBAAkBJ,IAAM,IAEnC,MAAM/I,KAA0B,CAC5BnK,QAASiT,iBAAiBjT,SAAWuC,mBACrCwS,SAAU9B,iBAAiB8B,UAA8B,CAAE,EAC3D5K,KAAM8I,iBAAiB9I,MAAkB,CAAE,GAE/CI,OAAO+I,kBAAkBJ,IAAMuB,SAASW,iBAAiBb,KAAKc,UAAUlL,OACxEmL,kCAAkC,MACrC,CAOM,mBAAOC,CAAaC,cACvB,MAAMC,aAAexC,iBAAiB8B,SACtC,IAAK,MAAMW,QAAQF,aACXC,cAAgBA,aAAaC,OAASF,aAAaE,QACnDD,aAAaC,MAAQF,aAAaE,MAG7C,CACM,eAAOC,CAASC,UACnB,MAAMzL,KAAO8I,iBAAiB9I,KACxBiJ,qBAAuBD,oCAC7B,IAAK,MAAM0C,WAAWD,SACdzL,MAAQA,KAAK0L,UAAYD,SAASC,WAClC1L,KAAK0L,SAAWD,SAASC,UAEzBzC,sBAAwBG,oCAAoCrW,SAAS2Y,WACrEzC,qBAAqByC,SAAiDD,SAASC,SAG1F,CAMM,wBAAOjC,GACV,MAAMzJ,KAAO8I,iBAAiB9I,KACzBA,OACDI,OAAOY,iBAAmBZ,OAAOY,gBAAgBkE,UAAYlF,KAAK2L,kBAClEvL,OAAOY,gBAAgBkE,SAAWlF,KAAK2L,iBAE3CzK,8BAAgClB,KAAK4L,aAAe,EACvD,kBA9KMvC,WAAAwC,gBAAkBC,UAAUC,UAE5B1C,WAAmB2C,oBAAG,oEAEtB3C,WAAApG,MAAQsG,KAAKsC,gBAAgB5I,MAAMsG,KAAKyC,qBAExC3C,WAAAqB,YAAwB,CAC3BuB,iBAAiB,EACjBnB,0BAA2B,GAC3BC,eAAgB,EAChBa,YAAa,EACbD,gBAAiB,GAEdtC,WAAcwB,eAAqB,CAAA,EAGnCxB,WAAA2B,gCAAgE,CACnEF,0BAA2B,GAC3BC,eAAgB,GAKb1B,WAAAQ,YAAcN,KAAKtG,MAAQsG,KAAKtG,MAAM,GAAK,UAI3CoG,WAAcU,eAAGR,KAAKtG,MAAQE,SAASoG,KAAKtG,MAAM,KAAO,ECnB9D,MAAOiJ,6BAA6BtO,WAO/B,sCAAWuO,CAA4BC,UAC1C,IAAK,MAAMpY,KAAKoY,SACZ7Y,KAAK8Y,oBAAoBrY,EAAE5B,MAAQ4B,CAE1C,CAEM,IAAA4L,GACHsM,qBAAqBI,mBACrB/Y,KAAKuK,QAAS,CACjB,CACM,IAAA6B,GACHpM,KAAKqH,WAAa,uBAClBrH,KAAKZ,SAAW,GACnB,CAQO,uBAAO2Z,GAEX/Y,KAAKgZ,gBAGL,IAAK,MAAMvY,KAAKT,KAAKiZ,yBACY,iBAAlBxY,EAAEyY,aACTlZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAQ,CACjCua,oBAAqB,EACrBF,aAAczY,EAAEyY,aAChBG,WAAW,GAGfrZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAQ,CACjCua,oBAAqB,EACrBF,aAAczY,EAAEyY,eAChBG,WAAW,EACXC,gBAAiB7Y,EAAEyY,cAM/BjT,SAAS,gEAAgEjG,KAAKiZ,yBAAyBhZ,UAEvGyC,aAAa,eAAgB,KAAK,CAAC+I,KAAMe,QACrC,MAAMpE,YAAcmR,aACpB,IAAK,MAAM9Y,KAAKT,KAAKiZ,yBACH,gBAAVxY,EAAE5B,MACFoH,SAAS,0BAA0BxF,EAAE5B,uBAIqB,GAA1DmB,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMua,oBAA0BpZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMua,mBAEtF,gBAAV3Y,EAAE5B,MACFoH,SAAS,oIAAoIjG,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMua,mBAAqBpZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMqa,+BAA+B9Q,iBAGvQ3H,EAAE+Y,iBAAmBxZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMua,mBAAqBpZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMqa,cAAgB9Q,cAClH,gBAAV3H,EAAE5B,MACFoH,SAAS,mCAEbxF,EAAEgZ,OAC4B,iBAAnBhZ,EAAEyY,cACTjT,SAAS,0BAA0BxF,EAAE5B,6BAA6BmB,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMqa,iBAGzGlZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMua,mBAAqBhR,YACpDpI,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMwa,YACnCrZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMqa,aAAelZ,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMya,kBACrFrT,SAAS,0BAA0BxF,EAAE5B,6BAA6BmB,KAAKmZ,sBAAsB1Y,EAAE5B,MAAMqa,mBAOjH,OAAO1M,KAAKf,KAAK,GAIxB,CAKO,oBAAOuN,GACXhZ,KAAKiZ,yBAA2B7X,OAAO1C,OAAOsB,KAAK8Y,qBAC9C3Z,MAAK,CAACd,EAAGqb,IAAMrb,EAAEe,SAAWsa,EAAEta,UACtC,EA/FcuZ,qBAAwBM,yBAAqB,GAE7CN,qBAAmBG,oBAA4B,CAAA,EAkB/CH,qBAAqBQ,sBAAiI,CAAE,ECtCrK,MAAOQ,mBAAmBtP,WAErB,IAAAgC,GAGH3J,aAAa,yBAA0B,KAAK,CAAC+I,KAAMe,QAC/CmN,WAAWC,YACJpN,KAAKf,SAIhB/I,aAAa,uBAAwB,KAAK,CAAC+I,KAAMe,QAC7C,IAAIqN,UAAYrN,KAAKf,MAIrB,OAHKqO,iBAAiC,IAAdD,WAA4C,IAAzBF,WAAWE,YAClDA,UAAYF,WAAWE,WAEpBA,SAAS,IAGpB7Z,KAAKuK,QAAS,CACjB,CACM,IAAA6B,GACHpM,KAAKqH,WAAa,aAClBrH,KAAKZ,SAAW,EACnB,CAgBM,eAAO2a,CAASpT,MAAeI,KAAciT,UAAmBC,UACnEja,KAAKka,kBAAkBhb,IAAIib,SAAU,CAAExT,MAAOA,MAAOI,KAAMA,KAAMiT,UAAWA,UAAWI,SAAS,EAAOH,SAAUA,UACpH,CASO,gBAAOL,GAEX,GAAsB,aAAlBS,eAAgE,IAAhCra,KAAKka,kBAAkB7a,KAG3D,IAAK,MAAO2T,IAAKN,SAAU1S,KAAKka,kBAAkBjb,UAAW,CAEzD,GAAIyT,MAAM0H,QAAS,CACfpa,KAAKka,kBAAkBhY,OAAO8Q,KAC9B,QACH,CAED,MAAMsH,WAAaf,aAInB,GAFAvZ,KAAKua,aAAeva,KAAKua,cAAgB7H,MAAM3L,KAAOuT,WAElDta,KAAKua,aAAeD,WAAY,CAEhC,MAAME,WAAaxa,KAAKya,kBAAkBza,KAAKua,aAAeD,WAAY5H,MAAMsH,WAEhFU,SAAS,EAAG,EAAG,IAAM,IAAMhI,MAAM/L,MAAQ6T,YAEzC,KACH,CAEG9H,MAAM0H,SAAU,EAEhBpa,KAAKua,aAAe,KAEpB7H,MAAMuH,YAGb,CACJ,CAOM,kBAAOU,CAAYC,SAAkBC,OACxC7a,KAAK6Z,UAAYgB,MACjB1E,YAAW,KACPnW,KAAK6Z,UAAY,CAAC,GACnBe,SACN,CAQO,wBAAOH,CAAkBK,UAAmBC,gBAChD,IAAIC,MAAQxJ,KAAKyJ,IAAI,EAAGzJ,KAAK0J,IAAI,IAAK1J,KAAKI,MAAMmJ,gBAAkB,EAAIvJ,KAAK2J,KAAKL,UAAY,UAAUxb,SAAS,IAEhH,OADI0b,MAAM/a,OAAS,IAAG+a,MAAQ,IAAMA,OAC7BA,KACV,CAWO,gCAAOI,CAA0BC,YAAqBC,cAAuBC,eAEjF,MAEMC,MAAS,EAAIhK,KAAKiK,GAAKJ,YAFd,IAIf,OAAOC,cAAgC,GAAhBA,cAAsB9J,KAAKkK,IAAIF,MACzD,EAnGa7B,WAASE,UAAW,EAGpBF,WAAAO,kBACR,IAAI9b,IAcIub,WAAYY,aAAkB,+DC/C9C,SAASoB,KAAMC,SAIb,IAAIC,YAmBA,WAGN,IAAIC,KAAO,KAGPC,gBAAkB,CAAA,EAGtBC,kBAGA,IAAIC,YAAc,GAEdJ,YAAc,SAAUK,SAM1B,QAAqB1W,KAJrB0W,QAAUA,SAAW,IAITJ,MAAuC,OAAjBI,QAAQJ,MAAiBI,QAAQJ,OAASlM,SAASsM,QAAQJ,KAAM,IACjGA,KAAOI,QAAQJ,UAGV,GAA4B,iBAAjBI,QAAQJ,KACxBA,KAAOK,gBAAgBD,QAAQJ,UAG1B,SAAqBtW,IAAjB0W,QAAQJ,MAAuC,OAAjBI,QAAQJ,KAC/C,MAAM,IAAIM,UAAU,+CAIpBN,KAAO,IACR,CAED,IAAIO,EAAEC,EAGN,GAAsB,OAAlBJ,QAAQK,YAAoC/W,IAAlB0W,QAAQK,MAAqB,CAKzD,IAHA,IAAIC,YAAcN,QAAQK,MACtBE,OAAS,GAEJte,EAAI,EAAGA,EAAI+d,QAAQK,MAAOpe,IACjC8d,YAAYnd,MAAK,GAInB,IAFAod,QAAQK,MAAQ,KAETC,YAAcC,OAAOxc,QAAQ,CAElC,IAAI0G,MAAQkV,YAAYK,SAEX,OAATJ,OACFI,QAAQJ,KAAOA,MAGjBW,OAAO3d,KAAK6H,MACb,CAID,OAFAuV,QAAQK,MAAQC,YAETC,MACR,CAYD,OAAOC,UAAU,CATjBL,EAAIM,QAAQT,SAGZI,EAAIM,eAAeP,EAAGH,SAGlBW,eAAeR,EAAGC,EAAGJ,UAGCA,QAC9B,EAEE,SAASS,QAAQT,SACf,GAAID,YAAYhc,OAAS,EAAG,CAC1B,IAEI6c,IAAMC,aAFNC,SAAWC,gBAAgBf,QAAQY,MAKnCI,MAAQF,SAAS,GAAKA,SAAS,IAAMf,YAAYhc,OAEjDkd,EAAIvN,UAAUkN,IAAME,SAAS,IAAME,MAkBvC,OAfuB,IAAnBjB,YAAYkB,GACdA,GAAKA,EAAI,GAAKlB,YAAYhc,OAG1Bgc,YAAYkB,IAAK,GAQnBL,IAAMC,aAFNC,SAAW,EAHAA,SAAS,GAAKG,EAAID,MAAQ,KAC1BF,SAAS,IAAMG,EAAI,GAAKD,MAAQ,OAMjC,IAAIJ,IAAM,IAAMA,KACnBA,GACR,CAEC,IAAIE,SASJ,OAPAF,IAAMC,aAFFC,SAAWI,YAAYlB,QAAQY,OAKzB,IACRA,IAAM,IAAMA,KAGPA,GAEV,CAED,SAASF,eAAgBE,IAAKZ,SAE5B,GAAoB,eAAhBA,QAAQY,IACV,OAAO,EAGT,GAA2B,WAAvBZ,QAAQmB,WACV,OAAON,aAAa,CAAC,EAAE,MAGzB,IAAIO,gBAAkBC,mBAAmBT,KAErCU,KAAOF,gBAAgB,GACvBG,KAAOH,gBAAgB,GAE3B,OAAQpB,QAAQmB,YAEd,IAAK,SACHG,KAAO,GACP,MAEF,IAAK,OACHA,KAAOC,KAAO,GACd,MAEF,IAAK,QACHA,KAAO,GAIX,OAAOV,aAAa,CAACS,KAAMC,MAE5B,CAED,SAASZ,eAAgBR,EAAGC,EAAGJ,SAE7B,IAAIwB,KAAOC,qBAAqBtB,EAAGC,GAC/BsB,KAAO,IAEX,OAAQ1B,QAAQmB,YAEd,IAAK,OACHO,KAAOF,KAAO,GACd,MAEF,IAAK,QACHA,MAAQE,KAAOF,MAAM,EACrB,MAEF,IAAK,SACHA,KAAO,EACPE,KAAO,IAIX,OAAOb,aAAa,CAACW,KAAME,MAC5B,CAED,SAASlB,UAAWmB,IAAK3B,SAEvB,OAAQA,QAAQ4B,QAEd,IAAK,WACH,OAAOD,IAET,IAAK,WACH,OAAOE,SAASF,KAElB,IAAK,MACH,IAAIG,IAAMD,SAASF,KACnB,MAAO,OAAOG,IAAI,GAAG,KAAKA,IAAI,GAAG,MAAMA,IAAI,GAAG,KAEhD,IAAK,OACH,IAAIC,SAAWF,SAASF,KACpB7C,MAAQkB,QAAQlB,OAASxJ,KAAKC,SAClC,MAAO,QAAQwM,SAAS,GAAG,KAAKA,SAAS,GAAG,MAAMA,SAAS,GAAG,MAAQjD,MAAQ,IAEhF,IAAK,WACH,OAAOkD,SAASL,KAElB,IAAK,MAEH,MAAO,OADGK,SAASL,KACC/c,KAAK,MAAQ,IAEnC,IAAK,OACH,IAAIqd,SAAWD,SAASL,KACpB7C,MAAQkB,QAAQlB,OAASxJ,KAAKC,SAClC,MAAO,QAAU0M,SAASrd,KAAK,MAAQ,KAAOka,MAAQ,IAExD,QACE,OAAOoD,SAASP,KAGrB,CAED,SAASF,qBAAqBtB,EAAGC,GAI/B,IAFA,IAAI+B,YAAcC,aAAajC,GAAGgC,YAEzBlgB,EAAI,EAAGA,EAAIkgB,YAAYpe,OAAS,EAAG9B,IAAK,CAE/C,IAAIogB,GAAKF,YAAYlgB,GAAG,GACpBqgB,GAAKH,YAAYlgB,GAAG,GAEpBsgB,GAAKJ,YAAYlgB,EAAE,GAAG,GACtBugB,GAAKL,YAAYlgB,EAAE,GAAG,GAE1B,GAAIme,GAAKiC,IAAMjC,GAAKmC,GAAI,CAErB,IAAI9e,GAAK+e,GAAKF,KAAKC,GAAKF,IAGxB,OAAO5e,EAAE2c,GAFDkC,GAAK7e,EAAE4e,GAGjB,CAEF,CAED,OAAO,CACR,CAED,SAASnB,YAAauB,YAEpB,GAAoC,iBAAzB/O,SAAS+O,YAA0B,CAE5C,IAAIC,OAAShP,SAAS+O,YAEtB,GAAIC,OAAS,KAAOA,OAAS,EAC3B,MAAO,CAACA,OAAQA,OAGnB,CAED,GAA0B,iBAAfD,WAET,GAAI5C,gBAAgB4C,YAAa,CAC/B,IAAIhY,MAAQoV,gBAAgB4C,YAC5B,GAAIhY,MAAMqW,SAAW,OAAOrW,MAAMqW,QACnC,MAAM,GAAI2B,WAAWjP,MAAM,kCAAmC,CAC7D,IAAIoN,IAAM+B,SAASF,YAAY,GAC/B,MAAO,CAAE7B,IAAKA,IACf,CAGH,MAAO,CAAC,EAAE,IAEX,CAED,SAASS,mBAAoBT,KAC3B,OAAOwB,aAAaxB,KAAKQ,eAC1B,CAED,SAASgB,aAAcxB,KAOrB,IAAK,IAAIgC,aAJLhC,KAAO,KAAOA,KAAO,MACvBA,KAAM,KAGcf,gBAAiB,CACpC,IAAIpV,MAAQoV,gBAAgB+C,WAC5B,GAAInY,MAAMqW,UACNF,KAAOnW,MAAMqW,SAAS,IACtBF,KAAOnW,MAAMqW,SAAS,GACvB,OAAOjB,gBAAgB+C,UAE5B,CAAC,MAAO,iBACV,CAED,SAAS/B,aAAcgC,OACrB,GAAa,OAATjD,KAAe,CAEjB,IAAIkD,aAAe,iBACflhB,EAAE0T,KAAKC,SAGX,OAFA3T,GAAKkhB,aACLlhB,GAAK,EACE0T,KAAKI,MAAMmN,MAAM,GAAKjhB,GAAGihB,MAAM,GAAK,EAAIA,MAAM,IAC3D,CAEM,IAAI9D,IAAM8D,MAAM,IAAM,EAClB7D,IAAM6D,MAAM,IAAM,EAElBE,KADJnD,MAAe,KAAPA,KAAc,OAAS,QACd,OACjB,OAAOtK,KAAKI,MAAMsJ,IAAM+D,KAAOhE,IAAMC,KAExC,CAED,SAASkD,SAAUP,KAEjB,IAAIqB,IAAMhB,SAASL,KAEnB,SAASsB,eAAe1e,GACpB,IAAI2e,IAAM3e,EAAEnB,SAAS,IACrB,OAAqB,GAAd8f,IAAInf,OAAc,IAAMmf,IAAMA,GACxC,CAID,MAFU,IAAMD,eAAeD,IAAI,IAAMC,eAAeD,IAAI,IAAMC,eAAeD,IAAI,GAItF,CAED,SAASG,YAAaxgB,KAAMme,SAAUqB,aAEpC,IAAIb,KAAOa,YAAY,GAAG,GACtBZ,KAAOY,YAAYA,YAAYpe,OAAS,GAAG,GAE3Cyd,KAAOW,YAAYA,YAAYpe,OAAS,GAAG,GAC3C2d,KAAOS,YAAY,GAAG,GAE1BtC,gBAAgBld,MAAQ,CACtBme,SAAUA,SACVqB,YAAaA,YACbf,gBAAiB,CAACE,KAAMC,MACxB6B,gBAAiB,CAAC5B,KAAME,MAG3B,CAED,SAAS5B,kBAEPqD,YACE,aACA,KACA,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,KAGdA,YACE,MACA,EAAE,GAAG,IACL,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAGzEA,YACE,SACA,CAAC,GAAG,IACJ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAGzDA,YACE,SACA,CAAC,GAAG,IACJ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAGjEA,YACE,QACA,CAAC,GAAG,KACJ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAGjEA,YACE,OACA,CAAC,IAAK,KACN,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAGzEA,YACE,SACA,CAAC,IAAK,KACN,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAGzEA,YACE,OACA,CAAC,IAAK,KACN,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,KAG1D,CAED,SAASnB,SAAUL,KAIjB,IAAIza,EAAIya,IAAI,GACF,IAANza,IAAUA,EAAI,GACR,MAANA,IAAYA,EAAI,KAGpBA,GAAM,IACN,IAAI5E,EAAIqf,IAAI,GAAG,IACX0B,EAAI1B,IAAI,GAAG,IAEX2B,IAAMhO,KAAKI,MAAQ,EAAFxO,GACnB1B,EAAQ,EAAJ0B,EAAQoc,IACZ/gB,EAAI8gB,GAAK,EAAI/gB,GACbihB,EAAIF,GAAK,EAAI7d,EAAElD,GACff,EAAI8hB,GAAK,GAAK,EAAI7d,GAAGlD,GACrBV,EAAI,IACJsE,EAAI,IACJsX,EAAI,IAEN,OAAO8F,KACL,KAAK,EAAG1hB,EAAIyhB,EAAGnd,EAAI3E,EAAGic,EAAIjb,EAAI,MAC9B,KAAK,EAAGX,EAAI2hB,EAAGrd,EAAImd,EAAG7F,EAAIjb,EAAI,MAC9B,KAAK,EAAGX,EAAIW,EAAG2D,EAAImd,EAAG7F,EAAIjc,EAAI,MAC9B,KAAK,EAAGK,EAAIW,EAAG2D,EAAIqd,EAAG/F,EAAI6F,EAAI,MAC9B,KAAK,EAAGzhB,EAAIL,EAAG2E,EAAI3D,EAAGib,EAAI6F,EAAI,MAC9B,KAAK,EAAGzhB,EAAIyhB,EAAGnd,EAAI3D,EAAGib,EAAI+F,EAI5B,MADa,CAACjO,KAAKI,MAAQ,IAAF9T,GAAQ0T,KAAKI,MAAQ,IAAFxP,GAAQoP,KAAKI,MAAQ,IAAF8H,GAEhE,CAED,SAASmF,SAAUO,KAEjBA,IAAqB,KADrBA,IAAMA,IAAIhS,QAAQ,KAAM,KACdnN,OAAemf,IAAIhS,QAAQ,OAAQ,QAAUgS,IAEvD,IAAIM,IAAM9P,SAASwP,IAAIO,OAAO,EAAG,GAAI,IAAM,IACrCC,MAAQhQ,SAASwP,IAAIO,OAAO,EAAG,GAAI,IAAM,IACzCE,KAAOjQ,SAASwP,IAAIO,OAAO,EAAG,GAAI,IAAM,IAE1CG,KAAOtO,KAAKyJ,IAAIyE,IAAKE,MAAOC,MAC1BE,MAAQD,KAAOtO,KAAK0J,IAAIwE,IAAKE,MAAOC,MACpCG,WAAaF,KAAQC,MAAQD,KAAQ,EAE3C,OAAQA,MACN,KAAKJ,IAAK,MAAO,EAAUE,MAAQC,MAAQE,MAAS,EAAjC,IAAuC,EAAGC,WAAYF,MACzE,KAAKF,MAAO,MAAO,CAAE,KAAQC,KAAOH,KAAOK,MAAS,IAAM,EAAGC,WAAYF,MACzE,KAAKD,KAAM,MAAO,CAAE,KAAQH,IAAME,OAASG,MAAS,IAAM,EAAGC,WAAYF,MAE5E,CAED,SAAS/B,SAAUF,KACjB,IAAIza,EAAIya,IAAI,GACVrf,EAAIqf,IAAI,GAAG,IACX0B,EAAI1B,IAAI,GAAG,IACX5G,GAAK,EAAEzY,GAAG+gB,EAEZ,MAAO,CACLnc,EACAoO,KAAKyO,MAAMzhB,EAAE+gB,GAAKtI,EAAE,EAAIA,EAAI,EAAEA,GAAK,KAAS,IAC5CA,EAAE,EAAI,IAET,CAED,SAASkF,gBAAiB+D,QAExB,IADA,IAAIC,MAAQ,EACHhiB,EAAI,EAAGA,IAAM+hB,OAAOjgB,UACvBkgB,OAAS5S,OAAO6S,kBADejiB,IAEnCgiB,OAASD,OAAOG,WAAWliB,GAE7B,OAAOgiB,KACR,CAGD,SAASlD,gBAAgBqD,UACvB,GAAK9S,MAAM8S,WAON,GAAwB,iBAAbA,SAEd,GAAIvE,gBAAgBuE,UAAW,CAC7B,IAAI3Z,MAAQoV,gBAAgBuE,UAE5B,GAAI3Z,MAAMqW,SACR,OAAOrW,MAAMqW,QAElB,MAAM,GAAIsD,SAAS5Q,MAAM,kCAAmC,CAEzD,OAAO4O,aADGO,SAASyB,UAAU,IACJtD,QAC5B,MAlBqB,CACtB,IAAI4B,OAAShP,SAAS0Q,UAEtB,GAAI1B,OAAS,KAAOA,OAAS,EAC3B,OAAON,aAAagC,UAAUtD,QAEjC,CAeC,MAAO,CAAC,EAAE,IACb,CACC,OAAOnB,WACT,CAhgBsBD,GAGgB2E,QAAUA,OAAOxc,UACjDA,QAAUwc,OAAiBxc,QAAA8X,aAI7B9X,QAAA8X,YAAsBA,WAWzB,CAvBA,6GCGK,MAAO2E,sBAAsBnW,WAAnC,WAAAC,uBAuDYtK,KAAAygB,iCAAmC,CACvC,wBACA,4BACA,wBACA,gCACA,+BACA,iCACA,yBAaJzgB,KAAiB0gB,uBAAuFlb,CAyD3G,CAnIU,IAAA4G,GACHpM,KAAKqH,WAAa,gBAClBrH,KAAKZ,SAAW,GAEhBuZ,qBAAqBC,4BAA8B,CAC/C,CACI/Z,KAAM,yBACNO,SAAU,EACVoa,cAAe,SAA2ChU,IAArCqH,OAAOY,iBAAiBkE,SAC7CuH,aAAc,KACdO,KAAM,KACE5M,OAAOY,gBAAiBkE,UAAY,IACpChE,gCACAmI,WAAWmC,SAAS,CAAEI,YAAa1K,8BAA+BgT,gBAAiB9T,OAAOY,gBAAiBkE,YAEvGhE,+BAAiC,GAAGA,+BAC3C,GAGT,CACI9O,KAAM,2BACNO,SAAU,EACVoa,cAAe,IAAuB,YAAjBa,oBAAuD7U,IAAxBqH,OAAOvH,aAC3D4T,aAAc,KACdO,KAAM,KACF,MAAMmH,aAA2CjZ,SAASyH,eAAe,aACnEyR,YAAchU,OAAOY,iBAAiBC,YACzB,GAAfmT,aAAmC,GAAfA,aACpB7gB,KAAK8gB,8BAA8BF,cAAc,GACN,GAAvC/T,OAAOY,iBAAiBC,aACpB8D,KAAKC,SAAW,IAAK1M,aAAa/E,KAAK+gB,cAAelU,OAAOvH,eAGrEtF,KAAK8gB,8BAA8BF,cAAc,EACpD,GAIhB,CAEM,IAAAvU,GACHrM,KAAKghB,mBACLhhB,KAAKuK,QAAS,EAEd7H,aAAa,sBAAuB,KAAK,CAAC+I,KAAMe,QAClCf,KAAK,GACTwV,YAAcT,cAAcU,2BAC9BC,sBAAuB,GAEpB3U,KAAKf,QAEnB,CAcD,iBAAIsV,GACA,OAAO/gB,KAAKygB,iCAAiCjP,KAAKI,MAAMJ,KAAKC,SAAWzR,KAAKygB,iCAAiCxgB,QACjH,CAgBD,6BAAA6gB,CAA8BM,aAA0CC,UAC/DD,eACDC,SACKD,aAAaE,WACTthB,KAAK0gB,oBACN1gB,KAAK0gB,kBAAoB,CACrBnX,gBAAiB6X,aAAaxa,MAAM2C,gBACpCgY,YAAaH,aAAaxa,MAAM2a,YAChCC,aAAcJ,aAAaxa,MAAM4a,eAGzCJ,aAAaE,UAAW,EACxBF,aAAaxa,MAAM2C,gBAAkB,UACrC6X,aAAaxa,MAAM2a,YAAc,UACjCH,aAAaxa,MAAM4a,aAAe,OAGlCJ,aAAaE,WACbF,aAAaE,UAAW,EACpBthB,KAAK0gB,oBACLU,aAAaxa,MAAM2C,gBAAkBvJ,KAAK0gB,kBAAkBnX,gBAC5D6X,aAAaxa,MAAM2a,YAAcvhB,KAAK0gB,kBAAkBa,YACxDH,aAAaxa,MAAM4a,aAAexhB,KAAK0gB,kBAAkBc,eAIxE,CAKD,gBAAAR,GRhGY,IAAcS,aAAsBziB,QAAtByiB,aQkGR,sBRlG8BziB,QQmGxC,CACI,gFACI,8ZAOJ,qCACI,kFR5GhB2F,SAAS9B,cAAc4e,aAAcziB,QQ8GpC,EA3DawhB,cAAwBU,0BAAY,EClEhD,MAAOQ,0BAA0BrX,WAC5B,IAAA+B,GACHpM,KAAKqH,WAAa,oBAClBrH,KAAKZ,SAAW,IAKhBuZ,qBAAqBC,4BAA8B,CAC/C,CACI/Z,KAAM,mBACNO,SAAU,GAIVoa,cAAe,IAAMxD,KAAkB2L,8BAAgC3L,KAAkB4L,yBACzF1I,aAAc,IAIdO,KAAM,KAEFzD,KAAkB4L,0BAA2B,EAG7C,MAAMC,6BAA+B7L,KAAkB8L,qBAAqBjV,QAGtEkV,EAAI/L,KAAkBgM,mBAGtBC,eAAsC,GAG5C,GAAIJ,6BAA6BriB,SAAS,cAEtC,IAAK,MAAMrC,KAAK4kB,EAAG,CACf,MAAMG,OAASH,EAAE5kB,GACX0B,KAAOqjB,OAAOrjB,KAEhBqjB,OAAOC,OAAOC,OAAMlhB,GAAK2gB,6BAA6BriB,SAAS0B,MAC/D+gB,eAAenjB,KAAKD,KAE3B,CAKLiX,WAAWmC,SAAS,CAAEV,0BAA2B0K,eAAgBzK,eAAgByK,eAAehiB,QAAS,GAGjH,CACIpB,KAAM,+BACNO,SAAU,GACV8Z,aAAc,IACdM,cAAe,KAAOjE,iBAAiB9I,MAAMiM,kBAAmB,KAAWnD,iBAAiB9I,MAAM8K,2BAA2BtX,QAAU,GAAK,EAC5IwZ,KAAM,KAEF,MAAMsI,EAAI/L,KAAkBgM,mBAE5B,IAAK,MAAM7kB,KAAK4kB,EAAG,CACf,MAAMG,OAASH,EAAE5kB,GACb+kB,OAAOG,kBAAkBH,QAAQG,kBACxC,IAGT,CACIxjB,KAAM,eACNO,SAAU,GACV8Z,aAAclD,KAAkBgM,mBAAmBM,OAAOC,oBAC1D/I,cAAe,IAAMxD,KAAkBwM,qBAAqB3V,OAAQ,UACpE4M,KAAM,KACFzD,KAAkBgM,mBAAmBM,OAAOG,oBAAqB,GAIhF,CAEM,IAAApW,GAEH3J,aAAa,sBAAuB,GAAG,CAAC+I,KAAMe,QACtCf,KAAK,KAAOoB,QACZ7M,KAAK0iB,0CAEFlW,KAAKf,SAGhB,MAAMkX,SAA8D,CAAA,EAC9DC,GAAK5M,KAAkBgM,mBAC7B,IAAK,MAAM7kB,KAAKylB,GAAI,CAChB,MACMC,SAAWD,GADJA,GAAGzlB,GAAG0B,MACOuB,KAC1B,GAAKyiB,SACL,IAAK,MAAM1kB,KAAK0kB,SACRF,SAASxkB,GACTwkB,SAASxkB,GAAGW,KAAK,CAAC+jB,SAAS1kB,GAAGiC,KAAMyiB,SAAS1kB,GAAGiB,WAEhDujB,SAASxkB,GAAK,CAAC,CAAC0kB,SAAS1kB,GAAGiC,KAAMyiB,SAAS1kB,GAAGiB,UAGzD,CACD,IAAK,MAAM0jB,MAAMH,SACb,IAAK,MAAMvf,KAAKuf,SAASG,IACrBpgB,aAAaogB,GAAIH,SAASG,IAAI1f,GAAG,GAAIuf,SAASG,IAAI1f,GAAG,IAG7DpD,KAAKuK,QAAS,CACjB,CAID,4BAAWwY,GACP,IAAK,MAAM/K,QAAQnL,OAAOmW,WACtB,GAAwB,gBAApBhL,KAAKiL,MAAMrY,KACX,OAAOoN,KAGf,OAAO,IACV,CAOM,qCAAOkL,CAA+BC,GACzC,OAAIA,EAAEC,WACED,EAAElC,WAAmBkC,EAAE3N,KAAK/I,MAAM8K,2BAA6B,GACvD4L,EAAEzN,sBAAsBF,KAAK+B,2BAA6B,GAEnE,EACV,CAQM,2BAAOiL,CAAqBW,EAAgCE,YAC/D,MAAMC,YAActjB,KAAKkjB,+BAA+BC,GACxD,SAAIG,cAAeA,YAAY9jB,SAAS6jB,YAE3C,CAMO,iBAAAE,CAAkBC,YAAsB,GAE5C1N,WAAWmC,SAAS,CAChBS,iBAAiB8K,YAAaxN,KAAkB0C,gBAAgB7L,SAEvE,CAMO,kBAAA4W,CAAmBD,YAAsB,GAE7C1N,WAAWmC,SAAS,CAChBS,kBAAiB8K,YAAaxN,KAAkB0C,gBAAgB7L,SAEvE,CAKO,uCAAA6V,GAEA1M,KAAkB0C,gBAAgB7L,SAElC7M,KAAKujB,oBACLvN,KAAkB4L,0BAA2B,IAG7C5hB,KAAKyjB,qBACLzN,KAAkB4L,0BAA2B,EAEpD,CAKD,qBAAI8B,GACA,OAAI1jB,KAAK2jB,uBAA+B3jB,KAAK2jB,uBACtC3jB,KAAK2jB,uBAAyB3jB,KAAK4jB,sBAC7C,CAwHO,sDAAOC,CAAgDC,cAAuBtM,gBAElF,OADAsM,eAAiC,EAA2B,IAAtBtM,eAAiB,EAE1D,CAEO,oBAAAoM,GACJ,MAAMvlB,EAAI0lB,gBAAgB1e,MAAK2e,OAAyB,iBAAhBA,MAAMC,SAA2BhB,MACzE,OAAO5kB,EAAEgH,MAAK2S,MAAsB,gBAAdA,KAAKpN,QAAyBsZ,KACvD,CAOM,sBAAOxL,CAAgByK,GAE1B,IAAK,MAAMnL,QAAQmL,EAAEH,WACjB,GAAwB,gBAApBhL,KAAKiL,MAAMrY,KAAwB,OAAO,EAElD,OAAO,CACV,CAOM,iCAAO+W,GACV,OAAO9U,OAAO2I,KAAK/I,KAAKiM,kBAAmB,CAC9C,CAOM,2BAAOoJ,CAAqBqB,GAC/B,MAAMgB,mBAAqB,GACrBC,YAAcjB,EAAEkB,gBAAgBhf,MAAK2S,MAA4B,gBAApBA,KAAKiL,MAAMrY,OAC9D,GAAIwZ,YAAa,CACb,MAAME,MAAQF,YAAYnB,MAC1B,GAAIsB,uBAAuBD,MAAME,UAAqD,CAClF,MAAMC,WAAaL,YAAYM,UAAYN,YAAYM,SAASC,WAC1DC,cAAgBN,MAAMJ,MAAMlmB,QAAO6mB,OTkBnD,SAA2C1B,EAAc0B,MAAmBJ,WAAgC,MAC9G,QAASI,MAAMC,YAA6B,OAAfL,aAAwBM,iCAAiCF,MAAMC,WAAYL,YAC5G,CSpBkEO,CAAiC7B,EAAG0B,MAAOJ,cACvFvT,QAAU0T,cAAc9iB,KAAIkW,MAAQA,KAAKpN,OAC/C,IAAK,MAAM/L,QAAQqS,QACF,OAATrS,MAAeslB,mBAAmBrlB,KAAKD,KAElD,CACJ,CACD,OAAOslB,kBACV,CAIM,gBAAOc,GACVC,sBAAsB,oBACtBngB,aAAa,GAAG2B,mCAAoCmG,OAAOvH,cAC3D6f,yBAAyBtY,QACzB,MAAMuY,gBAAkBvY,OAAOY,iBAAiBkE,SAC1CmS,eAAiBsB,iBAAmB,GAAK,GAC3CtB,cAAgB,KAChBuB,mBAAmBxY,OAAQ,KAC3BgB,sBAAsBhB,SAEtBwY,mBAAmBxY,OAAQiX,eAE/BnK,WAAWI,SAAS,UAAW,IAAM,IACxC,CAQO,2BAAWuL,GACf,OAAOtP,KAAkBuP,cAAc/T,KAAKI,MAAMJ,KAAKC,SAAWuE,KAAkBuP,cAActlB,QACrG,CAKO,aAAOulB,GACXxP,KAAkByP,YAAa,EAC/B1gB,aAAa,GAAG2B,gCAAiCmG,OAAOvH,cACxD,MAAMogB,GAAK7Y,OAAOY,iBAAiBkY,eAAiB,EAChD9Y,OAAOY,iBAAiBkY,gBACxB9Y,OAAOY,gBAAgBkY,cAAgBD,GAAK,IAEhDR,sBAAsB,wBAItBvL,WAAWI,SAAS8B,YAAY,CAC5BwB,WAAY,QACZP,IAAK,SACL,IAAO,IAAI,KACXoI,sBAAsB,uBAAwB,IAC9ClP,KAAkByP,YAAa,CAAK,IAExC9L,WAAWgB,YAAY,IAAO,GACjC,yBA/Sc+G,kBAAwBE,0BAAY,EAkF5CF,kBAAAkE,sBAAiD,CACpD,OACA,MACA,QACA,cACA,QACA,MACA,QACA,OACA,aACA,oBACA,YACA,aACA,aACA,aACA,KACA,SACA,WACA,QACA,QACA,QACA,aACA,OACA,QACA,WACA,WACA,QACA,QACA,QACA,aAEGlE,kBAAAM,mBAOH,CACI6D,UAAW,CACPhnB,KAAM,YACNsjB,OAAQ,CAAC,UACT/hB,KAAM,CACF0lB,sBAAuB,CACnB1mB,SAAU,EACVgB,KAAM,CAACqL,KAAMe,QACT,MAAM2W,EAAI1X,KAAK,GACf,IAAIqY,cAAgBrY,KAAK,GACzB,GAAI0X,EAAEC,WACF,GAAID,EAAElC,WAAY,CACd,MAAMxU,KAAO8I,iBAAiB9I,KAAK8K,0BACnC,GAAI9K,MAAMpH,MAAKlI,GAAW,cAANA,IAAoB,CAEpC,MAAMqa,eAAiBjC,iBAAiB9I,MAAM+K,gBAAkB,EAEhEsM,cAAgB9N,KAAkB6N,gDAAgDC,cAAetM,eACpG,CACJ,KAAM,CACH,MAAMuO,qBAAuB5C,EAAEzN,sBAAsBF,IACrD,GAAIuQ,sBACGA,qBAAqBvO,gBACpBuO,sBAAsBxO,2BAA2BlS,MAAKlI,GAAW,cAANA,IAAoB,CAC/E,MAAMqa,eAAiBuO,sBAAsBvO,eAC7CsM,cAAgB9N,KAAkB6N,gDAAgDC,cAAetM,eACpG,CAER,CAGL,OADA/L,KAAK,GAAKqY,cACHtX,KAAKf,KAAK,KAQjCua,UAAW,CACPnnB,KAAM,YACNsjB,OAAQ,CAAC,SACTE,iBAAkB,KACVrM,KAAkBwM,qBAAqB3V,OAAQ,cAC3C2E,KAAKC,SAAW,MAChBuE,KAAKiP,WAEZ,GAGT3C,OAAQ,CACJzjB,KAAM,SACNsjB,OAAQ,CAAC,QAAS,OAClBE,iBAAkB,KACVrM,KAAkBwM,qBAAqB3V,OAAQ,WAAamJ,KAAKyP,aAC7DjU,KAAKC,SAAW,OAChB+O,cAAcU,0BAA2B,EACzCrT,sBAAsBhB,QACtB9H,aAAa,GAAG2B,yCAA0CmG,OAAOvH,eAEjEkM,KAAKC,SAAW,KT1PtC,SAA2BzM,IAAaqN,UAAiC,KAAO4T,QAAkB,GAClF,OAAd5T,YACArN,IAAM,eAAeqN,cAAcrN,aAEvB,IAAZihB,QAAejW,kBAAkBhL,KAChCgL,kBAAkBhL,IAAKihB,QAChC,CSqP4BC,CAAiBlQ,KAAKsP,iBAAkB,iBAAkB,OAEjE,EAEL7C,mBAAoB,KAEZzM,KAAkBwP,QAAQ,EAElCjD,oBAAqB,IAAqC,KAArB/Q,KAAKC,SAAW,KAkFzCiQ,kBAAA6D,cAA0B,CAC9C,yBACA,gCACA,kCACA,8BAOU7D,kBAAU+D,YAAY,EC1YxC,MAAMU,eAAyB,0DAEzB,MAAOC,uBAAuB/b,WAApC,WAAAC,uBAEItK,KAAAqmB,aAAoD,CAChDtR,KAAM,CACFlP,IAAK,OACLygB,YAAa,sBACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChBvmB,KAAKwmB,aAAa,GAG1BC,OAAQ,CACJ5gB,IAAK,SACLygB,YAAa,kDACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChB,MAAMG,OAAiB1mB,KAAK2mB,qBAAqBJ,QACjD,GAAc,KAAVG,OACA1W,kBAAkB,0IAA2I,UAC1J,GAAe,KAAX0W,OAEPzgB,SAAS,kBACTmB,UAA0B,kBAAkB6I,kBAE3C,GAAIkW,eAAeS,KAAKF,QAAS,CAElCzgB,SAAS,SAASygB,mBAClB,MAAMG,eAAiBH,OAAO/jB,QAAQ,KAEtC,IAAwB,IAApBkkB,eAAuB,CACvB,MAGMpf,WAAwB,CAC1Ba,QAJcoe,OAAO7lB,MAAM,EAAGgmB,gBAAgBC,OAK9Cte,QAJYke,OAAO7lB,MAAMgmB,eAAiB,GAAGC,QAMjD1f,UAA0B,kBAAkB6I,WAAWxI,WAC1D,CACJ,IAIT8X,EAAG,CACC1Z,IAAK,IACLygB,YAAa,sBACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,sBVyP5B,IAAIngB,QAAU,GACd,IAAK,MAAM3F,KAAK0D,UAAW,CACvB,MAAM7B,QAAU6B,UAAU1D,GAAG6B,QACvB+B,KAAOF,UAAU1D,GAAG4D,MAAQH,WAAWM,KAAO,MAAQ,OACtDJ,YAAcD,UAAU1D,GAAG2D,YAC3BG,QAAUJ,UAAU1D,GAAG8D,QAE7B,IAAIwiB,cAAgB,8DACpB,IAAK,MAAMvoB,KAAK+F,QACZwiB,eAAiB,OAAOvoB,SAE5BuoB,eAAiB,QAEjB,MACMC,UAAY,wCAClB5gB,SAAW,iCAFa9D,SAAWuC,oBAAwBH,OAAkB,QAATL,KAA8B,UAAZ,0DAEsB2iB,iBAAiB1kB,kBAAkB0kB,iBAAiB3iB,eAAe2iB,iBAAiB5iB,iCAAiC4iB,iBAAiBD,wCACrP,CACD3gB,SAAW,yBACX4J,kBAAkB5J,QAAS,IAC/B,CU3QgB6gB,EAAe,GAGvBtc,IAAK,CACD9E,IAAK,MACLygB,YAAa,2BACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChB,IAAIngB,QAAU,GACdgB,UAA0B,kBAAkB2H,YAAY9G,SAAS+P,OAC7D5R,SAAW,4CAA4C4R,UAAU,IAErE/R,SAAS,2BAA2BG,WAEpC4J,kBAAkB5J,QAAS,IAAM,GAGzC8gB,MAAO,CACHrhB,IAAK,QACLygB,YAAa,mBACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChB,MAAMY,YAAc,qJAEpBnX,kBAAkB,aAAamX,8BAA8BA,sOAAgGA,uDAAuDA,+DAA+DA,8BAA8BA,+EAA+EA,+FAA+FA,kHAAkHA,oDAAoDA,+CAA+C,GAG5rBC,KAAM,CACFvhB,IAAK,OACLygB,YAAa,oBACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChBvW,kBAAkB,qJAAqJ,GAG/KqX,OAAQ,CACJxhB,IAAK,SACLygB,YAAa,oBACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChBvW,kBAAkB,+CAA+C,GAGzE2E,QAAS,CACL9O,IAAK,UACLygB,YAAa,kBACb9a,OAAQ,KACJ,MAAM2b,YAAc,qJAEpBnX,kBAAkB,WAAWmX,gYAKrBA,4DACAA,yDACAA,0DACAA,0DACAA,0DACAA,0DACAA,0DACAA,0DACAA,sDACN,GAGVG,OAAQ,CACJzhB,IAAK,SACLygB,YAAa,SACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UAChB,GAAqB,GAAjBA,OAAOtmB,OAEP,YADAgG,SAAS,QAGb,MAAMygB,OAAiB1mB,KAAK2mB,qBAAqBJ,QAC3CgB,yBAA2BngB,UAAU,qBAC3C,OAAQsf,QACJ,IAAK,0BACDzgB,SAAS,CACLpH,KAAM,2BACNwF,KAAM6B,QAAQY,SACdV,QAASmhB,yBAAyB7D,oBAEtC,MACJ,IAAK,iBACDzd,SAAS,CACLpH,KAAM,kBACNwF,KAAM6B,QAAQY,SACdV,QAASsb,kBAAkBhJ,gBAAgB7L,UAE/C,MACJ,IAAK,0BACD5G,SAAS,CACLpH,KAAM,uBACNwF,KAAM6B,QAAQY,SACdV,QAASsb,kBAAkBI,qBAAqBjV,UAG3D,GAkEhB,CA7DU,IAAAR,GACHmb,eACI,CACI3hB,IAAK,MACLygB,YAAa,sBACb9a,OAAQ,CAACC,KAAMzG,IAAKuhB,UACZA,OAAOtmB,OAAS,EAAGD,KAAKynB,eAAelB,QACtCvmB,KAAKwmB,aAAa,IAKnCxmB,KAAKuK,QAAS,CACjB,CACM,IAAA6B,GACHpM,KAAKqH,WAAa,iBAClBrH,KAAKZ,SAAW,EACnB,CAGO,oBAAAunB,CAAqBJ,QAIzB,MAAMmB,UAAYnB,OAAOA,OAAOtmB,OAAS,GACzC,OAAIynB,UAAU9jB,WAAW,KACd8jB,UAAU7mB,MAAM,GAEpB,EACV,CAEO,WAAA2lB,CAAYxhB,SAA0BQ,GAC1C,QAAYA,IAARR,IAAmB,CACnB,IAAIoB,QAAkB,GACtB,IAAK,MAAM3F,KAAKT,KAAKqmB,aACjBjgB,SAAW,QAAQ3F,KAAKT,KAAKqmB,aAAa5lB,GAAG6lB,gBAEjDlgB,SAAW,gBAAgBvB,uBAC3BmL,kBAAkB5J,QAAS,IAC9B,MACG4J,kBAAkBhL,IAAK,IAE9B,CAEO,cAAAyiB,CAAelB,QACnB,MAAMoB,YAAsBpB,OAAOtmB,OAEnC,GADmB,GAAf0nB,aAAkB3nB,KAAKwmB,cACvBmB,aAAe,EAAG,CAClB,MAAMC,KAAOrB,OAAOoB,YAAc,GAClC,GAAIC,KAAKhkB,WAAW,KAAM,CACtB,MAAMikB,IAActB,OAAOoB,YAAc,GACrCE,OAAO7nB,KAAKqmB,cACZrmB,KAAKqmB,aAAawB,MAAMrc,SAAS,GAAI,GAAI+a,OAEhD,MACOqB,QAAQ5nB,KAAKqmB,cACbrmB,KAAKqmB,aAAauB,OAAOpc,SAAS,GAAI,GAAI+a,OAGrD,CACJ,eC1MQuB,aAUF,kBAAOC,GAgBV,OAfA/nB,KAAKgoB,sBAGqB,IAAfhoB,KAAKioB,OAEZjoB,KAAKioB,MACA9oB,MAAK,CAACd,EAAGqb,IAAMrb,EAAEe,SAAWsa,EAAEta,WAC9B6I,SAAStI,IAENA,EAAEyM,OACFnG,SAAS,MAAMtG,EAAE0H,sBACjBrH,KAAKkoB,kBAAkB,IAI5BloB,KAAKkoB,gBACf,CAKM,kBAAOC,GAoBV,YAlB0B,IAAfnoB,KAAKioB,OAEZjoB,KAAKioB,MACAhgB,SAAStI,IAENA,EAAE0M,OACFpG,SAAS,MAAMtG,EAAE0H,oBACjBrH,KAAKooB,kBAAkB,IAI/BpoB,KAAKqoB,sBACLroB,KAAKsoB,2BAA4B,EACjC3nB,OAAO4nB,mBAAoB,IAE3BvoB,KAAKsoB,2BAA4B,EACjC3nB,OAAO4nB,mBAAoB,GAExBvoB,KAAKooB,gBACf,CAGM,yBAAOC,GACV,GVjEoB,GUiEhBroB,KAAKooB,kBAAoCpoB,KAAKkoB,kBAAoBloB,KAAKooB,iBAEvE,OADAniB,SAAS,wBAAwBjG,KAAKkoB,0BAA0BloB,KAAKooB,yBAC9D,EAEX,QAA2B5iB,IAAvBwQ,GAAaiS,MAEb,OADAhiB,SAAS,oBACF,EAEX,IAAK,MAAMtG,KAAKqW,GAAaiS,MACzB,IAAKtoB,EAAE4K,OAEH,OADAtE,SAAS,aAAatG,EAAE0H,qBACjB,EAIf,OADApB,SAAS,WACF,CACV,CAMO,oBAAOuiB,CAAcjI,QACzBvgB,KAAKiE,QAAQsc,OAAOlZ,YAAckZ,YAER,IAAfvgB,KAAKioB,MACZjoB,KAAKioB,MAAMnpB,KAAKyhB,QAEhBvgB,KAAKioB,MAAQ,CAAC1H,OAErB,CAiCO,qBAAOyH,GACX,IAAIS,oBAA8B,EAClC,IAAK,MAAMC,MAAM1S,GAAa2S,UACf,SAAPD,SAAsCljB,IAArBxF,KAAKiE,QAAQykB,MAC9B1S,GAAa2S,UAAUD,MACvBD,uBAIR,OAAOA,mBACV,WCjGWG,OACZ,GAAIjoB,OAAO4nB,kBACP,OAEJ,MAAMM,gBAAkBf,aAAaC,cAErC9hB,SAAS,CACL5B,KAAM6B,QAAQC,aACdtH,KAAM,0BACNuH,QAAS,QAAQyiB,6BAGrB,MAAMC,YAAchB,aAAaK,cAQjC,GANAliB,SAAS,CACL5B,KAAM6B,QAAQC,aACdtH,KAAM,qBACNuH,QAAS,UAAU0iB,sCAAsChB,aAAaQ,+BAGrER,aAAaQ,0BACd,MAAM,IAAIhrB,MAAM,iCAExB,wBDvDkBwqB,aAAO7jB,QAAkCA,QAEzC6jB,aAAgBM,iBAAW,EAC3BN,aAAgBI,iBAAW,EAC3BJ,aAAyBQ,2BAAY,EAoFrCR,aAAAa,UAAsD,CAChEI,KAAM,KACF,MAAM,IAAIzrB,MAAM,mBAAmB,EAEvCqb,qBAAsB,KAClB3C,GAAKwS,cAAc,IAAI7P,qBAAuB,EAElDlO,eAAgB,KACZuL,GAAKwS,cAAc,IAAI/d,eAAiB,EAE5CwE,eAAgB,KACZ+G,GAAKwS,cAAc,IAAIvZ,eAAiB,EAE5CmX,eAAgB,KACZpQ,GAAKwS,cAAc,IAAIpC,eAAiB,EAE5CtQ,WAAY,KACRE,GAAKwS,cAAc,IAAI1S,WAAa,EAExC0K,cAAe,KACXxK,GAAKwS,cAAc,IAAIhI,cAAgB,EAE3CkB,kBAAmB,KACf1L,GAAKwS,cAAc,IAAI9G,kBAAoB,EAE/C/H,WAAY,KACR3D,GAAKwS,cAAc,IAAI7O,WAAa,GC3H5C1T,SAAS,CACLpH,KAAM,aACNwF,KAAM6B,QAAQC,aACdC,QAAS,cAEQ,MAAjBiU,eAA2C,UAAlBA,gBAEzB3X,aAAa,gBAAiB,KAAK,CAAC+I,KAAMe,QACtC,MAAMwc,SAAWvd,KAAK,GACtB,GAAIud,UAAqC,iBAAlBA,SAASpe,MAAqD,iBAAzBoe,SAASC,YACjE,IAAK,MAAMjF,SAASD,gBAChB,GAAoB,mBAAhBC,MAAMC,MAA4B,CAClC,IAAK,MAAMjM,QAAQgM,MAAMf,MACrB,GAAkB,gBAAdjL,KAAKpN,KAAwB,CAC7BoN,KAAKkR,aAAc,EACnB,KACH,CAEL,KACH,CAGT,OAAO1c,KAAKf,KAAK,IAGrB/I,aAAa,gBAAiB,IAAI,CAAC+I,KAAMe,QACrC,MAAM3F,OAAS2F,KAAKf,MACpBxF,SAAS,CACLpH,KAAM,8BACNuH,QAASqF,KACTpH,KAAM6B,QAAQC,eAElB,MAAM6iB,SAAWvd,KAAK,GAItB,OAHIud,UAAqC,iBAAlBA,SAASpe,MAAqD,iBAAzBoe,SAASC,cAA6BnB,aAAaQ,4BAC3GM,OAEG/hB,MAAM","x_google_ignoreList":[0,10]}