{"version":3,"file":"XSActivity_dev.js","sources":["../../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../../src/Modules/ModulesDict.ts","../../src/changeLogData.ts","../../src/utils.ts","../../src/Modules/BaseModule.ts","../../src/Modules/MActivity.ts","../../src/Modules/MChatroom.ts","../../src/Modules/MChess.ts","../../src/Modules/MCommand.ts","../../src/Modules/MData.ts","../../src/Modules/MDrawModule.ts","../../src/Modules/MTimerProcessInjector.ts","../../src/Modules/ModuleLoader.ts","../../src/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.1.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const e=\"1.1.0\";function o(e){alert(\"Mod ERROR:\\n\"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&\"object\"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${o}\\nPatch1:\\n${t.get(o)||\"\"}\\nPatch2:\\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(\".\");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const d=o[a[a.length-1]];if(\"function\"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(d.toString().replaceAll(\"\\r\\n\",\"\\n\")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){\"string\"==typeof e&&\"string\"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&\"object\"==typeof e||o(\"Failed to register mod: Expected info object, got \"+typeof e),\"string\"==typeof e.name&&e.name||o(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof e.name);let i=`'${e.name}'`;\"string\"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,\"string\"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&\"string\"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&\"object\"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(d));const s=e=>{\"string\"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);\"number\"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))\"string\"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),\"string\"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>(\"string\"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith(\"1.0.\")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&\"object\"==typeof o&&\"string\"==typeof o.name&&\"string\"==typeof o.version?e.registerMod(o.name,o.version,\"object\"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","import type { BaseModule } from \"./BaseModule\";\n\nexport const MODULES: { [key: string]: BaseModule } = {};\n\nwindow.MODULES = MODULES;","export enum ChangeType {\n    main,\n    dev\n}\ninterface ChangeLogObj {\n    version: string;\n    description: string;\n    type: ChangeType;\n    changes: string[];\n}\n\nexport const CHANGELOG: ChangeLogObj[] = [\n    {\n        version: \"0.0.1\",\n        description: \"Initial release\",\n        type: ChangeType.dev,\n        changes: [\"完成基本框架测试中...\"]\n    },\n    {\n        version: \"0.0.2\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\", \"添加部分动作\"]\n    },\n    {\n        version: \"0.0.3\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\", \"完善框架\"]\n    },\n    {\n        version: \"0.0.4\",\n        description: \"终于修复了重复加载的Bug\",\n        type: ChangeType.dev,\n        changes: [\"修复重复加载的BUG!!!!!! O.o\", \"修复若干其他bug\", \"完善框架\"]\n    },\n    {\n        version: \"0.0.5\",\n        description: \"优化\",\n        type: ChangeType.dev,\n        changes: [\"优化版本信息显示效果\"]\n    },\n    {\n        version: \"0.1.0\",\n        description: \"正式发布!当前功能如下: \",\n        type: ChangeType.main,\n        changes: [\"使用命令导出当前聊天室聊天记录 支持按时间范围导出 详细请查看 /xsa \", \"添加9个额外动作.\"]\n    },\n    {\n        version: \"0.1.1\",\n        description: \"添加了新的动作.\",\n        type: ChangeType.main,\n        changes: [\"添加了额外的17个动作\", \"添加 /xsa act 命令 显示添加的全部动作\", \"完成功能自动口吃处理命令:(` + message) --请输入 /xsa jieba 查看帮助\"]\n    },\n    {\n        version: \"0.1.2\",\n        description: \"添加修改边缘逻辑.\",\n        type: ChangeType.main,\n        changes: [\"修复一些bug\", \"修复了若干错别字\", \"修改边缘影响，现在每45秒钟 边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间，如果失去边缘状态，则同样的时间后失去一层抵抗难度，并且减少0.3~1.3秒高潮持续时间.\"]\n    },\n    {\n        version: \"0.1.3\",\n        description: \"添加修改边缘逻辑以及高潮效果.添加打断抵抗高潮的瘙痒动作.\",\n        type: ChangeType.main,\n        changes: [\"当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度\", \"当高潮或抵抗高潮时禁用输入框.\", \" ` 命令修改，现在可以在 ` 后或者 数字后跟一个字母 m ，这将在结巴位置添加呻吟效果.\"]\n    },\n    {\n        version: \"0.1.4\",\n        description: \"添加颜文字快速发送功能!\",\n        type: ChangeType.main,\n        changes: [\"添加快速发送颜文字的功能，以下为简单介绍，详细介绍请输入:/xsa kaomoji 查看。\\n使用=> |+[参数]  打开颜文字选择面板，| 为回车上面的按键，需要用 Shift+\\\\ 键打出 请输入 |help 查看全部参数\", \"调整忍耐高潮时每1.5秒有30%概率发送忍耐反应\", \"高潮后的高潮抵抗难度只降低一半而非原来的降低为0.\", \"重构注入到动作循环的逻辑\", \"重构模组的初始化与加载逻辑\"]\n    },\n    {\n        version: \"0.1.5\",\n        description: \"颜文字发送功能大修!\",\n        type: ChangeType.main,\n        changes: [\"颜文字表情功能大修! 新版使用方法请输入/xsa kaomoji 查看!\"]\n    },\n    {\n        version: \"0.2.0\",\n        description: \"淫纹大修!  待续!\",\n        type: ChangeType.main,\n        changes: [\"淫纹大修! 输入 /xsa yw 查看功能.\", \"高潮抵抗难度和温度计进度现在可以跨平台继承 换句话说 掉线也不会丢失相关数据\", \"取消了原来的边缘计数，现在边缘等级和抵抗难度使用同一变量\"]\n    },\n    {\n        version: \"0.3.0\",\n        description: \"添加了新的动作(移植了部分浮绘的Sub动作)，但暂时移除了关于边缘和高潮机制的修改!\",\n        type: ChangeType.main,\n        changes: [\"将浮绘的Sub动作模组的部分(大量!)动作移植过来，感谢浮绘的授权! 原动作Mod:[https://github.com/FuhuiNeko/BC_Mods]\",\n            \"暂时移除了边缘高潮机制的修改.\",\n            \"暂时移除了淫纹功能的大修\",\n            \"除了动作部分，功能将渐渐移植到新Mod\",\n            \"新Mod链接: [https://github.com/iceriny/XiaosuBCExpansion]\",\n            \"等新Mod功能完善将会在此Mod更新中提示!\",\n            \"新Mod的当前版本已完成: 高潮机制修改(本Mod移植)、边缘机制修改(本Mod移植)、\\n高潮余韵系统(暂无介绍，请自行探索 将来的版本将完善介绍，以及淫纹大修将依赖于此功能)\"]\n    },\n    {\n        version: \"0.3.3\",\n        description: \"添加了五子棋围棋对局功能!\",\n        type: ChangeType.main,\n        changes: ['五子棋或围棋的对局功能，详细介绍请输入 `/xsa chess -h` 查看。', '修复了部分bug。']\n    }\n]","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport { MODULES } from \"Modules/ModulesDict\";\nimport { CHANGELOG, ChangeType } from \"changeLogData\";\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----用得到的常数---- VVVVVVVVVVVVVVVVVVVVVVV    //\n\nexport const CSShref = DEBUG ? \"https://iceriny.github.io/XiaoSuActivity/dev/XSActivityStyle.css\" : \"https://iceriny.github.io/XiaoSuActivity/main/XSActivityStyle.css\";\n\n//   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----用得到的常数---- ^^^^^^^^^^^^^^^^^^^^^^^    //\n\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----SDK----  VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV    //\nexport const bcModSDK = bcModSDKRef.registerMod({\n    name: \"XiaoSuActivity\",\n    fullName: \"XiaoSu's Activity Expand\",\n    version: XSActivity_VERSION.startsWith(\"v\") ? XSActivity_VERSION.slice(1) : XSActivity_VERSION,\n    repository: \"https://github.com/iceriny/XiaoSuActivity\"\n});\n\nexport type PatchHook = (args: any[], next: (args: any[]) => any) => any;\nexport function hookFunction(target: string, priority: number, hook: PatchHook): () => void {\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n    bcModSDK.patchFunction(functionName, patches);\n}\n\n//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----SDK----  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //\n/**\n * 发送*表情信息\n * @param msg 要发送的内容\n * @returns 无\n */\nexport function SendEmote(msg: string | null) {\n    if (msg == null) return;\n    ServerSend(\"ChatRoomChat\", { Content: msg, Type: \"Emote\" })\n}\n/**\n * 发送聊天消息\n * @param msg 发送的内容\n * @returns 无\n */\nexport function SendChat(msg: string | null) {\n    if (msg == null) return;\n    ServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n}\n\ntype LocalMessageCSSName = null | 'local-message' | 'trance-message' | 'XSA_Chess'\nexport function SendLocalMessage(msg: string, className: LocalMessageCSSName = null, timeout: number = 0) {\n    if (className !== null) {\n        msg = `<div class=\"${className}\">${msg}</div>`\n    }\n    if (timeout === 0) ChatRoomSendLocal(msg)\n    else ChatRoomSendLocal(msg, timeout);\n}\n/**\n * 发送动作消息\n * @param msg 动作消息的内容\n * @param sourceCharacter 动作的来源 id\n * @param targetCharacter 动作的目标 id\n */\nexport function SendActivity(msg: string, sourceCharacter: number, targetCharacter?: number) {\n\n    const sourceCharacterObj: Character | undefined = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter),\n        targetCharacterObj: Character | undefined = targetCharacter ? ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter) : undefined;\n\n    if (sourceCharacterObj === undefined && targetCharacterObj === undefined) return;\n\n    const sourceCharacterNickname = sourceCharacterObj ? CharacterNickname(sourceCharacterObj) : \"\",\n        targetCharacterNickname = targetCharacterObj ? CharacterNickname(targetCharacterObj) : \"\";\n    const resultDict: ChatMessageDictionary = [\n        { Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSA_ActMessage\", Text: msg.replaceAll(\"{source}\", sourceCharacterNickname).replaceAll(\"{target}\", targetCharacterNickname) }\n    ]\n\n    resultDict.push({ SourceCharacter: sourceCharacter });\n    if (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"SendActivity()\",\n        content: {\n            Type: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n        }\n    });\n\n    ServerSend(\"ChatRoomChat\", {\n        Type: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n    });\n}\n\n\n//   ^^^^^^^^^^^^^^^  ----游戏函数调用----  ^^^^^^^^^^^^^^^    //\n\n\n/* 发送的数据包对象的实例\n{\n    \"Sender\": 150217,\n    \"Content\": \"ChatOther-ItemTorso-Tickle\",\n    \"Type\": \"Activity\",\n    \"Dictionary\": [\n        {\n            \"SourceCharacter\": 150217\n        },\n        {\n            \"TargetCharacter\": 155979\n        },\n        {\n            \"Tag\": \"FocusAssetGroup\",\n            \"FocusGroupName\": \"ItemTorso\"\n        },\n        {\n            \"ActivityName\": \"Tickle\"\n        },\n        {\n            \"Tag\": \"fbc_nonce\",\n            \"Text\": 9\n        }\n    ],\n    \"MBCHC_ID\": 44\n}\n*/\n/**\n */\n// Utils\n/* 描述中表示自己的占位符 */\n\nconst selfPlaceholder = '{source}';\n/** 描述中表示目标的占位符 */\n\nconst targetPlaceholder = '{target}';\n/**\n * 包含全局占位符的对象 s:自己  t:目标\n */\nexport const PH = {\n    s: selfPlaceholder,\n    t: targetPlaceholder\n}\n/**\n * Debug信息对象接口\n */\ninterface XSDebugMSG {\n    name?: string;\n    type?: MSGType;\n    content: any;\n}\n/**\n * Debug信息类型\n */\nexport enum MSGType {\n    DebugLog,\n    Workflow_Log,\n}\n/**\n * 发送debug信息到控制台\n * @param msg 信息\n * @param color 可选颜色参数\n * @param style 可选的css风格参数\n * @returns 无\n */\nexport function conDebug(msg: XSDebugMSG | string, color: string | null = null, style: string | null = null) {\n    if (DEBUG === false) return;\n\n\n    const result: object = typeof msg === \"string\" ? {\n        name: \"XiaoSuActivity_Debug\",\n        type: MSGType.DebugLog,\n        content: msg,\n        time: new Date().toLocaleString(),\n        ModVersion: XSActivity_VERSION,\n    } : {\n        name: msg.name,\n        type: msg.type,\n        content: msg.content,\n        time: new Date().toLocaleString(),\n        ModVersion: XSActivity_VERSION\n    }\n    if (style) {\n        console.debug(\"%c小酥的模组信息: \", style, result);\n    } else {\n        if (color) {\n            style = `background-color: ${color}; font-weight: bold;`\n        }\n        console.debug(\"%c小酥的模组信息: \", 'background-color: rgba(191, 154, 175, 1); font-weight: bold;', result);\n    }\n}\n\n/**\n * 获取已加载的模型实例\n * @param moduleName 模型名称\n * @returns 已加载的模型实例\n */\nexport function GetModule<T>(moduleName: XS_ModuleName): T {\n    return MODULES[moduleName] as T;\n}\n\n/**\n * 处理获取到的元素中时间范围外的元素 次工具在导出聊天记录时使用\n * @param element 获取的元素\n * @param time_limit 时间范围\n */\nfunction removeElementsByTimeRange(element: HTMLElement, time_limit: timeRange) {\n    const elements = element.querySelectorAll('[data-time]');\n\n    elements.forEach((element) => {\n        const dataTimeValue = element.getAttribute('data-time');\n\n        if (dataTimeValue) {\n            // 将字符串时间值转换为 Date 对象\n            const currentTime = new Date(`2000-01-01 ${dataTimeValue}`);\n            const minTimeDate = new Date(`2000-01-01 ${time_limit.minTime}`);\n            const maxTimeDate = new Date(`2000-01-01 ${time_limit.maxTime}`);\n\n            // 判断是否跨越了 00:00\n            if (maxTimeDate < minTimeDate) {\n                maxTimeDate.setDate(maxTimeDate.getDate() + 1);\n            }\n\n            // 判断是否在时间范围内\n            if (currentTime < minTimeDate || currentTime > maxTimeDate) {\n                // 使用 remove 方法\n                element.remove();\n\n                // 或者使用 parentNode.removeChild 方法\n                // element.parentNode.removeChild(element);\n            }\n        }\n    });\n}\n\n\n/**\n * 传入{@link copyAndDownloadHtmlElement}的最小时间值和最大时间值\n */\nexport interface timeRange {\n    minTime: string;\n    maxTime: string;\n}\n\n\n/**\n * 将传入的元素复制并提供下载\n * @param element 需要下载的原始元素\n * @param fileName 下载的文件名字\n * @param time_limit 时间范围\n * @returns void\n */\nexport function copyAndDownloadHtmlElement(element: HTMLElement | null, fileName: string, time_limit: timeRange | null = null) {\n    // 创建新文档\n    const newDoc = document.implementation.createHTMLDocument();\n\n    if (element === null) {\n        conDebug(\"element is null\");\n        return;\n    }\n\n    function clearElementStyle(element: HTMLElement) {\n        const style = element.style;\n        // 逐个删除属性\n        while (style.length > 0) {\n            style.removeProperty(style[0]);\n        }\n    }\n\n    // 复制元素\n    const copiedElement = element.cloneNode(true) as HTMLElement;\n\n    if (time_limit !== null) {\n        removeElementsByTimeRange(copiedElement, time_limit);\n    }\n\n    clearElementStyle(copiedElement);\n\n    copiedElement.style.fontSize = \"14.784px\";\n    copiedElement.style.fontFamily = \"Arial, sans-serif\";\n    copiedElement.style.display = \"flex\";\n    copiedElement.style.flexDirection = \"column\";\n    copiedElement.style.width = \"70vw\";\n\n    newDoc.body.style.display = \"flex\";\n    newDoc.body.style.alignItems = \"center\";\n    newDoc.body.style.justifyContent = \"center\";\n    newDoc.body.style.backgroundColor = \"#f2f2f2\";\n    // 将复制的元素添加到新文档的 body 中\n    newDoc.body.appendChild(copiedElement);\n\n    // 将新文档转换为 HTML 字符串\n    const htmlString = newDoc.documentElement.outerHTML;\n\n    // 创建一个下载链接\n    const blob = new Blob([htmlString], { type: 'text/html' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = fileName;\n\n    // 触发下载\n    link.click();\n}\n\n/**\n * 发送更新信息到本地\n */\nexport function sendChangeLog() {\n    let content = '';\n    for (const c in CHANGELOG) {\n        const version = CHANGELOG[c].version;\n        const type = CHANGELOG[c].type == ChangeType.main ? \"主版本\" : \"开发版本\";\n        const description = CHANGELOG[c].description;\n        const changes = CHANGELOG[c].changes;\n\n        let changesString = '<ul style=\"list-style-position: inside;  padding-left: 0;\">';\n        for (const s of changes) {\n            changesString += `<li>${s}</li>`;\n        }\n        changesString += '</ul>';\n\n        const backgroundColor = version == XSActivity_VERSION && (!DEBUG && type === \"主版本\") ? \"#764460\" : \"#442E3A\"\n        const styleForP = 'style=\"font-weight: bold; margin: 0;\"'\n        content += `<div style=\"background-color: ${backgroundColor}; display: flex; flex-direction: column;\"> <p ${styleForP}>版本: ${version}</p> <p ${styleForP}>类型: ${type}</p> <p ${styleForP}>描述: ${description}</p><p>----</p> <p ${styleForP}>改动: ${changesString}</p><p>========</p></div>`\n    }\n    content += \"<p>==当前页面显示时间1分钟==</p>\"\n    ChatRoomSendLocal(content, 60000);\n}\n\n/**\n * 发送最新的更新信息到本地\n */\nexport function sendLastChangeLog() {\n    let content = '';\n    const c = CHANGELOG[CHANGELOG.length - 1];\n    const version = c.version;\n    const type = c.type == ChangeType.main ? \"主版本\" : \"开发版本\";\n    const description = c.description;\n    const changes = c.changes;\n    const styleForP = 'style=\"font-weight: bold; margin: 0;\"'\n\n    for (const s of changes) {\n        content += `<p ${styleForP}>${s}</p>`;\n    }\n    content = `<p ${styleForP}>版本: ${version}</p>\n    <p ${styleForP}>类型: ${type}</p>\n    <p ${styleForP}>描述: ${description}</p>\n    <p>----</p>\n    <p ${styleForP}>改动: ${content}</p>\n    <p>========</p>`\n\n    content += \"<p>==当前页面显示时间30秒 再次查看请输入`/xsa new`==</p>\"\n    ChatRoomSendLocal(content, 30000);\n}\n\n/**\n * 处理结巴效果基于segmenter.segment()分词\n * @param str 传入的字符串\n * @returns 返回处理后的字符串\n */\nexport function segmentForCH(str: string): string[] | null {\n    // 检查浏览器是否支持 Intl.Segmenter\n    if (window.Intl && window.Intl.Segmenter && TranslationLanguage.toLowerCase() === \"cn\") {\n        const segmenter = new Intl.Segmenter('zh', { granularity: 'word' }); // 创建分词器实例\n        const segmenterResult = segmenter.segment(str); // 对文本进行分词\n        const results: string[] = []\n        for (const segment of segmenterResult) {\n            results.push(segment.segment);\n        }\n\n        conDebug(`segmentForCH: ${results}`)\n        return results;\n    } else {\n        return null;\n    }\n}\n/**\n * 检测数字是否被整除\n * @param num 要检测的数字\n * @param divisor 除数\n * @returns 是否被整除\n */\nexport function isDivisible(num: number, divisor: number): boolean {\n    return num % divisor === 0;\n}\n\n\n// 将滚动条滚动到底部\nexport function scrollToBottom(element: HTMLElement) {\n    const maxScrollTop = element.scrollHeight - element.clientHeight;\n    element.scrollTo({\n        top: maxScrollTop,\n        behavior: 'smooth'  // 可选：实现平滑滚动效果\n    });\n}\n\n/**\n * 确定是否应渲染资产层，假设资产本身是可见的。\n * @param C - 角色，穿戴该物品的角色\n * @param layer - 需要检查可见性的层\n * @param asset - 层所属的资产\n * @param typeRecord - 如果有的话，物品的类型记录\n * @returns - 如果层应显示则返回 TRUE，否则返回 FALSE\n */\nexport function CharacterAppearanceIsLayerIsHave(C: Character, layer: AssetLayer, typeRecord: TypeRecord | null = null) {\n    return !(layer.AllowTypes && typeRecord !== null && !CharacterAppearanceAllowForTypes(layer.AllowTypes, typeRecord));\n}\n\n\n/**\n * 获取一个随机整数\n * @param min 最小值\n * @param max 最大值\n * @returns 返回的随机整数\n */\nexport function GetRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","\n/**\n * 完整模块数量\n */\nexport const FullModCount = 7; //8\n\n\n/**\n * 模块的基础抽象类\n */\nexport abstract class BaseModule {\n    /** 模块名 */\n    moduleName: XS_ModuleName = \"Base\";\n    /** 模块优先级 数越大越靠后加载 */\n    priority: number = 0;\n    /** 是否加载完成 */\n    Loaded: boolean = false;\n\n    constructor(moduleName: XS_ModuleName) {\n        this.moduleName = moduleName;\n    }\n\n    /**\n     * 初始化函数\n     */\n    public abstract Init(): void\n    /**\n     * 加载函数\n     */\n    public abstract Load(): void\n}","import { conDebug, hookFunction, MSGType, SendActivity } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\n\n/*\n * 动作的限定条件信息对象\n*/\ninterface prerequisite {\n    Name: XSA_ActivityPrerequisite;\n    Action: (args: Array<unknown>) => boolean;\n}\n\n/**\n * 描述中表示自己的占位符\n */\nconst selfPlaceholder = \"SourceCharacter\";\n/** 描述中表示目标的占位符 */\nconst targetPlaceholder = \"TargetCharacter\";\n\n/**\n * 动作模块的类\n * 涉及功能有\"\n * - 添加自定义动作\n * - 接受特定动作的特殊效果 当前为瘙痒增加高潮抵抗难度\n */\nexport class ActivityModule extends BaseModule {\n\n\n    public Init(): void {\n        this.priority = 50;\n    }\n    public Load(): void {\n        this.LoadActivity();\n        this.hookListHandler();\n        this.Loaded = true;\n    }\n\n    // hook:\n\n\n\n    /**\n     * 狗子函数队列处理\n     */\n    hookListHandler(): void {\n        /**\n         * 处理没有装本插件的玩家接受到的消息\n         * 原理为使用hookFunction来拦截ServerSend函数的执行,并判断消息中是否包含自定义活动的关键词,如果包含则执行自定义操作\n         * - 即替换原本的描述\n         */\n        hookFunction(\"ServerSend\", 5, (args, next) => { // ServerSend 只能检测自己发出的聊天信息 可以用来替换自己发出去的文字\n            if (args[0] == \"ChatRoomChat\" && args[1]?.Type == \"Activity\") {\n                const data = args[1];\n                const actName = data.Dictionary[3]?.ActivityName ?? \"\";\n                if (actName.indexOf(\"XSAct_\") == 0) { // 这个条件表示只有当消息中包含以 \"XSAct_\" 开头的自定义活动时,才会执行下面的操作\n                    // 拦截自定义活动的发送并执行自定义操作\n                    const { substitutions } = ChatRoomMessageRunExtractors(data, Player)\n                    let msg = ActivityDictionaryText(data.Content);\n                    msg = CommonStringSubstitute(msg, substitutions ?? [])\n                    data.Dictionary.push({\n                        Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD \" + data.Content,\n                        Text: msg\n                    });\n                }\n            }\n            return next(args);\n        });\n\n        /**\n         * 1. 当条件关键词为自定义关键词时\n         * - 处理限制条件\n         * 2. 当关键词不是自定义关键词时\n         * - 执行原方法\n         */\n        hookFunction(\"ActivityCheckPrerequisite\", 500, (args, next) => {\n            const prereq = args[0];\n            if (prereq in this.prerequisiteDict) {\n                const customPrereq = this.prerequisiteDict[prereq as XSA_ActivityPrerequisite];\n                return customPrereq.Action(args);\n            } else {\n                return next(args);\n            }\n        });\n\n        /**\n         * args[0]: \"Assets/Female3DCG/Activity/XSAct_XXX.png\"\n         */\n        hookFunction(\"DrawImageResize\", 10, (args, next) => {\n            const source = args[0];\n\n            if (typeof source !== \"string\") return next(args);\n            // 使用 split 方法拆分字符串\n            const parts = source.split('/');\n            const fileName = parts[parts.length - 1];  // 获取文件名部分，即 \"XSAct_XXX.png\"\n\n            // 进一步处理文件名，去掉 \".png\" 后缀\n            const aName = fileName.replace('.png', '');\n\n            if (aName.indexOf(\"XSAct_\") == 0) {\n                const resultName = `Assets/Female3DCG/Activity/${this.activityToAddDict[aName as XSA_ActivityName].img}.png`;\n                args[0] = resultName;\n                return next(args);\n            }\n            return next(args);\n        });\n\n\n\n        /** 瘙痒动作增加抵抗难度 */\n        hookFunction(\"ChatRoomMessage\", this.priority, (args, next) => {\n            const data = args[0];\n            conDebug({\n                name: \"ChatRoomMessage\",\n                type: MSGType.DebugLog,\n                content: data\n            });\n            // 确定是否是活动消息\n            if (data.Type == \"Activity\") {\n                const actName = data.Dictionary[3]?.ActivityName as string;\n                const SourceCharacter = data.Dictionary[0]?.SourceCharacter as number;\n                const TargetCharacter = data.Dictionary[1]?.TargetCharacter as number;\n                if (actName == \"Tickle\" && !Number.isNaN(TargetCharacter) && TargetCharacter == Player?.MemberNumber) {// 瘙痒动作且目标为自己\n                    conDebug({\n                        type: MSGType.DebugLog,\n                        name: \"检测到自己为目标的瘙痒动作\",\n                        content: {\n                            高潮阶段: Player.ArousalSettings?.OrgasmStage,\n                            抵抗难度: ActivityOrgasmGameResistCount\n                        }\n                    });\n                    if (Player.ArousalSettings?.OrgasmStage == 1) {// 如果当前正在抵抗则添加难度并重新开始抵抗游戏\n                        conDebug({\n                            type: MSGType.DebugLog,\n                            name: \"捕捉到抵抗场景，开始截断抵抗 增加难度 并重新触发\",\n                            content: {\n                                高潮阶段: Player.ArousalSettings?.OrgasmStage,\n                                抵抗难度: ActivityOrgasmGameResistCount\n                            }\n                        });\n                        // 增加抵抗难度\n                        ActivityOrgasmGameResistCount++;\n                        // 发送活动消息\n                        SendActivity(`{target}紧闭双眼尽力抵抗着高潮，但被{source}的瘙痒干扰，从嘴巴里泄露出一声压抑的呻吟，不知是否还能忍住.`, SourceCharacter, TargetCharacter)\n                        // 打断当前高潮\n                        ActivityOrgasmStop(Player, 99.5);\n                        // 触发新的高潮\n                        ActivityOrgasmPrepare(Player);\n                    }\n                }\n            }\n            return next(args);\n        });\n    }\n\n    //============================================================\n\n    /**\n     * 载入自定义动作\n     */\n    LoadActivity(): void {\n        conDebug(\"加载自定义活动\");\n        let actLength = 0;\n        for (const aN in this.activityToAddDict) { // a 为活动名\n\n            this.pushToActivity(this.activityToAddDict[aN as XSA_ActivityName].act);\n\n            this.activityDictAdd();\n\n            //加载文字描述\n            const activityDesc = this.activityToAddDict[aN as XSA_ActivityName].desc;\n\n            activityDesc?.forEach((d) => {\n                ActivityDictionary?.push(d);\n            });\n            actLength += 1;\n        }\n        conDebug(`自定义活动加载完成.动作数: ${actLength}`)\n    }\n    //============================================================\n    /**\n     * 初始化活动的文字描述。\n     */\n    activityDictAdd() {\n\n        for (const a in this.activityToAddDict) {\n            const pendingActivity = this.activityToAddDict[a as XSA_ActivityName];\n\n            const actName = pendingActivity.act.Name;\n            const nameWithoutPrefix = actName.substring(6);\n            const actTarget = pendingActivity.act.Target;\n            const actTargetSelf = pendingActivity.act.TargetSelf;\n\n            const addedValues: string[][] = [];\n\n            addedValues.push([`ActivityAct_${actName}`, `${nameWithoutPrefix}`]);\n            addedValues.push([`Activity${actName}`, `${nameWithoutPrefix}`]);\n            if (actTarget.length > 0) {\n                for (let i = 0; i < actTarget.length; i++) {\n                    const aT = actTarget[i];\n                    addedValues.push([`Label-ChatOther-${aT}-${actName}`,\n                    `${nameWithoutPrefix}${pendingActivity.isBase ? this.groupNameDict[aT as AssetGroupItemName] : ''}`]);\n                    addedValues.push([`ChatOther-${aT}-${actName}`,\n                    pendingActivity.descString[0].replace(this.bodyNamePlaceholder, this.groupNameDict[aT as AssetGroupItemName])]);\n                }\n            }\n            if (typeof actTargetSelf !== 'undefined' && typeof actTargetSelf !== 'boolean' && actTargetSelf.length > 0) {\n                for (const aTS of actTargetSelf) {\n                    addedValues.push([`Label-ChatSelf-${aTS}-${actName}`,\n                    `${nameWithoutPrefix}${pendingActivity.isBase ? this.groupNameDict[aTS as AssetGroupItemName] : ''}`]);\n                    addedValues.push([`ChatSelf-${aTS}-${actName}`,\n                    pendingActivity.descString[1].replace(this.bodyNamePlaceholder, this.groupNameDict[aTS as AssetGroupItemName])]);\n                }\n            }\n\n            pendingActivity.desc = addedValues;\n        }\n    }\n    /*\n        'ItemAddon' | 'ItemArms' | 'ItemBoots' | 'ItemBreast' | 'ItemButt' |\n        'ItemDevices' | 'ItemEars' | 'ItemFeet' | 'ItemHands' | 'ItemHead' |\n        'ItemHood' | 'ItemLegs' | 'ItemMisc' | 'ItemMouth' | 'ItemMouth2' |\n        'ItemMouth3' | 'ItemNeck' | 'ItemNeckAccessories' | 'ItemNeckRestraints' |\n        'ItemNipples' | 'ItemNipplesPiercings' | 'ItemNose' | 'ItemPelvis' |\n        'ItemTorso' | 'ItemTorso2' | 'ItemVulva' | 'ItemVulvaPiercings' |\n        'ItemHandheld'\n    */\n    private readonly groupNameDict: { [name in AssetGroupItemName]: string } = {\n        'ItemAddon': '身体(附加)', 'ItemArms': '手臂', 'ItemBoots': '脚', 'ItemBreast': '乳房',\n        'ItemButt': '屁股', 'ItemDevices': '身体(装置)', 'ItemEars': '耳朵', 'ItemFeet': '小腿',\n        'ItemHandheld': '手', 'ItemHands': '手', 'ItemHead': '头', 'ItemHood': '头发', 'ItemLegs': '大腿',\n        'ItemMisc': '身体(杂项)', \"ItemMouth\": '嘴巴', 'ItemMouth2': '嘴巴', 'ItemMouth3': '嘴巴',\n        'ItemNeck': '脖子', 'ItemNeckAccessories': '脖子', 'ItemNeckRestraints': '脖子', 'ItemNipples': '乳头',\n        'ItemNipplesPiercings': '乳头', 'ItemNose': '鼻子', 'ItemPelvis': '小腹', 'ItemTorso': '肋部', 'ItemTorso2': '肋部',\n        'ItemVulva': '阴道', 'ItemVulvaPiercings': '阴蒂'\n    }\n    private readonly bodyNamePlaceholder = '{group}'\n    /**\n     * 将传入的活动对象载入\n     * @param activity 将要载入的活动对象\n     */\n    private pushToActivity(activity: Activity) {\n        ActivityFemale3DCG.push(activity);\n        ActivityFemale3DCGOrdering.push(activity.Name);\n        //}\n    }\n\n    //============================================================\n\n    //     ActivityNameXiaosu_onlyName =\n    //     \"眯眼\" | \"眼神飘忽\" | \"甩头发\" | \"轻抚发梢\" | \"叼起头发\" | \"嗅头发\" |  \"绕头发\" | \"大力甩头发\" | \"抿住嘴巴\" | \"恳求的看\" | \"恳求的摇头\"\n    //   | \"皱鼻子\" | \"打喷嚏\" | \"深呼吸\" \n    //   | \"低头\" | \"挺胸收腹\" | \"站直身体\" | \"坐直身体\" | \"身体一颤\"\n    //   | \"活动手臂\" | \"活动大腿\" | \"绷紧膝盖\" | \"内八夹腿\"\n    //   | \"蜷缩脚趾\" | \"绷直脚踝\" | \"踮脚\"\n    // ;\n    // SourceCharacter 为动作发起人  TargetCharacter 为动作目标人\n    /**\n     * 将要添加的动作字典\n     * @interface Activity - Activity对象的属性如下定义:\n     * @param  Name - 活动的名称\n     * @param  MaxProgress - 活动的最大进度\n     * @param  MaxProgressSelf - 活动自身的最大进度\n     * @param  Prerequisite - 活动的前置条件\n     * @param  Target - 活动的目标\n     * @param  TargetSelf - 活动的自身目标\n     * @param  Reverse - 是否反转前置条件的判断\n     * @param  MakeSound - 是否播放声音 used for setting {@link ExtendedItemAutoPunishHandled} \n     * @param  StimulationAction - 当使用该活动时触发的动作\n     * @param  ActivityExpression - 活动表达式,包含一系列的动作 该活动的默认表达式。可以使用资产上的ActivityExpression进行覆盖。\n     * -------\n     * @desc - desc默认需要为null,当活动初始化时,会自动添加文字描述\n     * @descString - 两个元素的数组 [0]为如果目标为他人的描述，[1]为目标自己的描述\n     * @img - 指定的动作图片\n     * @isBase - 是否是基础动作 基础动作将会自动把名称中的 @bodyNamePlaceholder 换成 `{group}` 并在添加动作时动态的将其替换为目标部位的名称\n    */\n    activityToAddDict: { [ActivityIndex in XSA_ActivityName]: { act: Activity, desc: null | string[][], descString: [string, string], img: ActivityName, isBase?: true } } = {\n        XSAct_眯眼: {\n            act: {\n                Name: \"XSAct_眯眼\",\n                Target: [],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}眯了眯眼.`],\n            img: \"RestHead\"\n        },\n        XSAct_眼神飘忽: {\n            act: {\n                Name: \"XSAct_眼神飘忽\",\n                Target: [],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}眼神飘忽的左看右看.`],\n            img: \"RestHead\"\n        },\n        XSAct_甩头发: {\n            act: {\n                Name: \"XSAct_甩头发\",\n                Target: [],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}甩动着头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_大力甩头发: {\n            act: {\n                Name: \"XSAct_大力甩头发\",\n                Target: [],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}连连摇头，慌乱的甩动着头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_轻抚发梢: {\n            act: {\n                Name: \"XSAct_轻抚发梢\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"UseArms\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}轻柔抚动着${targetPlaceholder}的头发.`, `${selfPlaceholder}轻柔抚动着自己的头发.`],\n            img: \"RestHead\"\n        },\n        XSAct_叼起头发: {\n            act: {\n                Name: \"XSAct_叼起头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 50,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}轻轻咬起${targetPlaceholder}的头发.`, `${selfPlaceholder}轻轻咬起自己的头发.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_嗅头发: {\n            act: {\n                Name: \"XSAct_嗅头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"ItemNoseCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}在${targetPlaceholder}的发间嗅着，鼻息弥漫着${targetPlaceholder}的发香.`, `${selfPlaceholder}撩起自己的头发轻轻嗅着.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_绕头发: {\n            act: {\n                Name: \"XSAct_绕头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"UseArms\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}勾起一缕${targetPlaceholder}的发丝，在指尖绕来绕去.`, `${selfPlaceholder}勾起自己的一缕头发在指尖绕来绕去.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_皱鼻子: {\n            act: {\n                Name: \"XSAct_皱鼻子\",\n                Target: [],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"ItemNoseCovered\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}皱了皱自己的鼻头.`],\n            img: \"RestHead\"\n        },\n        XSAct_打喷嚏: {\n            act: {\n                Name: \"XSAct_打喷嚏\",\n                Target: [],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}打了个喷嚏.`],\n            img: \"Kiss\"\n        },\n        XSAct_深呼吸: {\n            act: {\n                Name: \"XSAct_深呼吸\",\n                Target: [],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"ItemNoseCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}深深的吸了口气.`],\n            img: \"Kiss\"\n        },\n        XSAct_低头: {\n            act: {\n                Name: \"XSAct_低头\",\n                Target: [],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"MoveHead\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}红润着脸蛋低头逃避.`],\n            img: \"RestHead\"\n        },\n        XSAct_恳求的摇头: {\n            act: {\n                Name: \"XSAct_恳求的摇头\",\n                Target: [\"ItemHead\"],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"MoveHead\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}对着${targetPlaceholder}的方向恳求的摇头.`, ``],\n            img: \"RestHead\"\n        },\n        XSAct_恳求的看: {\n            act: {\n                Name: \"XSAct_恳求的看\",\n                Target: [\"ItemHead\"],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"TargetZoneNaked\", \"MoveHead\"]\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}汪着眼睛恳求的看着${targetPlaceholder}.`, \"\"],\n            img: \"RestHead\"\n        },\n        XSAct_内八夹腿: {\n            act: {\n                Name: \"XSAct_内八夹腿\",\n                Target: [],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}通红的脸蛋忍耐着快感，大腿紧紧夹起来，摆出着内八的姿势，身体微微颤抖.`],\n            img: \"Kick\"\n        },\n        XSAct_噘嘴: {\n            act: {\n                Name: \"XSAct_噘嘴\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}有些不满的噘起嘴巴.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_抿住嘴巴: {\n            act: {\n                Name: \"XSAct_抿住嘴巴\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}抿住嘴巴.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_瘪嘴: {\n            act: {\n                Name: \"XSAct_瘪嘴\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}瘪着嘴巴，一副委屈的样子.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_坐直身体: {\n            act: {\n                Name: \"XSAct_坐直身体\",\n                Target: [],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺直了腰，坐直了身体.`],\n            img: \"Kick\"\n        },\n        XSAct_挺胸收腹: {\n            act: {\n                Name: \"XSAct_挺胸收腹\",\n                Target: [],\n                TargetSelf: [\"ItemBreast\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺起胸部，微收下巴，腹部用力收腰.`],\n            img: \"Kick\"\n        },\n        XSAct_站直身体: {\n            act: {\n                Name: \"XSAct_站直身体\",\n                Target: [],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"NotKneeling\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}挺胸收腹，努力绷紧小腿，站直了身体.`],\n            img: \"Kick\"\n        },\n        XSAct_身体一颤: {\n            act: {\n                Name: \"XSAct_身体一颤\",\n                Target: [],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}的身体猛然颤抖了一下.`],\n            img: \"Kick\"\n        },\n        XSAct_活动大腿: {\n            act: {\n                Name: \"XSAct_活动大腿\",\n                Target: [],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}尝试活动了一下腿部.`],\n            img: \"Kick\"\n        },\n        XSAct_活动手臂: {\n            act: {\n                Name: \"XSAct_活动手臂\",\n                Target: [],\n                TargetSelf: [\"ItemArms\"],\n                MaxProgress: 30,\n                MaxProgressSelf: 30,\n                Prerequisite: [\"CantUseArms\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}一边按摩一边活动着手臂.`],\n            img: \"MasturbateHand\"\n        },\n        XSAct_绷紧膝盖: {\n            act: {\n                Name: \"XSAct_绷紧膝盖\",\n                Target: [],\n                TargetSelf: [\"ItemLegs\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"NotKneeling\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}努力的绷紧膝盖，尽可能站的更直.`],\n            img: \"Kick\"\n        },\n        XSAct_绷直脚踝: {\n            act: {\n                Name: \"XSAct_绷直脚踝\",\n                Target: [],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}不自觉的用力绷直脚踝，释放涌来的快感.`],\n            img: \"Kick\"\n        },\n        XSAct_蜷缩脚趾: {\n            act: {\n                Name: \"XSAct_蜷缩脚趾\",\n                Target: [],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}脚趾互相纠结，又时而蜷缩，忍耐着快感袭来.`],\n            img: \"Kick\"\n        },\n        XSAct_踮脚: {\n            act: {\n                Name: \"XSAct_踮脚\",\n                Target: [],\n                TargetSelf: [\"ItemBoots\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"CantUseFeet\"],\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}努力的踮起脚.`],\n            img: \"Kick\"\n        },\n        XSAct_兴奋的伸出舌头: {\n            act: {\n                Name: \"XSAct_兴奋的伸出舌头\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}兴奋的伸出舌头.}`],\n            img: \"MasturbateTongue\"\n        },\n        XSAct_兴奋的扭动: {\n            act: {\n                Name: \"XSAct_兴奋的扭动\",\n                Target: [],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: ['', `${selfPlaceholder}兴奋的扭动着身体.`],\n            img: 'Wiggle'\n        },\n        XSAct_呼吸平复: {\n            act: {\n                Name: \"XSAct_呼吸平复\",\n                Target: [],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}的呼吸渐渐平复.`],\n            img: \"PoliteKiss\"\n        },\n        XSAct_呼吸紊乱: {\n            act: {\n                Name: \"XSAct_呼吸紊乱\",\n                Target: [],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}的呼吸渐渐紊乱起来，发出软软的鼻音.`],\n            img: \"Whisper\"\n        },\n        XSAct_嘟囔着想说什么: {\n            act: {\n                Name: \"XSAct_嘟囔着想说什么\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}嘟囔着想说什么.`],\n            img: \"Whisper\"\n        },\n        XSAct_失神的伸出舌头: {\n            act: {\n                Name: \"XSAct_失神的伸出舌头\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}失神的伸出自己的舌头.`],\n            img: \"MasturbateTongue\"\n        },\n        XSAct_慢慢伸出舌头: {\n            act: {\n                Name: \"XSAct_慢慢伸出舌头\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}慢慢的伸出了自己的舌头.`],\n            img: \"MasturbateTongue\"\n        },\n        XSAct_微微摇头: {\n            act: {\n                Name: \"XSAct_微微摇头\",\n                Target: [],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}微微的摇了摇头.`],\n            img: \"Suck\"\n        },\n        XSAct_微微点头: {\n            act: {\n                Name: \"XSAct_微微点头\",\n                Target: [],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}微微的点了点头.`],\n            img: \"Nod\"\n        },\n        XSAct_身体颤抖的摇头: {\n            act: {\n                Name: \"XSAct_身体颤抖的摇头\",\n                Target: [],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}浑身颤抖的摇了摇头.`],\n            img: \"Suck\"\n        },\n        XSAct_身体颤抖的点头: {\n            act: {\n                Name: \"XSAct_身体颤抖的点头\",\n                Target: [],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}浑身颤抖的点了点头.`],\n            img: \"Nod\"\n        },\n        XSAct_歪头疑惑: {\n            act: {\n                Name: \"XSAct_歪头疑惑\",\n                Target: [],\n                TargetSelf: [\"ItemNeck\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}歪着脑袋一副疑惑的样子.`],\n            img: \"Suck\"\n        },\n        XSAct_扭动身体: {\n            act: {\n                Name: \"XSAct_扭动身体\",\n                Target: [],\n                TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}扭动着身体.`],\n            img: \"Wiggle\"\n        },\n        XSAct_活动四肢: {\n            act: {\n                Name: \"XSAct_活动四肢\",\n                Target: ['ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots'],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"CantUseArms\", \"CantUseFeet\"]\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}活动了下自己的四肢.`],\n            img: \"Slap\"\n        },\n        XSAct_看他: {\n            act: {\n                Name: \"XSAct_看他\",\n                Target: ['ItemHead'],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['CanLook']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}看向了${targetPlaceholder}.`],\n            img: \"SiblingsCheekKiss\"\n        },\n        XSAct_缩脖子: {\n            act: {\n                Name: \"XSAct_缩脖子\",\n                Target: [],\n                TargetSelf: [\"ItemNeck\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}缩了下自己的脖子.`],\n            img: \"Suck\"\n        },\n        XSAct_脸红喘气: {\n            act: {\n                Name: \"XSAct_脸红喘气\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}面色潮红的喘着气.`],\n            img: \"Whisper\"\n        },\n        XSAct_轻声喘气: {\n            act: {\n                Name: \"XSAct_轻声喘气\",\n                Target: [],\n                TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}轻声喘着气.`],\n            img: \"Whisper\"\n        },\n        XSAct_跺脚: {\n            act: {\n                Name: \"XSAct_跺脚\",\n                Target: [],\n                TargetSelf: ['ItemBoots'],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['NotKneeling']\n            },\n            desc: null,\n            descString: [\"\", `${selfPlaceholder}跺了跺脚.`],\n            img: \"Step\"\n        },\n        XSAct_头蹭: {\n            act: {\n                Name: \"XSAct_头蹭\",\n                Target: ['ItemHead', 'ItemNeck', 'ItemBreast', 'ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots', 'ItemPelvis'],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}用自己的脑袋蹭了蹭${targetPlaceholder}的${this.bodyNamePlaceholder}.`, ''],\n            img: \"SiblingsCheekKiss\",\n            isBase: true\n        },\n        XSAct_脸蹭: {\n            act: {\n                Name: \"XSAct_脸蹭\",\n                Target: ['ItemHead', 'ItemNeck', 'ItemBreast', 'ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots', 'ItemPelvis'],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}用自己的脸颊蹭了蹭${targetPlaceholder}的${this.bodyNamePlaceholder}.`, ''],\n            img: \"SiblingsCheekKiss\",\n            isBase: true\n        },\n        XSAct_鼻子蹭: {\n            act: {\n                Name: \"XSAct_鼻子蹭\",\n                Target: ['ItemHead', 'ItemNeck', 'ItemBreast', 'ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots', 'ItemPelvis'],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}用自己的鼻子蹭了蹭${targetPlaceholder}的${this.bodyNamePlaceholder}.`, ''],\n            img: \"Nod\",\n            isBase: true\n        },\n        XSAct_埋怀里: {\n            act: {\n                Name: \"XSAct_埋怀里\",\n                Target: ['ItemBreast'],\n                TargetSelf: [],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: ['MoveHead']\n            },\n            desc: null,\n            descString: [`${selfPlaceholder}把脑袋埋在${targetPlaceholder}的怀里.`, ''],\n            img: \"SiblingsCheekKiss\"\n        }\n    }\n\n\n\n    /**\n     * 前置条件字典\n     * @PrerequisiteName - 需要是在{@link XSA_ActivityPrerequisite}的字符串\n     * @Name - 需要是在{@link XSA_ActivityPrerequisite}的字符串\n     * @Action - 检测判断的具体动作\n     * - @param args - 一个数组,包含四个元素.\n     * - args[0]为@param prereq:{@link ActivityPrerequisite} 判定决定使用哪个条件的依据，但此处无用 请不要在这里使用该参数\n     * - args[1]为@param acting:{@link Character} | {@link PlayerCharacter} 代表动作发起者的数据\n     * - args[2]为@param acted:{@link Character} | {@link PlayerCharacter} 代表动作目标的数据\n     * - args[3]为@param group:{@link AssetGroup}.\n     */\n    prerequisiteDict: { [PrerequisiteName in XSA_ActivityPrerequisite]: prerequisite } = {\n        ItemHoodCovered: { //头部面罩位置是否覆盖\n            Name: \"ItemHoodCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                const acting = args[1] as Character | PlayerCharacter;\n                //const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemHoodCovered(acting);\n            }\n        },\n        TargetItemHoodCovered: { //目标的头部面罩位置是否覆盖\n            Name: \"TargetItemHoodCovered\",\n            Action: (args) => {\n                const acted = args[2] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemHoodCovered(acted);\n            }\n        },\n        ItemNoseCovered: { //头部鼻子位置是否覆盖\n            Name: \"ItemNoseCovered\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemNoseCovered(acting);\n            }\n        },\n        Kneeling: {\n            Name: \"Kneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.Kneeling(acting);\n            }\n        },\n        NotKneeling: {\n            Name: \"NotKneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.NotKneeling(acting);\n            }\n        },\n        CanLook: {\n            Name: \"CanLook\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.CanLook(acting);\n            }\n        }\n    }\n    /**\n     * 判断函数字典\n     * 前置条件字典将要调用的方法集合\n    */\n    Judgment: { [judgmentName: string]: (acting: Character | PlayerCharacter, acted?: Character | PlayerCharacter, group?: AssetGroup) => boolean } = {\n        ItemHoodCovered: (acting: Character | PlayerCharacter): boolean => { // 头部面罩位置是否覆盖 // 尝试修复\n            return InventoryPrerequisiteMessage(acting, \"HoodEmpty\") === \"\";\n        },\n        ItemNoseCovered: (acting: Character | PlayerCharacter): boolean => { // 鼻子位置是否覆盖 // 测试\n            return (InventoryGet(acting, 'ItemNose') ? \"CannotBeUsedOverMask\" : \"\") === \"\";\n        },\n        Kneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return (acting as PlayerCharacter).IsKneeling();\n        },\n        NotKneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return !(acting as PlayerCharacter).IsKneeling();\n        },\n        CanLook: (acting: Character | PlayerCharacter): boolean => { // 是否可以看到\n            return (acting as PlayerCharacter).IsBlind();\n        }\n\n    }\n\n\n    public getAllAct(): XSA_ActivityName_onlyName[] {\n        const result: XSA_ActivityName_onlyName[] = []\n        for (const a in this.activityToAddDict) {\n            const suffix = a.substring(6) as XSA_ActivityName_onlyName; // 从索引为 6 的位置开始截取到字符串末尾\n            result.push(suffix); // 输出：XXXX\n        }\n        conDebug({\n            content: result,\n            name: \"ActivityNameXiaosu_onlyName\",\n            type: MSGType.DebugLog\n        });\n        return result;\n    }\n}\n","import { BaseModule } from \"Modules/BaseModule\";\nimport { MSGType, SendChat, SendEmote, conDebug, copyAndDownloadHtmlElement, hookFunction, segmentForCH, timeRange } from \"utils\";\n\nexport class ChatroomModule extends BaseModule {\n\n    // VVVV==========初始化与加载函数==========VVVV //\n    public Load(): void {\n        this.hookListHandler();\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 30;\n\n    }\n\n\n    static InputElement: HTMLInputElement | null = null;\n\n    /**\n     * hook函数列表处理\n     */\n    hookListHandler(): void {\n\n        hookFunction(\"ChatRoomLoad\", this.priority, (args, next) => {\n            const result = next(args);\n            if (!ChatroomModule.InputElement) {\n                ChatroomModule.InputElement = document.getElementById('InputChat') as HTMLInputElement;\n            }\n            ChatroomModule.buildKaomojiButton()\n\n            return result;\n        });\n\n\n        // 调整按钮位置\n        hookFunction(\"ElementPosition\", this.priority, (args, next) => {\n            const result = next(args);\n            if (args[0] === \"InputChat\") {\n                ChatroomModule.ResizeKaomojiButton();\n            }\n            return result;\n        });\n        // 生成InputChat元素时将InputChat元素保存起来\n        hookFunction(\"ElementCreateTextArea\", this.priority, (args, next) => {\n            const result = next(args);\n            if (args[0] === \"InputChat\") {\n                ChatroomModule.InputElement = document.getElementById('InputChat') as HTMLInputElement;\n            }\n            return result;\n        });\n        // 当聊天室清理全部元素时 删除表情系统元素\n        hookFunction(\"ChatRoomClearAllElements\", this.priority, (args, next) => {\n            ChatroomModule.removeKaomojiMenu();\n            ChatroomModule.InputElement = null;\n            return next(args);\n        });\n        // 当聊天室显示元素时 显示表情系统菜单\n        hookFunction(\"ChatRoomShowElements\", this.priority, (args, next) => {\n            const result = next(args);\n            ChatroomModule.showKaomojiMenu();\n            return result;\n        });\n        // 当聊天室隐藏元素时 隐藏表情系统元素\n        hookFunction(\"ChatRoomHideElements\", this.priority, (args, next) => {\n            const result = next(args);\n            ChatroomModule.hideKaomojiMenu();\n            return result;\n        });\n\n        // 处理聊天室发送消息时 接受 \" ` \" 命令和 接受 \" | \" 命令\n        hookFunction(\"CommandParse\", 0,\n            (args, next) => {\n                let msg: string = args[0];\n\n                // 匹配[ ` ]开头的命令 处理结巴系统\n                const match = msg.match(/^`([1-9])?(m)?( )? (.*)/);\n                if (match) {\n                    msg = match[2] != \"m\" ? this.stammerHandler(match[4], parseInt(match[1]), match[3] ? false : true, false) :\n                        this.stammerHandler(match[4], parseInt(match[1]), match[3] ? false : true, true);\n                }\n\n                // 匹配[ | ]的颜文字命令 处理表情系统\n                const kaomojiMatch = msg.match(/^\\|(.*)/);\n                if (kaomojiMatch) {\n                    if (Object.keys(ChatroomModule.kaomojiSet).includes(kaomojiMatch[1]) || kaomojiMatch[1] == \"all\") {\n                        ChatroomModule.kaomojiHandler(kaomojiMatch[1]);\n                        const inputElement: HTMLInputElement = document.getElementById('InputChat') as HTMLInputElement;\n                        inputElement.value = \"\";\n                    } else {\n                        ChatRoomSendLocal(\"该颜文字表情包不存在，请重新输入或输入 |help 查看参数\", 5000)\n                        const inputElement: HTMLInputElement = document.getElementById('InputChat') as HTMLInputElement;\n                        inputElement.value = \"|\";\n                    }\n                    return;\n                }\n                args[0] = msg;\n                return next(args);\n            });\n    }\n\n\n    // VVVV==========聊天记录模块==========VVVV //\n    /**\n     * 导出聊天记录\n     * @param time_limit 时间范围\n     */\n    ExportChat(time_limit: timeRange | null = null): void {\n        const exportName: string | undefined = `${ChatRoomData?.Name}_${new Date().toLocaleString()}`;\n\n        const mainElement: HTMLElement | null = document.getElementById('TextAreaChatLog')\n\n        copyAndDownloadHtmlElement(mainElement, exportName, time_limit)\n    }\n\n    // VVVV==========结巴模块==========VVVV //\n    /**\n     * \n     * @param content 将要处理的句子内容\n     * @param tenfoldStammeringProbability 结巴程度 [1 - 9]\n     * @param isSegmentForCH 是否使用中文分词效果\n     * @param haveMoan 是否呻吟\n     * @returns 最终处理后的句子\n     */\n    stammerHandler(content: string, tenfoldStammeringProbability: number, isSegmentForCH: boolean, haveMoan: boolean): string {\n        conDebug(`stammerHandler: content: ${content} tenfoldStammeringProbability: ${tenfoldStammeringProbability}`)\n\n        // 处理结巴程度，默认结巴程度为3\n        if (Number.isNaN(tenfoldStammeringProbability)) tenfoldStammeringProbability = 3;\n        const stammeringProbability = tenfoldStammeringProbability / 10;\n\n        // 使用segmentForCH进行分词，传入参数取消掉空白字符\n        const segmentList = isSegmentForCH ? segmentForCH(content.replace(/\\s/g, \"\")) : undefined;\n\n        // 如果segmentForCH没有返回内容，则使用源字符串通过空格分词\n        const stringArray: string[] = segmentList ? segmentList : content.split(' ');\n\n        return this.stammerForList(stringArray, stammeringProbability, haveMoan);\n    }\n\n    /** 呻吟词库 */\n    moan: string[] = [\n        \" 嗯~❤..\",\n        \" 昂~❤哈啊..\",\n        \" --唔~呜..\",\n        \" 姆嗯~❤...\",\n        \" --嘶-啊~\",\n        \" 唔..❤啊~\",\n        \" --❤嘶哈~\",\n        \" ❤呀~\",\n        \" ❤...呀嗯..\",\n        \" ❤.哦~嗯~.\"\n    ];\n    /**\n     * 将分词后的句子添加效果并返回完整句子.\n     * @param messageList 经过分词后的字符串列表\n     * @param stammeringProbability 结巴程度 [0.1~0.9]\n     * @param haveMoan 是否呻吟\n     * @returns 返回处理后的完整句子.\n     */\n    private stammerForList(messageList: string[], stammeringProbability: number, haveMoan: boolean): string {\n        //const stringArray: string[] = message.split(' ');\n        let result = '';\n\n        // 遍历单词数组\n        for (let i = 0; i < messageList.length; i++) {\n            // 将当前单词加入结果字符串\n            const currentWord: string = messageList[i];\n            result += currentWord;\n\n            // 随机决定是否添加结巴效果\n            if (Math.random() < stammeringProbability) { // 假设添加结巴效果的概率为50%\n                result += this.addStammerEffect(currentWord);\n            }\n\n            // 根据当前玩家的兴奋程度决定是否添加呻吟\n            if (haveMoan && Player.ArousalSettings?.Progress && 100 * Math.random() <= Player.ArousalSettings?.Progress) {\n                result += this.moan[Math.floor(Math.random() * this.moan.length)];\n            }\n\n            // 添加-分隔符，最后一个单词后添加 「 ... 」\n            if (i < messageList.length - 1) {\n                if (Math.random() < stammeringProbability)\n                    result += '-';\n            } else {\n                result += '...';\n            }\n        }\n\n        // 调试日志输出处理后的结果\n        conDebug({\n            name: 'stammer',\n            type: MSGType.DebugLog,\n            content: result\n        });\n\n        return result;\n    }\n    // 添加结巴效果的辅助方法\n    private addStammerEffect(word: string, depth: number = 0): string {\n        // 设置最大递归深度\n        const maxDepth = 3;\n        // 如果递归深度达到最大值，返回原单词\n        if (depth >= maxDepth) {\n            return word;\n        }\n        // 在这里实现添加结巴效果的逻辑，可以是随机的字符、重复的部分、乱序等等\n        const randomNumber: number = Math.random();\n        let result: string = randomNumber < 0.5 ? '...' : `-${word}`;\n\n        if (Math.random() < 0.2) {\n            result = this.addStammerEffect(result, depth + 1);\n        }\n        return result;\n    }\n\n    // VVVV==========颜文字表情模块==========VVVV //\n\n    /** 表情菜单对象 */\n    private static KaomojiMenuObject: {\n        menu: HTMLDivElement | null,\n        title: HTMLDivElement | null,\n        container: HTMLDivElement | null\n    } = {\n            menu: null,\n            title: null,\n            container: null\n        };\n\n    /** 表情菜单标题元素 */\n    private static menuTitleTextSet: { [key: string]: HTMLDivElement } = {\n        全部: document.createElement('div'),\n        开心: document.createElement('div'),\n        难过: document.createElement('div'),\n        害羞: document.createElement('div'),\n        生气: document.createElement('div'),\n        惊讶: document.createElement('div'),\n        困惑: document.createElement('div'),\n        搞怪: document.createElement('div')\n    }\n\n    /** 表情按钮 */\n    static KaomojiButton: HTMLButtonElement | null = null;\n    /** 是否应该显示表情菜单 处理跟随聊天室UI隐藏表情菜单时，等需要再显示时，菜单是否跟随显示 */\n    static KaomojiShouldShow: boolean = false;\n\n    /**\n     * 处理颜文字表情系统\n     * @param message 传入的信息，一般是命令\n     */\n    private static kaomojiHandler(message: string): void {\n        const kaomojiMenu = this.getKaomojiMenu(message);\n        kaomojiMenu!.style.display = \"flex\";\n        this.KaomojiShouldShow = true;\n    }\n\n    /** 表情库 */\n    private static kaomojiSet: { [groupName: string]: string[] } = {\n        help: [\"all ==> 全部表情\", \"hp ==> 开心\", \"sd ==> 伤心\", \"sy ==> 害羞\", \"ar ==> 生气\", \"ap ==> 惊讶\", \"cf ==> 困惑\", \"nt ==> 搞怪顽皮\"],\n        hp: [\"ヾ(❀╹◡╹)ﾉ~\", \" (๑>؂<๑）\", \"(｡･ω･｡)ﾉ♡\", \"(◍ ´꒳` ◍)\", \"(￣w￣)ノ\", \"Hi~ o(*￣▽￣*)ブ\", \"(≧∇≦)ﾉ\", \"o(^▽^)o\", \"(￣︶￣)↗\", \"<(￣︶￣)↗[GO!]\", \"o(*￣▽￣*)o\", \"(p≧w≦q)\", \"ㄟ(≧◇≦)ㄏ\", \"(/≧▽≦)/\", \"(　ﾟ∀ﾟ) ﾉ♡\", \"(●'◡'●)\", \"ヽ(✿ﾟ▽ﾟ)ノ\",\n            \"o(*￣︶￣*)o\", \"(๑¯∀¯๑)\", \"(≧∀≦)ゞ\", \"φ(≧ω≦*)♪\", \"╰(*°▽°*)╯\", \"(*^▽^*)\", \"(๑•̀ㅂ•́)و✧\", \"(੭*ˊᵕˋ)੭*ଘ*\", \"(o゜▽゜)o☆[BINGO!]\", \"(^▽^ )\", \"<(*￣▽￣*)/\", \"┌|*´∀｀|┘\",\n            \"♪(´∇`*)\", \"(｡◕ฺˇε ˇ◕ฺ｡）\", \" ✌︎( ᐛ )✌︎\", \"(*・ω・)ﾉ\", \"(„• ֊ •„)\"],\n        sd: [\"テ_デ\", \"□_□\", \"┭┮﹏┭┮\", \"╥﹏╥...\", \"o(TヘTo)\", \"〒▽〒\", \"ε(┬┬﹏┬┬)3\", \"(;´༎ຶД༎ຶ`)\", \"(ノへ`、)\", \"（-_-。）\", \"(ノへ￣、)\", \"｡◔‸◔｡\", \"(⊙﹏⊙)\"],\n        sy: [\"|ω・）\", \"|･ω･｀)\", \"◕ฺ‿◕ฺ✿ฺ)\", \"つ﹏⊂\", \"(* /ω＼*)\", \"o(*////▽////*)q\", \"(*/ω＼*)\", \"(′▽`〃)\", \"(✿◡‿◡)\", \"(/▽＼)\", \"(๑´ㅂ`๑)\", \"(◡ᴗ◡✿)\", \"⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄\", \"(〃'▽'〃)\", \"(๑╹ヮ╹๑)ﾉ\"],\n        ar: [\"/ᐠ｡ꞈ｡ᐟ\\\\\", \"˃ʍ˂\", \"(σ｀д′)σ\", \"＼(゜ロ＼)(／ロ゜)／\", \"<(－︿－)>\", \"(ー`´ー)\", \"（｀へ´）\", \"(-__-)=@))> o<)\", \"(///￣皿￣)○～\", \"┻━┻︵╰(‵□′)╯︵┻━┻\",\n            \"→)╥﹏╥)\", \"抽!!(￣ε(#￣)☆╰╮(￣▽￣///)\", \"(￣ε(#￣)☆╰╮o(￣皿￣///)\", \"(* ￣︿￣)\", \"（＃￣～￣＃）\", \"(⊙x⊙;)\", \"o(*≧▽≦)ツ┏━┓\", \"(ノω<。)ノ))☆.。\",\n            \"(〃＞目＜)\", \"( σ'ω')σ\", \"o(′益`)o\", \"(〃＞目＜)\", \"o(≧口≦)o\", \"Ｏ(≧口≦)Ｏ\", \"...(*￣０￣)ノ[等等我…]\", \"（≧0≦）\", \"ψ(*｀ー´)ψ\", \"ψ(￣皿￣)ノ\"],\n        sp: [\"✧∇✧\", \"!!!∑(ﾟДﾟノ)ノ\", \"’(°ー°〃)\", \"ヾ(ノ' ﹃' )ノ\", \"(ーー゛)\", \"(○´･д･)ﾉ\", \"wow~ ⊙o⊙\", \"~(￣0￣)/\", \"Σ(｀д′*ノ)ノ\", \"Σ(っ °Д °;)っ\", \"(⊙ˍ⊙)\", \"w(ﾟДﾟ)w\",\n            \"ｍ(o・ω・o)ｍ\", \"⊙▽⊙\", \"（இ௰இ）\", \"(●°u°●)​ 」\", \"（｡ò ∀ ó｡）\", \"(๑•̀ω•́)ノ\"],\n        cf: [\"⚆_⚆\", \"( -'`-)\", \"(=′ー`)\", \"( -'`-; )\", \"(・-・*)\", \"( ｀д′)\", \"(￣m￣）\", \"( ╯▽╰)\", \" o-o(=•ェ•=)m\", \"(⊙﹏⊙)\", \"Σ( ° △ °|||)︴\", \"(⊙ˍ⊙)\", \"( ᗜ ˰ ᗜ )\", \"꒰ ˶• ༝ •˶꒱\"],\n        nt: [\"(ˉ▽￣～) 切~~\", \"(￣w￣)ノ\", \"(￣v￣)ノ\", \"(￣l￣)ノ\", \"( ￣ー￣)\", \"(‾◡◝)\", \"(￣_,￣ )\", \"( ﹁ ﹁ ) ~→\", \"<(￣ ﹌ ￣)@m\", \"ꉂ-ꉂ(ˊᗜˋ*)\", \"(｀・ω・´）\", \"༼ つ ◕_◕ ༽つ\", \"ヽ(✿ﾟ▽ﾟ)ノ (°ー°〃)\",\n            \"ヾ(￣▽￣)Bye~Bye~\", \"(◉ω◉υ)⁼³₌₃\", \"(●—●)\", \"(｡･∀･)ﾉﾞ\", \"┬─┬ ノ('-'ノ)\", \"┸━━┸)>口<)\", \"(-.-)..zzZZ\", \"(｡◝ᴗ◜｡)\", \" =͟͟͞͞(꒪ᗜ꒪ ‧̣̥̇)\", \"(˵¯͒〰¯͒˵)\"]\n    }\n\n\n    private static isKaomojiMenuCloseEventListenerAdded: boolean = false;\n    /**\n     * 构建表情按钮并返回按钮实例\n     * @returns 创建的表情按钮\n     */\n    private static buildKaomojiButton(): HTMLButtonElement {\n        if (this.KaomojiButton) return this.KaomojiButton;\n        const button = document.createElement(\"button\");\n        button.id = \"kaomoji-button\";\n        button.className = \"kaomoji-button\";\n        button.type = 'button';\n        button.addEventListener(\"click\", () => {\n            if (!this.KaomojiMenuObject.menu || this.KaomojiMenuObject.menu.style.display === \"none\") {\n                this.kaomojiHandler('all');\n            } else if (this.KaomojiMenuObject.menu.style.display !== \"none\") {\n                this.KaomojiMenuObject.menu.style.display = \"none\";\n                this.KaomojiShouldShow = false;\n            }\n        });\n        if (!this.isKaomojiMenuCloseEventListenerAdded) {\n            document.addEventListener('click', (event) => {\n                const target = event.target as HTMLElement; // 将事件目标转换为 HTMLElement 类型\n                if (!target.closest('#kaomoji-menu') && !target.closest('#kaomoji-button') && this.KaomojiMenuObject.menu && this.KaomojiShouldShow) {\n                    this.KaomojiMenuObject.menu!.style.display = \"none\";\n                    this.KaomojiShouldShow = false;\n                }\n            });\n            this.isKaomojiMenuCloseEventListenerAdded = true;\n        }\n        button.innerHTML = \":)\";\n\n        this.ResizeKaomojiButton();\n        this.KaomojiButton = button;\n        document.body.appendChild(button);\n        return button;\n    }\n\n    /**\n     * 调整按钮位置\n     */\n    private static ResizeKaomojiButton() {\n        if (this.InputElement && this.KaomojiButton) {\n            this.KaomojiButton.style.top = parseInt(this.InputElement.style.top) - window.innerHeight * 0.026 + \"px\";\n            this.KaomojiButton.style.left = parseInt(this.InputElement.style.left) - window.innerHeight * 0.026 + \"px\";\n        }\n    }\n    /**\n     * 获取表情菜单\n     * @param key 要获取表情菜单的索引\n     * @returns 表情菜单的元素\n     */\n    private static getKaomojiMenu(key: string): HTMLDivElement {\n        // 获取表情菜单 如果不存在则创建\n        const { kaomojiContainer, menu }\n            : { kaomojiContainer: HTMLDivElement; menu: HTMLDivElement; }\n            = this.KaomojiMenuObject.menu\n                ? { kaomojiContainer: this.KaomojiMenuObject.container!, menu: this.KaomojiMenuObject.menu! }\n                : ChatroomModule.buildKaomojiMenu();\n\n        // 设置表情菜单内容\n        this.selectKaomojiTitle(kaomojiContainer, key);\n        return menu;\n    }\n\n    /**\n     * 点击表情元素后的事件处理\n     * &gt;>   &lt;<\n     */\n    private static kaomojiClick(event: MouseEvent, kaomojiElement: HTMLDivElement): void {\n        if (event.button === 0) { // 左键点击 将表情插入到输入框当前光标位置，如果不在焦点则插入到末尾\n\n            if (this.InputElement) {\n                // 获取光标位置\n                const cursorPosition = this.InputElement.selectionStart;\n                if (cursorPosition === null || cursorPosition == -1) {\n                    this.InputElement.value += kaomojiElement.textContent;\n                } else {\n                    // 插入字符串\n                    const value = this.InputElement.value;\n                    const newValue = value.substring(0, cursorPosition) + kaomojiElement.textContent + value.substring(cursorPosition);\n                    this.InputElement.value = newValue;\n                    // 将光标位置移到插入字符串后面\n                    const newCursorPosition = cursorPosition + (kaomojiElement.textContent == null ? 0 : kaomojiElement.textContent.length);\n                    this.InputElement.setSelectionRange(newCursorPosition, newCursorPosition);\n                }\n            }\n        } else if (event.button === 2) { // 右键点击直接使用*消息发送表情\n            SendEmote(kaomojiElement.textContent);\n        } else if (event.button === 1) { // 中键点击直接发送表情\n            SendChat(kaomojiElement.textContent);\n        }\n    }\n\n\n    /**\n     * 构建表情菜单 并填充内容\n     * @returns 表情菜单的div元素包含菜单和菜单内表情容器元素\n     */\n    private static buildKaomojiMenu() {\n        // 创建表情菜单的div元素\n        const menu: HTMLDivElement = document.createElement('div');\n        menu.id = 'kaomoji-menu';\n        menu.style.display = 'flex';//\n\n        // 创建表情菜单标题的div元素\n        const menuTitle: HTMLDivElement = document.createElement('div');\n        // 创建表情菜单选择标题元素\n        const menuTitleTextSet: { [key: string]: HTMLDivElement } = this.menuTitleTextSet;\n\n\n        // 创建表情菜单标题关闭按钮的div元素\n        const menuTitleClose: HTMLButtonElement = document.createElement('button');\n        menuTitleClose.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"red\" />\n        </svg>`\n\n        // 创建表情容器的div元素\n        const kaomojiContainer: HTMLDivElement = document.createElement('div');\n\n        // 将表情菜单标题、表情容器添加到表情菜单div元素中  关闭按钮的添加在选择菜单添加之后\n        menu.appendChild(menuTitle);\n        menu.appendChild(kaomojiContainer);\n\n\n        // 设置除菜单按钮之外的其他元素的类名\n        menu.className = 'kaomoji-menu';\n        menuTitle.className = 'kaomoji-title';\n        menuTitleClose.className = 'kaomoji-title-close';\n        kaomojiContainer.className = 'kaomoji-container';\n\n        // 监听表情菜单标题关闭按钮的点击事件，点击时隐藏表情菜单\n        menuTitleClose.addEventListener('click', () => {\n            menu.style.display = 'none';\n            this.KaomojiShouldShow = false;\n        });\n\n        // 处理表情选择菜单\n        for (const key in menuTitleTextSet) {\n            /** 获取菜单标题元素的索引key key为中文菜单的字符串在这里{@link menuTitleTextSet} */\n\n            // 赋值菜单选择按钮的内容\n            menuTitleTextSet[key].innerHTML = key;\n            // 类名\n            menuTitleTextSet[key].className = 'kaomoji-title-text';\n            // 添加到菜单标题元素中\n            menuTitle.appendChild(menuTitleTextSet[key]);\n\n            // 为按钮添加点击事件\n            menuTitleTextSet[key].addEventListener('click', () => {\n                /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n                const selectKey = this.getKaomojiSelectKey(key);\n                this.selectKaomojiTitle(kaomojiContainer, selectKey)\n            })\n        }\n\n        // 添加关闭按钮\n        menuTitle.appendChild(menuTitleClose);\n\n        // 将表情菜单标题、表情容器和表情菜单对象保存到静态属性中\n        this.KaomojiMenuObject = { title: menuTitle, container: kaomojiContainer, menu: menu };\n\n        document.body.appendChild(menu);\n        // 返回表情菜单标题、表情容器和表情菜单对象\n        return { kaomojiContainer, menu };\n    }\n\n    /**\n     * 将菜单的样式设置成当前选择的样式\n     * @param selectKey 表情库的中文key\n     */\n    private static selectMenuTitleStyleHandle(selectKey: string) {\n        const _className = 'kaomoji-title-text-active';\n        if (!this.menuTitleTextSet[selectKey].classList.contains(_className)) {\n            this.menuTitleTextSet[selectKey].classList.add(_className);\n        }\n        for (const key2 in this.menuTitleTextSet) {\n            if (key2 != selectKey) {\n                this.menuTitleTextSet[key2].classList.remove('kaomoji-title-text-active');\n            }\n        }\n    }\n\n    /**\n     * 将中文key变为表情库的key\n     * @param key 将中文key变为表情库的key\n     * @returns 返回表情库key\n     */\n    private static getKaomojiSelectKey(key: string): string {\n        /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n        let selectKey: string | null = null;\n        switch (key) {\n            case '开心':\n                selectKey = 'hp';\n                break;\n            case '难过':\n                selectKey = 'sd';\n                break;\n            case '害羞':\n                selectKey = 'sy';\n                break;\n            case '生气':\n                selectKey = 'ar';\n                break;\n            case '惊讶':\n                selectKey = 'sp';\n                break;\n            case '困惑':\n                selectKey = 'cf';\n                break;\n            case '搞怪':\n                selectKey = 'nt';\n                break;\n            default:\n                selectKey = 'all';\n                break;\n        }\n        return selectKey;\n    }\n\n    /**\n     * 将表情库的key变为中文菜单key\n     * @param selectKey 将中文key变为表情库的key\n     * @returns 返回表情库key\n     */\n    private static getKaomojiKey(selectKey: string): string {\n        /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n        let key: string | null = null;\n        switch (selectKey) {\n            case 'hp':\n                key = '开心';\n                break;\n            case 'sd':\n                key = '难过';\n                break;\n            case 'sy':\n                key = '害羞';\n                break;\n            case 'ar':\n                key = '生气';\n                break;\n            case 'sp':\n                key = '惊讶';\n                break;\n            case 'cf':\n                key = '困惑';\n                break;\n            case 'nt':\n                key = '搞怪';\n                break;\n            default:\n                key = '全部';\n                break;\n        }\n        return key;\n    }\n\n    /**\n     * 选择标题按钮时触发的方法\n     * @param kaomojiContainer 容纳表情的容器元素\n     * @param key 要显示表情库索引键 英文\n     */\n    private static selectKaomojiTitle(kaomojiContainer: HTMLDivElement, key: string): void {\n\n\n        const kaomojiList: string[] = key == \"all\" ? this.getAllKaomoji() : this.kaomojiSet[key]\n        // 设置表情菜单内容\n        kaomojiContainer.innerHTML = '';\n        const kaomojiClassName = 'kaomoji';\n        this.selectMenuTitleStyleHandle(this.getKaomojiKey(key));\n\n        for (const kaomoji of kaomojiList) {\n            const kaomojiElement: HTMLDivElement = document.createElement('div');\n            kaomojiElement.className = kaomojiClassName;\n            kaomojiElement.innerText = kaomoji;\n            if (key !== \"help\") {\n                kaomojiElement.addEventListener('click', (event) => {\n                    this.kaomojiClick(event, kaomojiElement);\n                });\n                // 阻断该元素的右键点击和中间点击事件\n                kaomojiElement.addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    this.kaomojiClick(event, kaomojiElement);\n                })\n                kaomojiElement.addEventListener('mousedown', (event) => {\n                    if (event.button === 1) {\n                        event.preventDefault();\n                        this.kaomojiClick(event, kaomojiElement);\n                    }\n                })\n            }\n            kaomojiContainer.appendChild(kaomojiElement);\n        }\n    }\n\n    /**\n     * 移除表情菜单\n     */\n    private static removeKaomojiMenu() {\n        if (this.KaomojiButton) {\n            this.KaomojiButton.remove();\n            this.KaomojiButton = null;\n        }\n        if (this.KaomojiMenuObject.menu) {\n            this.KaomojiMenuObject.menu.remove();\n            this.KaomojiMenuObject = {\n                menu: null,\n                title: null,\n                container: null,\n            };\n        }\n    }\n\n    /**\n     * 隐藏表情菜单\n     */\n    private static hideKaomojiMenu() {\n        if (this.KaomojiMenuObject.menu) {\n            this.KaomojiMenuObject.menu.style.display = \"none\";\n        }\n        if (this.KaomojiButton) {\n            this.KaomojiButton.style.display = \"none\";\n        }\n    }\n\n    /**\n     * 显示表情菜单\n     */\n    private static showKaomojiMenu() {\n        if (this.KaomojiMenuObject.menu && this.KaomojiShouldShow == true) {\n            this.KaomojiMenuObject.menu.style.display = 'flex';\n        }\n        if (this.KaomojiButton) {\n            this.KaomojiButton.style.display = 'inline';\n\n        }\n    }\n\n    /**\n     * 返回全部的表情\n     * @returns 全部的表情列表\n     */\n    private static getAllKaomoji(): string[] {\n        const allKaomojiList: string[] = [];\n        for (const key in this.kaomojiSet) {\n            if (key == 'help') continue;\n            for (const kaomoji of this.kaomojiSet[key]) {\n                allKaomojiList.push(kaomoji);\n            }\n        }\n        return allKaomojiList;\n    }\n}","import { hookFunction } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\n\n\nexport class ChessModule extends BaseModule {\n    public Load(): void {\n        hookFunction(\"ChatRoomMessage\", 10, (args, next) => {\n            const data = args[0] as ServerChatRoomMessage;\n\n            if (typeof data === 'object') {\n                if (data.Content === 'XSA_Chess' && data.Dictionary) {\n                    // 拦截XSA_Chess消息\n                    const CheckerInfo = data.Dictionary[0] as ChessDictionaryEntry;\n                    if (CheckerInfo.sender === Player.MemberNumber) return;\n                    this.ShowChessboard(CheckerInfo, data.Sender ?? 0);\n                    return;\n                }\n            }\n            return next(args);\n        })\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 0;\n    }\n\n    // 内存中的历史棋盘 当前版本有内存泄露的风险 回头再详细测试\n    private static ChessDivMap: Map<number, HTMLDivElement> = new Map();\n\n    /**\n     * 获取相同两个人在历史棋盘中储存的内容的键\n     * @param p1 玩家1编号\n     * @param p2 玩家2编号\n     * @returns 通过玩家编号获取的在历史棋盘中的键\n     */\n    private static getChessDivKey(p1: number, p2: number): number {\n        const combinedString = `${p1}${p2}`; // 将两个数字拼接成一个字符串\n        let hash = 0;\n        for (let i = 0; i < combinedString.length; i++) {\n            const char = combinedString.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char; // 使用简单的哈希算法处理字符串\n            hash |= 0; // 将结果转换为32位整数\n        }\n        return hash;\n    }\n\n    /**\n     * 发送一个棋局信息到服务器\n     * @param Player1 玩家1\n     * @param Player2 玩家2\n     * @param Round 回合数\n     * @param checkerboard 棋盘信息 二维数组\n     * @param started 是否已经开始对局\n     */\n    SendAChess(Player1: number, Player2: number | null, Round: number, checkerboard: Checkerboard = Chess.newCheckerboard, started: boolean = false) {\n        const CheckerInfo: ChessDictionaryEntry = { Player1, Player2, Round: Round, Checkerboard: checkerboard, start: started, sender: Player.MemberNumber ?? -1 }\n        //if (!Player2) this.ShowChessboard(CheckerInfo);\n        ServerSend(\"ChatRoomChat\", { Type: 'Hidden', Content: 'XSA_Chess', Dictionary: [CheckerInfo], Sender: Player.MemberNumber })\n    }\n\n    /**\n     * 显示一个棋局\n     * @param info 对局信息\n     * @param sender 发送者\n     */\n    ShowChessboard(info: ChessDictionaryEntry, sender: number) {\n        // 通过从服务器接受的信息new一个棋局类\n        const chess = new Chess(info.Player1)\n        // 载入信息\n        chess.LoadInfo(info);\n\n        // 仿照原版的发送本地信息函数的部分代码\n        const div = document.createElement(\"div\");\n        const chessKey = ChessModule.getChessDivKey(chess.player1MemberNumber, chess.player2MemberNumber ?? -1);\n        if (ChessModule.ChessDivMap.has(chessKey)) {\n            ChessModule.ChessDivMap.get(chessKey)!.remove();\n            ChessModule.ChessDivMap.delete(chessKey);\n            ChessModule.ChessDivMap.set(chessKey, div);\n        } else {\n            ChessModule.ChessDivMap.set(chessKey, div);\n        }\n\n        div.setAttribute('class', 'ChatMessage ChatMessage' + 'LocalMessage');\n        div.setAttribute('data-time', ChatRoomCurrentTime());\n        div.setAttribute('data-sender', sender);\n\n        // 通过chess类实例的Element属性(get())获取棋盘\n        const main = chess.Element;\n\n        // 如果对局没有开始 或者 当前玩家是 玩家1 (发起者) 或者是 玩家2 则添加按钮\n        // \n        if (!info.start || chess.player1MemberNumber === Player.MemberNumber || chess.player2MemberNumber === Player.MemberNumber) {\n            // 发送按钮\n            const sendButton: HTMLButtonElement = document.createElement('button');\n            sendButton.className = 'ChatMessageButton';\n\n            sendButton.innerHTML = '发送';\n            sendButton.click = () => {\n                // 点击后禁用交互\n                chess.Disable = true;\n                // 如果对局开始 并且 玩家1 是操作者 则回合数加1 换句话说 因为发起者总是玩家1 所以发起者发送信息后回合数加1 等从服务器接受到信息再发送 则回合数+1\n                if (info.start && info.Player1 === Player.MemberNumber) chess.Round++;\n                // 如果对局没有开始 并且 当前玩家不是 玩家1 (不是发起者) 则对局开始 将当前玩家的编号传入 chess 类实例中\n                if (!info.start && info.Player1 !== Player.MemberNumber) {\n                    chess.player2MemberNumber = Player.MemberNumber ?? null;\n                    info.start = true;\n                }\n                // 发送对局信息到服务器\n                this.SendAChess(chess.player1MemberNumber, chess.player2MemberNumber, chess.Round, chess.checkerboard, info.start);\n                // 发送后移除按钮\n                sendButton.remove();\n                // 30秒后移除div 防止内存泄露\n                setTimeout(() => {\n                    div.remove();\n                }, 30000);\n            }\n            // 添加按钮\n            main.appendChild(sendButton);\n        }\n\n        // 将棋盘添加到div中\n        div.appendChild(main)\n        // 添加到聊天框中\n        ChatRoomAppendChat(div);\n    }\n}\n\n\nexport class Chess {\n    /** 棋盘信息 */\n    public checkerboard: Checkerboard;\n    /** 玩家1编号 */\n    public player1MemberNumber: number;\n    /** 玩家1名称 */\n    public player1Name: string;\n    /** 玩家2编号 */\n    public player2MemberNumber: number | null;\n    /** 玩家2名称 */\n    public player2Name: string;\n\n    /** 回合数 */\n    public Round: number;\n\n    /** 表示是否可以对玩家1的棋子交互 */\n    private canChange1: boolean;\n    /** 表示是否可以对玩家2的棋子交互 */\n    private canChange2: boolean;\n\n    /** 表示是否可以对棋子交互 */\n    public Disable: boolean;\n\n\n    constructor(player1MemberNumber: number) {\n        this.player1MemberNumber = player1MemberNumber;\n        this.player1Name = this.getPlayer1Name()\n        this.canChange1 = false;\n\n        this.player2MemberNumber = null;\n        this.player2Name = '未开始';\n        this.canChange2 = false;\n\n        this.checkerboard = Chess.newCheckerboard;\n        this.Round = 0;\n\n        this.Disable = false;\n    }\n\n    /**\n     * 将棋局信息载入到类实例中\n     * 因为在构造函数时玩家1的信息已经写入\n     * 此处关于玩家的信息只需要更新玩家2的信息 和 当前玩家是否是参与玩家 (canChange1, canChange2)\n     * @param info 棋局信息\n     */\n    public LoadInfo(info: ChessDictionaryEntry): void {\n        this.player2MemberNumber = info.Player2;\n        this.player2Name = this.getPlayer2Name();\n\n        if (this.player1MemberNumber === Player.MemberNumber) {\n            this.canChange1 = true;\n            this.canChange2 = false;\n        }\n        else if (!this.player2MemberNumber || this.player2MemberNumber === Player.MemberNumber) {\n            this.canChange1 = false;\n            this.canChange2 = true;\n        }\n\n        this.Round = info.Round;\n        this.checkerboard = info.Checkerboard;\n    }\n\n    /**\n     * 在聊天室中寻找 player1 如果未找到则返回null\n     * @returns 聊天室中的玩家1(如果存在)\n     */\n    private getPlayer1(): Character | null {\n        return ChatRoomCharacter.find(c => c.MemberNumber == this.player1MemberNumber) ?? null;\n    }\n    /**\n     * 搜索玩家1 并返回名称(昵称(优先)或名字)\n     * @returns 玩家1的名称\n     */\n    private getPlayer1Name(): string {\n        const P1 = this.getPlayer1();\n\n        return P1 ? ((P1.Nickname === '' || !P1.Nickname) ? P1.Name : P1.Nickname) : '丢失'\n    }\n    /**\n     * 在聊天室中寻找 player2 如果未找到则返回null\n     * @returns 聊天室中的玩家2(如果存在)\n     */\n    private getPlayer2(): Character | null {\n        if (this.player2MemberNumber === null) return null;\n        return ChatRoomCharacter.find(c => c.MemberNumber == this.player2MemberNumber) ?? null;\n    }\n    /**\n     * 搜索玩家2 并返回名称(昵称(优先)或名字)\n     * @returns 玩家2的名称\n     */\n    private getPlayer2Name(): string {\n        const P2 = this.getPlayer2();\n        if (this.player2MemberNumber === null) return '未开始'\n        return P2 ? ((P2.Nickname === '' || !P2.Nickname) ? P2.Name : P2.Nickname) : '丢失';\n    }\n\n    /** 获取一个新的棋盘数据结构 */\n    public static get newCheckerboard(): Checkerboard {\n        const result = [];\n        for (let r = 1; r <= 19; r++) {\n            const _row = [];\n            for (let c = 1; c <= 19; c++) {\n                _row.push(null);\n            }\n            result.push(_row);\n        }\n        return result as Checkerboard;\n    }\n\n    /** 通过类的实例数据生成一个在页面中显示的棋盘元素 (不会添加到页面中) */\n    get Element(): HTMLDivElement {\n\n        // 容器\n        const main: HTMLDivElement = document.createElement('div');\n        main.className = 'chessContainer';\n        // 标题\n        const title: HTMLDivElement = document.createElement('div');\n        title.className = 'chessTitle';\n        title.innerHTML = `|---玩家1: ${this.player1Name} 🆚 玩家2: ${this.player2Name}---|---回合: ${this.Round}---|`;\n        main.appendChild(title);\n\n        // 棋盘\n        const checkerboard: HTMLTableElement = document.createElement('table');\n        checkerboard.className = 'chessTable';\n\n\n        let rowIndex = 0;\n        let colIndex = 0;\n        // 获取信息\n        for (const row of this.checkerboard) {\n            rowIndex++;\n            colIndex = 0;\n            // 生成一行\n            const tableRow: HTMLTableRowElement = document.createElement('tr');\n            // 通过遍历生成一行的列\n            for (const i of row) {\n                colIndex++;\n                // 棋子\n                const call: HTMLTableCellElement = document.createElement('td');\n                call.className = 'chessCell';\n\n                // 行和列的序号属性\n                call.setAttribute('row', rowIndex.toString());\n                call.setAttribute('col', colIndex.toString());\n\n                // 值\n                call.setAttribute('value', 0)\n                // 如果true则为玩家1的棋子，false则为玩家2棋子\n                if (i === true) {\n                    call.setAttribute('value', 1);\n                } else if (i === false) {\n                    call.setAttribute('value', 2);\n                }\n\n                // 点击事件\n                call.addEventListener('click', () => {\n                    this.chessCallClick(call);\n                });\n\n                // 设置棋子颜色 玩家1为白色 2为黑色\n                this.updateChessCallColor(call);\n                // 添加到行中\n                tableRow.appendChild(call);\n            }\n            // 添加到棋盘中\n            checkerboard.appendChild(tableRow);\n        }\n        main.appendChild(checkerboard);\n        return main;\n    }\n\n    /**\n     * 处理点击棋子事件\n     * @param call 代表棋子的单元格\n     * @returns void\n     */\n    chessCallClick(call: HTMLTableCellElement): void {\n        if (this.Disable) return;\n        // 获取值\n        const callValue = call.getAttribute('value');\n        // 如果当前操作者是玩家1 \n        if (this.canChange1) {\n            // 如果当前值为0则设置为1(悔棋或修改)，否则设置为0\n            if (callValue === '0') call.setAttribute('value', 1);\n            if (callValue === '1') call.setAttribute('value', 0);\n        }\n        // 如果当前操作者是玩家2\n        if (this.canChange2) {\n            // 如果当前值为0则设置为1(悔棋或修改)，否则设置为0\n            if (callValue === '0') call.setAttribute('value', 2);\n            if (callValue === '2') call.setAttribute('value', 0);\n        }\n        // 设置棋子颜色 玩家1为白色 2为黑色\n        this.updateChessCallColor(call);\n        this.changeCheckerboard(parseInt(call.getAttribute('row')!), parseInt(call.getAttribute('col')!), parseInt(call.getAttribute('value')!) as (0 | 1 | 2));\n    }\n\n    /**\n     * 根据棋子的值 更新棋子的颜色\n     * @param call 代表棋子的单元格\n     */\n    private updateChessCallColor(call: HTMLTableCellElement) {\n        switch (call.getAttribute('value')) {\n            case '0':\n                call.className = 'chessCell';\n                break;\n            case '1':\n                call.className = 'chessCell chessCellWhite';\n                break;\n            case '2':\n                call.className = 'chessCell chessCellBlack';\n                break;\n        }\n    }\n\n    /**\n     * 改变对应位置棋子的值\n     * @param rowIndex 行索引(1~19)\n     * @param colIndex 列索引(1~19)\n     * @param value 要写入的值\n     */\n    changeCheckerboard(rowIndex: number, colIndex: number, value: 0 | 1 | 2): void {\n        switch (value) {\n            case 0:\n                this.checkerboard[rowIndex - 1][colIndex - 1] = null;\n                break;\n            case 1:\n                this.checkerboard[rowIndex - 1][colIndex - 1] = true;\n                break;\n            case 2:\n                this.checkerboard[rowIndex - 1][colIndex - 1] = false;\n                break;\n        }\n    }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseModule } from \"./BaseModule\";\nimport { conDebug, GetModule, timeRange, sendChangeLog, SendLocalMessage, sendLastChangeLog } from \"utils\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { ActivityModule } from \"./MActivity\";\nimport { ChessModule, Chess } from \"./MChess\";\n\nconst timeRangeRegex: RegExp = /^(((0|1)\\d|2[0-3]):[0-5]\\d)-(((0|1)\\d|2[0-3]):[0-5]\\d)$/;\n\nexport class CommandsModule extends BaseModule {\n\n    commandsDict: { [CommandName: string]: ICommand } = {\n        help: {\n            Tag: \"help\",\n            Description: \"显示 [小酥的活动模组] 的相关命令.\",\n            Action: (_args, _msg, _parsed) => {\n                this.DisplayHelp();\n            }\n        },\n        export: {\n            Tag: \"export\",\n            Description: \"导出当前聊天室的聊天记录. 输入: ‘/xsa export -h’ 显示导出命令的使用方法.\",\n            Action: (_args, _msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params == 'h') {\n                    ChatRoomSendLocal('输入: ‘/xsa export -[时间]’导出指定时间范围内的聊天记录.\\n例如: ‘/xsa export -05:34-20:40’\\n默认导出当前聊天室的全部聊天记录.\\n注意! \\n如果时间段过长例如第一天的05:34到第二天的06:00则可能出现导出错误.', 20000)\n                } else if (params === '') {\n                    // 导出当前聊天室的全部聊天记录\n                    conDebug(\"导出当前聊天室的全部聊天记录\");\n                    GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat();\n                }\n                else if (timeRangeRegex.test(params)) {\n                    // 导出指定时间段的聊天记录 \n                    conDebug(`导出指定的 ${params} 时间段的聊天记录`);\n                    const separatorIndex = params.indexOf('-');\n\n                    if (separatorIndex !== -1) {\n                        const startTime = params.slice(0, separatorIndex).trim();\n                        const endTime = params.slice(separatorIndex + 1).trim();\n\n                        const time_limit: timeRange = {\n                            minTime: startTime,\n                            maxTime: endTime\n                        };\n                        GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat(time_limit);\n                    }\n                }\n\n            }\n        },\n        v: {\n            Tag: \"v\",\n            Description: \"显示 [小酥的活动模组] 的版本信息.\",\n            Action: (_args, _msg, _parsed) => {\n                sendChangeLog();\n            }\n        },\n        new: {\n            Tag: \"new\",\n            Description: \"显示 [小酥的活动模组] 的最新更新日志.\",\n            Action: (_args, _msg, _parsed) => {\n                sendLastChangeLog()\n            }\n        },\n        act: {\n            Tag: \"act\",\n            Description: \"显示 [小酥的活动模组] 所添加的全部动作列表.\",\n            Action: (_args, _msg, _parsed) => {\n                let content = ''\n                GetModule<ActivityModule>(\"ActivityModule\").getAllAct().forEach((item) => {\n                    content += `<p style=\"font-weight: bold; margin: 0;\">${item}</p>`\n                })\n                conDebug(`command: AL    content: ${content}`)\n\n                ChatRoomSendLocal(content, 20000)\n            }\n        },\n        jieba: {\n            Tag: \"jieba\",\n            Description: \"显示 自动结巴效果 的命令帮助.\",\n            Action: (_args, _msg, _parsed) => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                ChatRoomSendLocal(`输入: <span ${stressStyle}>\\`</span><span ${stressStyle}>空格</span><span ${weakStyle}>空格</span> 开头的话将以口吃结巴的形式发出.\\n结巴生效位置有两种方式: 如果键入两个<span ${stressStyle}>空格</span> 将会在空格位置概率产生结巴效果.\\n如果键入一个<span ${stressStyle}>空格</span>将会使用分词系统进行结巴效果.\\n该命令有一个可选参数:\\n如果以<span ${stressStyle}>\\`</span><span ${stressStyle}>[1-9]</span> 的形式作为开头，数字代表结巴程度，默认为3，越高将越口吃.\\n不带结巴程度参数的例子:\\n<span ${stressStyle}>\\`</span> [要说 的 话]\\n处理之后的效果就可能是:  「 要说...-的-的话... 」=>注意空格的位置.\\n带参数的命令方法:\\n<span ${stressStyle}>\\`</span>3 [要说 的 话]\\n此处的3就是结巴等级，代表着每处句子中的空格位置的词段都将有30%的概率发生结巴.上面的话就意味着发生了3等级的结巴效果.\\n如果有两个空格: <span ${stressStyle}>\\`</span>  [要说的话]\\n💡另外: 如果数字后跟<span ${stressStyle}>m</span>结尾，则会在结巴处根据当前兴奋程度添加呻吟效果.`)\n            }\n        },\n        // edge: {\n        //     Tag: \"edge\",\n        //     Description: \"显示 关于边缘机制的修改内容帮助.\",\n        //     Action: (_args,_msg, _parsed) => {\n        //         ChatRoomSendLocal(`模组修改了的边缘机制:\n        //         每持续45秒钟边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间.\n        //         如果失去边缘状态，将每45秒钟降低一层高潮抵抗难度，并且减少0.3~1.3秒的即将到来的高潮的持续时间-最少高潮持续时间范围4~7秒.\n        //         `)\n        //     }\n        // },\n        // orgasm: {\n        //     Tag: \"orgasm\",\n        //     Description: \"显示 关于高潮机制的修改内容帮助.\",\n        //     Action: (_args, _msg, _parsed) => {\n        //         ChatRoomSendLocal(`当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度\\n当高潮或抵抗高潮时禁用输入框.\\n现在温度计进度和高潮抵抗难度不会随着重新登陆或跨平台而丢失.`)\n        //     }\n        // },\n        kaomoji: {\n            Tag: \"kaomoji\",\n            Description: \"显示 快速颜文字 的使用说明.\",\n            Action: () => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                ChatRoomSendLocal(`输入<span ${stressStyle}>|</span>+<span ${weakStyle}>参数</span>，或点击聊天室输入栏下方的小按钮，显示颜文字面板。\n                左键点击表情: 将表情插入到输入栏的光标当前位置;\n                右键点击表情: 将表情以**星号消息的形式直接发出;\n                中键点击表情: 将表情以普通消息发出.\n                当前的参数有:\n                <span ${stressStyle}>help</span>显示所有的参数作用。\n                <span ${stressStyle}>all</span>显示全部表情包。\n                <span ${stressStyle}>hp</span>显示开心的颜文字包。\n                <span ${stressStyle}>sd</span>显示伤心的颜文字包。\n                <span ${stressStyle}>sy</span>显示害羞的颜文字包。\n                <span ${stressStyle}>ar</span>显示生气的颜文字包。\n                <span ${stressStyle}>sp</span>显示惊讶的颜文字包。\n                <span ${stressStyle}>cf</span>显示疑惑的颜文字包。\n                <span ${stressStyle}>nt</span>显示顽皮搞怪的颜文字包。\n                `)\n            }\n        },\n        // yw: {\n        //     Tag: \"yw\",\n        //     Description: \"淫纹大修说明! \",\n        //     Action: (_args, _msg, _parsed) => {\n        //         SendLocalMessage(`\n        //         1. 淫纹现在不属于Cosplay物品 换句话说,如果 勾选设置-在线-禁止其他玩家更改cosplay物品 也不会影响其他人能够更换你的淫纹，但这需要两人都装上本模组.\n        //         2. 玩家穿戴淫纹时，如果激活 心(小) 的图层 则激活本大修. 这意味着，从RP角度来说，心(小) 属于淫纹的核心.\n        //         3. 玩家的不同的淫纹可以触发不同的效果。有的效果需要多个图层同时激活才能触发。\n        //         4. 当想要某效果，但不想要对应的样式时，可以激活对应的图层但调整不透明度为0.\n        //         -------------------\n\n        //         淫纹的效果为:\n\n        //         a. 心(小) 图层激活时，将触发本大修.\n        //         b. 叶子 图层激活时，触发 【敏感】效果. 「 玩家的温度计上升速度将提高两倍，每激活一个淫纹效果，额外提高0.5倍. 」\n        //         c. 爆炸 图层激活时，触发 【粉异电流】效果. 「 每过200毫秒则有 0.15% 的概率触发一次产生剧烈快感的电流.换句话说: 时间越久概率越大，77秒后的触发概率为50%. 」\n        //         d. 开花 飞 图层激活时，触发 【迷幻】效果. 「 每过10~20分钟，将触发一次迷幻效果，持续20秒. 在触发期间，可能爆发毁灭高潮，可能随机的出现温度计上涨的情况. 触发迷幻效果时将缓慢进出房间，缓慢程度随机.」\n        //         e. 其他效果敬请期待....\n        //         -------------------\n        //         `)\n        //     }\n        // }\n        chess: {\n            Tag: \"chess\",\n            Description: \"开始一场棋局! 谁来迎战?(输入 /xsa chess -h 以查看帮助)\",\n            Action: (args, msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params === ''){\n                    GetModule<ChessModule>('ChessModule').ShowChessboard(\n                        {\n                            Player1: Player.MemberNumber ?? -1,\n                            Player2: null,\n                            Round: 0,\n                            Checkerboard: Chess.newCheckerboard,\n                            start: false,\n                            sender: Player.MemberNumber ?? -1\n                        },\n                        Player.MemberNumber ?? -1,\n                    );\n                } else if (params === 'h'){\n                    SendLocalMessage(`使用 /xsa chess 开启一场棋局， 这时其他玩家看不到棋盘。\n                    当点选一个格子，并点击发送按钮后，其他玩家将看到棋局情况。\n                    其他聊天室中任意的玩家可以点选一个格子，当任意玩家点击发送按钮后，游戏开始，这时其他不在玩家对局中的其他玩家将不能再交互第二个玩家发送的棋局。\n                    但第一个玩家发送时(发起者)的棋局，其他玩家还可以加入，换句话说，发送者可以同时与多名玩家对战。\n                    玩家可以在发送前修改自己已经落子的棋子，但不能修改对方的棋子。(可以修改自己所有的棋子，正常对局可不要作弊哦~)\n                    本插件不提供五子棋或围棋的胜负判断。\n                    围棋的吃子功能请被吃方手动从棋盘上删除。\n\n                    玩家点击发送按钮后 棋盘将在30秒后自动消失。\n                    但其他玩家仍能看到棋盘。其他玩家只能看到初始的棋局，进行中的棋局只能看到当前对局情况。\n\n                    目前仅支持同时拥有本插件时才能进行游玩和显示。\n                    `)\n                }\n                \n            }\n        }\n    }\n\n    public Load(): void {\n        CommandCombine(\n            {\n                Tag: \"xsa\",\n                Description: \"显示 [小酥的活动模组] 的相关命令.\",\n                Action: (args, msg, parsed) => {\n                    if (parsed.length > 0) this.CommandHandler(parsed);\n                    else this.DisplayHelp();\n                }\n            }\n        )\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 20;\n    }\n\n\n    private getCommandParameters(parsed: string[]): string {\n        // if (parsed.length === 0) {\n        //     return '';\n        // }\n        const lastParam = parsed[parsed.length - 1];\n        if (lastParam.startsWith(\"-\")) {\n            return lastParam.slice(1);\n        }\n        return '';\n    }\n\n    private DisplayHelp(msg: string | undefined = undefined): void {\n        if (msg === undefined) {\n            let content: string = ``;\n            for (const c in this.commandsDict) {\n                content += `/xsa ${c} ${this.commandsDict[c].Description}\\n`;\n            }\n            content += `小酥的活动模组 版本号: ${XSActivity_VERSION}\\n`\n            ChatRoomSendLocal(content, 10000);\n        } else {\n            ChatRoomSendLocal(msg, 10000)\n        }\n    }\n\n    private CommandHandler(parsed: Array<string>): void {\n        const parsedCount: number = parsed.length;\n        if (parsedCount == 0) this.DisplayHelp();\n        if (parsedCount >= 1) {\n            const last = parsed[parsedCount - 1];\n            if (last.startsWith(\"-\")) {\n                const cmd: string = parsed[parsedCount - 2];\n                if (cmd in this.commandsDict) {\n                    this.commandsDict[cmd]?.Action?.('', '', parsed);\n                }\n            } else {\n                if (last in this.commandsDict) {\n                    this.commandsDict[last]?.Action?.('', '', parsed);\n                }\n            }\n        }\n    }\n}","import { hookFunction, sendLastChangeLog } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\nimport { CSShref } from \"utils\";\n\n\nexport const PlayerStorage = () => Player.XSA;\nexport const PlayerOnlineSharedSettingsStorage = () => Player.OnlineSharedSettings?.XSA;\nexport const ExtensionStorage = () => Player.ExtensionSettings.XSA as string;\nconst XSA_OnlineSharedSettingsDataKeyList = ['wombTattoosAppliedEffects', 'sensitiveLevel'];\nexport class DataModule extends BaseModule {\n\n    // 获取用户代理字符串\n    static userAgentString = navigator.userAgent;\n    // 创建正则表达式，匹配常见的浏览器版本信息\n    static browserVersionRegex = /(chrome|firefox|safari|opera|edge|msie|trident(?=\\/))\\/?\\s*(\\d+)/i;\n    // 使用正则表达式匹配浏览器版本信息\n    static match = this.userAgentString.match(this.browserVersionRegex);\n\n    static DefaultData: XSA_Data = {\n        haveWombTattoos: false,\n        wombTattoosAppliedEffects: [],\n        sensitiveLevel: 0,\n        resistCount: 0,\n        player_Progress: 0\n    }\n    static DefaultSetting: XSA_SettingsData = {\n\n    }\n    static DefaultOnlineSharedSettingsData: XSA_OnlineSharedSettingsData = {\n        wombTattoosAppliedEffects: [],\n        sensitiveLevel: 0\n    }\n    /**\n     * 浏览器名称\n     */\n    static browserName = this.match ? this.match[1] : 'unknown';\n    /**\n     * 浏览器版本\n     */\n    static browserVersion = this.match ? parseInt(this.match[2]) : -1;\n\n    static IsModUpDate: boolean = false;\n\n    public Load(): void {\n        DataModule.allDataTake();\n        this.hookListHandle();\n        DataModule.SyncDataForPlayer();\n\n        setTimeout(() => {\n            ActivityChatRoomArousalSync(Player);\n        }, 1000);\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 99;\n\n        window.BROWSER_NAME = DataModule.browserName;\n        window.BROWSER_VERSION = DataModule.browserVersion;\n\n        const linkElement = document.createElement(\"link\");\n        linkElement.rel = \"stylesheet\";\n        linkElement.type = \"text/css\";\n        linkElement.href = CSShref;\n\n        // 将 link 元素插入到 head 标签中\n        document.head.appendChild(linkElement);\n\n    }\n\n    private hookListHandle(): void {\n        hookFunction('ChatRoomLeave', this.priority, (args, next) => {\n            DataModule.allDataSave();\n            return next(args);\n        });\n        hookFunction('ChatRoomSync', this.priority, (args, next) => {\n            DataModule.allDataSave();\n            if (DataModule.IsModUpDate) {\n                setTimeout(() => {\n                    sendLastChangeLog();\n                }, 2000);\n                DataModule.IsModUpDate = false;\n            }\n            return next(args);\n        });\n    }\n\n    /**\n     * 从ExtensionStorage获取mod数据\n     */\n    public static allDataTake() {\n        // 处理XSASettingAndData的获取 从ExtensionStorage获取数据\n        if (ExtensionStorage()) {\n            // 处理XSASettingAndData的获取 从ExtensionStorage获取数据\n            Player.XSA = JSON.parse(LZString.decompressFromBase64(ExtensionStorage()) ?? '') as XSASettingAndData\n            // 如果没有获取到数据则读取默认数据\n            const afterVersion = Player.XSA.version;\n            if (afterVersion !== XSActivity_VERSION) {\n                this.IsModUpDate = true;\n                Player.XSA.version = XSActivity_VERSION;\n            }\n            for (const k2 in Player.XSA.data) {\n                if (Player.XSA.data[k2] === undefined) {\n                    Player.XSA.data[k2] = this.DefaultData[k2]\n                }\n            }\n            for (const k3 in Player.XSA.settings) {\n                if (Player.XSA.settings[k3] === undefined) {\n                    Player.XSA.settings[k3] = this.DefaultSetting[k3]\n                }\n            }\n        } else {\n            // 如果没有定义ExtensionStorage 则读取默认数据\n            Player.XSA = {\n                version: XSActivity_VERSION,\n                data: this.DefaultData,\n                settings: this.DefaultSetting\n            }\n            this.IsModUpDate = true;\n        }\n\n        // 将获取到的数据输出到PlayerOnlineSharedSettingsStorage\n        if (PlayerOnlineSharedSettingsStorage()) {\n            Player.OnlineSharedSettings!.XSA = {\n                // 需要手动处理每一条需要的 PlayerOnlineSharedSettings 后续如果有使用额外的数据需要手动添加\n                wombTattoosAppliedEffects: Player.XSA.data.wombTattoosAppliedEffects ?? [],\n                sensitiveLevel: Player.XSA.data.sensitiveLevel ?? 0\n            }\n        } else {\n            Player.OnlineSharedSettings!.XSA = this.DefaultOnlineSharedSettingsData\n        }\n    }\n\n    /**\n     * 储存设置到ExtensionStorage\n     */\n    public static allDataSave() {\n        if (!ExtensionStorage()) {\n            Player.ExtensionSettings.XSA = ''\n        }\n        const data: XSASettingAndData = {\n            version: PlayerStorage()?.version ?? XSActivity_VERSION,\n            settings: PlayerStorage()?.settings ?? <XSA_SettingsData>{},\n            data: PlayerStorage()?.data ?? <XSA_Data>{},\n        }\n        Player.ExtensionSettings.XSA = LZString.compressToBase64(JSON.stringify(data));\n        ServerPlayerExtensionSettingsSync('XSA');\n    }\n\n    /**\n     * 保存设置到PlayerStorage\n     * @param settingKey 要保存的设置 key\n     * @param settingValue 要保存的值\n     */\n    public static SaveSettings(settingsItem: { [settingKey: string]: any }): void {\n        const settingsData = PlayerStorage()?.settings;\n        for (const item in settingsItem) {\n            if (settingsData && settingsData[item] != settingsItem[item]) {\n                settingsData[item] = settingsItem[item];\n            }\n        }\n    }\n    public static SaveData(dataItem: { [dataKey: string]: any }): void {\n        const data = PlayerStorage()?.data;\n        const OnlineSharedSettings = PlayerOnlineSharedSettingsStorage();\n        for (const itemKey in dataItem) {\n            if (data && data[itemKey] != dataItem[itemKey]) {\n                data[itemKey] = dataItem[itemKey];\n            }\n            if (OnlineSharedSettings && XSA_OnlineSharedSettingsDataKeyList.includes(itemKey)) {\n                OnlineSharedSettings[itemKey as keyof XSA_OnlineSharedSettingsData] = dataItem[itemKey];\n            }\n        }\n    }\n    /**\n     * 将PlayerStorage中的数据同步到Player 在模块加载时 takeData后调用\n     * @see Load\n     * @returns 无\n     */\n    public static SyncDataForPlayer() {\n        const data = PlayerStorage()?.data;\n        if (!data) return;\n        if (Player.ArousalSettings && Player.ArousalSettings.Progress && data.player_Progress) {\n            Player.ArousalSettings.Progress = data.player_Progress;\n        }\n        ActivityOrgasmGameResistCount = data.resistCount ?? 0\n    }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseModule } from \"./BaseModule\";\nimport { conDebug, GetModule, timeRange, sendChangeLog, MSGType, hookFunction } from \"utils\";\n\n\nexport class DrawModule extends BaseModule {\n\n    public Load(): void {\n\n        // 绘制闪光的hook\n        hookFunction(\"DrawProcessScreenFlash\", -999, (args, next) => {\n            DrawModule.DrawFlash();\n            return next(args);\n        });\n\n        // 绘制模糊效果的hook\n        hookFunction('Player.GetBlurLevel', -999, (args, next) => {\n            let blurLevel = next(args);\n            if (!CommonPhotoMode && blurLevel === 0 && DrawModule.blurLevel !== 0) {\n                blurLevel = DrawModule.blurLevel;\n            }\n            return blurLevel;\n        });\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 20;\n    }\n\n    /** 模糊等级 */\n    public static blurLevel: number = 0;\n\n    /** 绘制闪光事件map */\n    public static DrawFlashEventMap: Map<symbol, { color: string, time: number, intensity: number, evenEnd: boolean, callback?: () => void }>\n        = new Map<symbol, { color: string, time: number, intensity: number, evenEnd: boolean, callback?: () => void }>();\n\n    /**\n     * 设置一个闪光事件\n     * @param color 闪光颜色\n     * @param time 闪光时间\n     * @param intensity 闪光强度\n     * @param callback 闪光结束后的回调函数\n     */\n    public static setFlash(color: string, time: number, intensity: number, callback?: () => void): void {\n        this.DrawFlashEventMap.set(Symbol(), { color: color, time: time, intensity: intensity, evenEnd: false, callback: callback });\n    }\n\n    /** 当前正在处理的闪光事件的结束时间 */\n    public static FlashEndTime: number | null = null;\n\n\n    /**\n     * 绘制闪光效果\n     */\n    private static DrawFlash(): void {\n        // 如果当前屏幕不是聊天室且没有触发的闪光事件，则直接返回\n        if (CurrentScreen !== 'ChatRoom' && this.DrawFlashEventMap.size === 0) return;\n\n        // 遍历所有触发的闪光事件\n        for (const [key, event] of this.DrawFlashEventMap.entries()) {\n            // 如果事件触发已完成，则删除该事件并继续处理下一个事件\n            if (event.evenEnd) {\n                this.DrawFlashEventMap.delete(key);\n                continue;\n            }\n            // 获取当前时间\n            const commonTime = CommonTime();\n            // 闪光结束时间 如果存在则不变 如果不存在则初始化为当前时间加上闪光时间\n            this.FlashEndTime = this.FlashEndTime ?? event.time + commonTime;\n            // 如果闪光结束时间晚于当前时间\n            if (this.FlashEndTime > commonTime) {\n                // 计算闪光的透明度\n                const FlashAlpha = this.DrawGetFlashAlpha(this.FlashEndTime - commonTime, event.intensity);\n                // 绘制矩形\n                DrawRect(0, 0, 2000, 1000, event.color + FlashAlpha);\n                // 跳出循环进入调用本函数的下一个大循环\n                break;\n            } else {\n                // 标记事件触发完成\n                event.evenEnd = true;\n                // 清空闪光结束时间 以备下个事件使用\n                this.FlashEndTime = null;\n                // 调用回调函数\n                event.callback?.();\n                continue;\n            }\n        }\n    }\n\n    /**\n     * 设置当前屏幕模糊并持续一段时间\n     * @param duration 持续时间\n     * @param level 模糊等级\n     */\n    public static setDrawBlur(duration: number, level: number) {\n        this.blurLevel = level;\n        setTimeout(() => {\n            this.blurLevel = 0;\n        }, duration);\n    }\n\n    /**\n     * Gets the alpha of a screen flash. append to a color like \"#111111\" + DrawGetScreenFlash(FlashTime)\n     * @param  flashTime - Time remaining as part of the screen flash\n     * @param flashIntensity - Intensity of the screen flash\n     * @returns - alpha of screen flash\n     */\n    private static DrawGetFlashAlpha(flashTime: number, flashIntensity: number) {\n        let alpha = Math.max(0, Math.min(255, Math.floor(flashIntensity * (1 - Math.exp(-flashTime / 2500))))).toString(16);\n        if (alpha.length < 2) alpha = \"0\" + alpha;\n        return alpha;\n    }\n\n\n    /**\n     * Calculates dynamic intensity based on elapsed time.\n     * This example simulates a flickering effect.\n     * @param elapsedTime - The time elapsed since the flash started, in milliseconds.\n     * @param baseIntensity - The base intensity of the flash.\n     * @param totalDuration - The total duration of the flash.\n     * @returns - Adjusted intensity.\n     */\n    private static calculateDynamicIntensity(elapsedTime: number, baseIntensity: number, totalDuration: number): number {\n        // Oscillation period (in milliseconds)\n        const period = 500;\n        // Calculate phase of the sine wave\n        const phase = (2 * Math.PI * elapsedTime) / period;\n        // Oscillate intensity around the baseIntensity value\n        return baseIntensity + baseIntensity * 0.1 * Math.sin(phase);\n    }\n\n}\n\n\n","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction } from \"utils\";\n\n/**\n * 进程注入集合\n */\ninterface IProcessInjectionSetOBJ {\n    [key: string]: IInjectionCode\n}\n/**\n * 注入进程对象\n */\nexport interface IInjectionCode {\n    name: string,\n    priority: number,\n    preconditions: () => boolean,\n    timeInterval: number | (() => number),\n    code: () => void\n}\n\nexport class TimerProcessInjector extends BaseModule {\n\n    /** 注入进程的顺序队列 */\n    private static processInjectionSequence: IInjectionCode[] = [];\n    /** 注入进程集合 */\n    private static processInjectionSet: IProcessInjectionSetOBJ = {};\n    /** 注入进程集合 需要在Init函数的末尾注入 */\n    public static set setProcessInjectionSequence(sequence: IInjectionCode[]) {\n        for (const c of sequence) {\n            this.processInjectionSet[c.name] = c;\n        }\n    }\n\n    public Load(): void {\n        TimerProcessInjector.ProcessInjection();\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 999;\n    }\n\n    /** 记录上次调用时间 & 时间间隔 的集合 */\n    private static TimerLastCycleCallSet: { [name: string]: { timerLastCycleCall: number, timeInterval: number, isDynamic: boolean, getTimeInterval?: () => number } } = {};\n\n    /**\n     * 时序进程注入\n     */\n    private static ProcessInjection(): void {\n        // 根据优先级排序 从小到大 priority越大越靠后\n        this.InjectionSort();\n\n        // 设置计时器Set\n        for (const c of this.processInjectionSequence) {\n            if (typeof c.timeInterval == 'number') {\n                this.TimerLastCycleCallSet[c.name] = {\n                    timerLastCycleCall: -1,\n                    timeInterval: c.timeInterval,\n                    isDynamic: false\n                }\n            } else {\n                this.TimerLastCycleCallSet[c.name] = {\n                    timerLastCycleCall: -1,\n                    timeInterval: c.timeInterval(),\n                    isDynamic: true,\n                    getTimeInterval: c.timeInterval\n                }\n            }\n\n        }\n\n        conDebug(`[TimerProcessInjector] Injection Process... Injection Count: ${this.processInjectionSequence.length}`);\n        // 注入TimerProcess\n        hookFunction(\"TimerProcess\", 100, (args, next) => {\n            // 如果不是聊天室界面 则跳过\n            if (CurrentScreen !== 'ChatRoom') return next(args)\n\n            const currentTime = CommonTime();\n            for (const c of this.processInjectionSequence) {\n\n                // 初始化计时器\n                if (this.TimerLastCycleCallSet[c.name].timerLastCycleCall == -1) this.TimerLastCycleCallSet[c.name].timerLastCycleCall == currentTime;\n\n                // 判定前置条件 && 时间间隔已到\n                if (c.preconditions() && this.TimerLastCycleCallSet[c.name].timerLastCycleCall + this.TimerLastCycleCallSet[c.name].timeInterval <= currentTime) {\n                    c.code();\n                    this.TimerLastCycleCallSet[c.name].timerLastCycleCall = currentTime;\n                    if (this.TimerLastCycleCallSet[c.name].isDynamic) {\n                        this.TimerLastCycleCallSet[c.name].timeInterval = this.TimerLastCycleCallSet[c.name].getTimeInterval!();\n                    }\n                }\n\n                //conDebug(`[TimerProcessInjector] ${c.name} is Done.`);\n            }\n\n            return next(args);\n        });\n\n\n    }\n\n    /**\n     * 注入排序\n     */\n    private static InjectionSort(): void {\n        this.processInjectionSequence = Object.values(this.processInjectionSet)\n            .sort((a, b) => a.priority - b.priority);\n    }\n\n\n}","import { conDebug } from \"utils\";\nimport { BaseModule, FullModCount } from \"./BaseModule\";\nimport { ActivityModule } from \"./MActivity\";\n// import { ArousalModule } from \"./MArousal\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { CommandsModule } from \"./MCommand\";\nimport { DataModule } from \"./MData\";\nimport { DrawModule } from \"./MDrawModule\";\nimport { TimerProcessInjector } from \"./MTimerProcessInjector\";\nimport { ChessModule } from \"./MChess\";\n// import { WombTattoosModule } from \"./MWombTattoos\";\nimport { MODULES } from \"./ModulesDict\";\n\nexport class ModuleLoader {\n    public static modules: { [key: string]: BaseModule } = MODULES;\n    static mList: [BaseModule] | undefined;\n    public static modulesLoadCount: number = 0;\n    public static modulesInitCount: number = 0;\n    public static CompleteLoadingSuccessful: boolean = false;\n\n    /**\n     * 初始化模块 对外初始化入口\n     */\n    public static InitModules(): number {\n        this.generateModule();\n\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .sort((a, b) => a.priority - b.priority)\n                .forEach((m) => {\n                    // 初始化模块\n                    m.Init();\n                    conDebug(`模块 ${m.moduleName} 尝试初始化完成`);\n                    this.modulesInitCount++;\n                });\n        }\n\n        return this.modulesInitCount;\n    }\n\n    /**\n     * 加载模块   Loader对外加载入口.\n     */\n    public static LoadModules(): number {\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .forEach((m) => {\n                    // 加载模块\n                    m.Load();\n                    conDebug(`模块 ${m.moduleName} 已尝试加载`);\n                    this.modulesLoadCount++;\n                });\n        }\n\n        if (this.CheckModulesLoaded()) {\n            this.CompleteLoadingSuccessful = true;\n            window.XSActivity_Loaded = true;\n        } else {\n            this.CompleteLoadingSuccessful = false;\n            window.XSActivity_Loaded = false;\n        }\n        return this.modulesLoadCount;\n    }\n\n\n    public static CheckModulesLoaded(): boolean {\n        if (this.modulesLoadCount != FullModCount || this.modulesInitCount != this.modulesLoadCount) {\n            conDebug(`模块加载失败，模块数量不匹配，初始化数量为${this.modulesInitCount}模块加载数量为${this.modulesLoadCount}，应为${FullModCount}`);\n            return false;\n        }\n        if (ModuleLoader.mList === undefined) {\n            conDebug(`模块加载失败，模块列表未初始化`);\n            return false;\n        }\n        for (const m of ModuleLoader.mList) {\n            if (!m.Loaded) {\n                conDebug(`模块加载失败，模块 ${m.moduleName} 未加载完成`);\n                return false;\n            }\n        }\n        conDebug(`模块加载完成`);\n        return true;\n    }// 该方法在加载模块完成之后调用，确保mList中的所有模块都已加载。\n\n    /**\n     * 将模块添加到模块数组中\n     * @param module 要添加的模块对象\n     */\n    private static pushToModules(module: BaseModule): void {\n        this.modules[module.moduleName] = module;\n\n        if (typeof this.mList !== \"undefined\") {\n            this.mList.push(module);\n        } else {\n            this.mList = [module];\n        }\n    }\n\n    public static ModuleMap: { [mName in XS_ModuleName]: () => void } = {\n        Base: () => {\n            throw new Error(\"Base为模块的抽象类，请勿加载\");\n        },\n        TimerProcessInjector: () => {\n            this.pushToModules(new TimerProcessInjector('TimerProcessInjector'));\n        },\n        ActivityModule: () => {\n            this.pushToModules(new ActivityModule('ActivityModule'));\n        },\n        ChatroomModule: () => {\n            this.pushToModules(new ChatroomModule('ChatroomModule'));\n        },\n        CommandsModule: () => {\n            this.pushToModules(new CommandsModule('CommandsModule'));\n        },\n        DataModule: () => {\n            this.pushToModules(new DataModule('DataModule'));\n        },\n        DrawModule: () => {\n            this.pushToModules(new DrawModule('DrawModule'));\n        },\n        ChessModule: () => {\n            this.pushToModules(new ChessModule('ChessModule'));\n        },\n        // ArousalModule: () => {\n        //     this.pushToModules(new ArousalModule());\n        // },\n        // WombTattoosModule: () => {\n        //     this.pushToModules(new WombTattoosModule());\n        // }\n    }\n\n\n    private static generateModule(): number {\n        let generateModuleCount: number = 0;\n        for (const mN in ModuleLoader.ModuleMap) {\n            if (mN !== \"Base\" && this.modules[mN] === undefined) {\n                ModuleLoader.ModuleMap[mN as XS_ModuleName]();\n                generateModuleCount++;\n            }\n        }\n\n        return generateModuleCount;\n    }\n\n}","import { conDebug, hookFunction, MSGType } from \"./utils\";\nimport { ModuleLoader } from \"Modules/ModuleLoader\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: MSGType.Workflow_Log,\n        content: \"Init wait\"\n    });\n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        // 修改WombTattoos为非cosplay物品\n        hookFunction('LoginResponse', 999, (args, next) => {\n            const response = args[0];\n            if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n                for (const group of AssetFemale3DCG as AssetGroupDefinition.Appearance[]) {\n                    if (group.Group === 'ClothAccessory') {\n                        for (const item of group.Asset as AssetDefinition.Appearance[]) {\n                            if (item.Name === \"WombTattoos\") {\n                                item.BodyCosplay = false;\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n            return next(args);\n        });\n        // 加载模组\n        hookFunction('LoginResponse', 10, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: MSGType.Workflow_Log\n            });\n            const response = args[0];\n            if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string' || !ModuleLoader.CompleteLoadingSuccessful) {\n                init();\n            }\n            return result;\n        });\n    }\n}\n\nexport function init() {\n    if (window.XSActivity_Loaded)\n        return;\n\n    const InitModuleCount = ModuleLoader.InitModules();\n\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Initialized!\",\n        content: `Init ${InitModuleCount} modules `\n    });\n\n    const moduleCount = ModuleLoader.LoadModules();\n\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Loaded!\",\n        content: `Loaded ${moduleCount} modules    FullLoaded: ${ModuleLoader.CompleteLoadingSuccessful}`\n    });\n\n    if (!ModuleLoader.CompleteLoadingSuccessful) {\n        throw new Error(\"XSActivity load or init failed\");\n    }\n}\n\n\n\ninitWait();\n"],"names":["e","o","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","d","warn","s","p","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","c","precomputed","window","split","slice","join","encode","padStart","toUpperCase","l","originalHash","Object","assign","router","context","contextProperty","keys","f","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","allowReplace","repository","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","startsWith","_shim10register","defineProperty","exports","value","MODULES","ChangeType","CHANGELOG","description","type","dev","changes","main","CSShref","DEBUG","bcModSDK","bcModSDKRef","XSActivity_VERSION","target","MSGType","conDebug","msg","color","style","result","DebugLog","content","time","Date","toLocaleString","ModVersion","debug","GetModule","moduleName","copyAndDownloadHtmlElement","element","fileName","time_limit","newDoc","document","implementation","createHTMLDocument","copiedElement","cloneNode","querySelectorAll","forEach","dataTimeValue","getAttribute","currentTime","minTimeDate","minTime","maxTimeDate","maxTime","setDate","getDate","remove","removeElementsByTimeRange","removeProperty","clearElementStyle","fontSize","fontFamily","display","flexDirection","width","body","alignItems","justifyContent","backgroundColor","appendChild","htmlString","documentElement","outerHTML","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","sendLastChangeLog","styleForP","ChatRoomSendLocal","BaseModule","constructor","Loaded","selfPlaceholder","ActivityModule","groupNameDict","ItemAddon","ItemArms","ItemBoots","ItemBreast","ItemButt","ItemDevices","ItemEars","ItemFeet","ItemHandheld","ItemHands","ItemHead","ItemHood","ItemLegs","ItemMisc","ItemMouth","ItemMouth2","ItemMouth3","ItemNeck","ItemNeckAccessories","ItemNeckRestraints","ItemNipples","ItemNipplesPiercings","ItemNose","ItemPelvis","ItemTorso","ItemTorso2","ItemVulva","ItemVulvaPiercings","bodyNamePlaceholder","activityToAddDict","act","Name","Target","TargetSelf","MaxProgress","MaxProgressSelf","Prerequisite","desc","descString","img","StimulationAction","isBase","prerequisiteDict","ItemHoodCovered","Action","args","acting","Judgment","TargetItemHoodCovered","acted","ItemNoseCovered","Kneeling","NotKneeling","CanLook","InventoryPrerequisiteMessage","InventoryGet","IsKneeling","IsBlind","Init","Load","LoadActivity","hookListHandler","next","Type","data","Dictionary","ActivityName","substitutions","ChatRoomMessageRunExtractors","Player","ActivityDictionaryText","Content","CommonStringSubstitute","Tag","Text","prereq","source","parts","aName","replace","resultName","actName","SourceCharacter","TargetCharacter","Number","isNaN","MemberNumber","ArousalSettings","OrgasmStage","ActivityOrgasmGameResistCount","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","find","targetCharacterObj","undefined","sourceCharacterNickname","CharacterNickname","targetCharacterNickname","resultDict","Workflow_Log","Sender","ServerSend","SendActivity","ActivityOrgasmStop","ActivityOrgasmPrepare","actLength","aN","pushToActivity","activityDictAdd","activityDesc","ActivityDictionary","pendingActivity","nameWithoutPrefix","substring","actTarget","actTargetSelf","addedValues","aT","aTS","activity","ActivityFemale3DCG","ActivityFemale3DCGOrdering","getAllAct","suffix","ChatroomModule","moan","InputElement","getElementById","buildKaomojiButton","ResizeKaomojiButton","removeKaomojiMenu","showKaomojiMenu","hideKaomojiMenu","match","stammerHandler","parseInt","kaomojiMatch","kaomojiSet","kaomojiHandler","ExportChat","exportName","ChatRoomData","tenfoldStammeringProbability","isSegmentForCH","haveMoan","stammeringProbability","segmentList","str","Intl","Segmenter","TranslationLanguage","toLowerCase","segmenterResult","granularity","segment","results","segmentForCH","stringArray","stammerForList","messageList","currentWord","Math","random","addStammerEffect","Progress","floor","word","depth","message","getKaomojiMenu","KaomojiShouldShow","KaomojiButton","button","id","className","addEventListener","KaomojiMenuObject","menu","isKaomojiMenuCloseEventListenerAdded","event","closest","innerHTML","top","innerHeight","left","key","kaomojiContainer","container","buildKaomojiMenu","selectKaomojiTitle","kaomojiClick","kaomojiElement","cursorPosition","selectionStart","textContent","newValue","newCursorPosition","setSelectionRange","SendChat","menuTitle","menuTitleTextSet","menuTitleClose","selectKey","getKaomojiSelectKey","title","selectMenuTitleStyleHandle","classList","contains","key2","getKaomojiKey","kaomojiList","getAllKaomoji","kaomoji","innerText","preventDefault","allKaomojiList","help","hp","sd","sy","ar","sp","cf","nt","ChessModule","CheckerInfo","sender","ShowChessboard","getChessDivKey","p1","p2","combinedString","hash","charCodeAt","SendAChess","Player1","Player2","Round","checkerboard","Chess","newCheckerboard","started","Checkerboard","start","info","chess","LoadInfo","div","chessKey","player1MemberNumber","player2MemberNumber","ChessDivMap","setAttribute","ChatRoomCurrentTime","Element","sendButton","Disable","setTimeout","ChatRoomAppendChat","player1Name","getPlayer1Name","canChange1","player2Name","canChange2","getPlayer2Name","getPlayer1","P1","Nickname","getPlayer2","P2","_row","rowIndex","colIndex","row","tableRow","chessCallClick","updateChessCallColor","callValue","changeCheckerboard","timeRangeRegex","CommandsModule","commandsDict","Description","_args","_msg","_parsed","DisplayHelp","export","parsed","params","getCommandParameters","test","separatorIndex","trim","v","changesString","sendChangeLog","new","item","jieba","stressStyle","timeout","SendLocalMessage","CommandCombine","CommandHandler","lastParam","parsedCount","last","cmd","PlayerStorage","XSA","PlayerOnlineSharedSettingsStorage","OnlineSharedSettings","ExtensionStorage","ExtensionSettings","XSA_OnlineSharedSettingsDataKeyList","DataModule","_a","allDataTake","hookListHandle","SyncDataForPlayer","ActivityChatRoomArousalSync","BROWSER_NAME","browserName","BROWSER_VERSION","browserVersion","linkElement","rel","head","allDataSave","IsModUpDate","JSON","parse","LZString","decompressFromBase64","k2","DefaultData","k3","settings","DefaultSetting","wombTattoosAppliedEffects","sensitiveLevel","DefaultOnlineSharedSettingsData","compressToBase64","stringify","ServerPlayerExtensionSettingsSync","SaveSettings","settingsItem","settingsData","SaveData","dataItem","itemKey","player_Progress","resistCount","userAgentString","navigator","userAgent","browserVersionRegex","haveWombTattoos","DrawModule","DrawFlash","blurLevel","CommonPhotoMode","setFlash","intensity","callback","DrawFlashEventMap","Symbol","evenEnd","CurrentScreen","commonTime","CommonTime","FlashEndTime","FlashAlpha","DrawGetFlashAlpha","DrawRect","setDrawBlur","duration","level","flashTime","flashIntensity","alpha","max","min","exp","calculateDynamicIntensity","elapsedTime","baseIntensity","totalDuration","phase","PI","sin","TimerProcessInjector","setProcessInjectionSequence","sequence","processInjectionSet","ProcessInjection","InjectionSort","processInjectionSequence","timeInterval","TimerLastCycleCallSet","timerLastCycleCall","isDynamic","getTimeInterval","preconditions","code","b","ModuleLoader","InitModules","generateModule","mList","modulesInitCount","LoadModules","modulesLoadCount","CheckModulesLoaded","CompleteLoadingSuccessful","XSActivity_Loaded","pushToModules","module","modules","generateModuleCount","mN","ModuleMap","init","InitModuleCount","moduleCount","Base","response","AccountName","group","AssetFemale3DCG","Group","Asset","BodyCosplay"],"mappings":"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","x_google_ignoreList":[0]}