var XiaoSuActivity=function(exports){"use strict";const XSActivity_VERSION="v0.3.0",DEBUG=!0;function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var bcmodsdk={};!function(exports){!function(){const e="1.1.0";function o(e){alert("Mod ERROR:\n"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\nPattern:\n${o}\nPatch1:\n${t.get(o)||""}\nPatch2:\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll("\r\n","\n");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(".");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(".")} is not object`);const d=o[a[a.length-1]];if("function"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,"0").toUpperCase()}(d.toString().replaceAll("\r\n","\n")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){"string"==typeof e&&"string"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&"object"==typeof e||o("Failed to register mod: Expected info object, got "+typeof e),"string"==typeof e.name&&e.name||o("Failed to register mod: Expected name to be non-empty string, got "+typeof e.name);let i=`'${e.name}'`;"string"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,"string"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&"string"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&"object"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\nWas the mod loaded multiple times?`),u(d));const s=e=>{"string"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);"number"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),"function"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))"string"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),"string"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>("string"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o("Failed to init Mod SDK: Name already in use"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith("1.0.")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&"object"==typeof o&&"string"==typeof o.name&&"string"==typeof o.version?e.registerMod(o.name,o.version,"object"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=y}()}(bcmodsdk);var bcModSDKRef=getDefaultExportFromCjs(bcmodsdk);const MODULES={};var ChangeType;window.MODULES=MODULES,function(ChangeType){ChangeType[ChangeType.main=0]="main",ChangeType[ChangeType.dev=1]="dev"}(ChangeType||(ChangeType={}));const CHANGELOG=[{version:"0.0.1",description:"Initial release",type:ChangeType.dev,changes:["完成基本框架测试中..."]},{version:"0.0.2",description:"修复",type:ChangeType.dev,changes:["修复若干bug","添加部分动作"]},{version:"0.0.3",description:"修复",type:ChangeType.dev,changes:["修复若干bug","完善框架"]},{version:"0.0.4",description:"终于修复了重复加载的Bug",type:ChangeType.dev,changes:["修复重复加载的BUG!!!!!! O.o","修复若干其他bug","完善框架"]},{version:"0.0.5",description:"优化",type:ChangeType.dev,changes:["优化版本信息显示效果"]},{version:"0.1.0",description:"正式发布!当前功能如下: ",type:ChangeType.main,changes:["使用命令导出当前聊天室聊天记录 支持按时间范围导出 详细请查看 /xsa ","添加9个额外动作."]},{version:"0.1.1",description:"添加了新的动作.",type:ChangeType.main,changes:["添加了额外的17个动作","添加 /xsa act 命令 显示添加的全部动作","完成功能自动口吃处理命令:(` + message) --请输入 /xsa jieba 查看帮助"]},{version:"0.1.2",description:"添加修改边缘逻辑.",type:ChangeType.main,changes:["修复一些bug","修复了若干错别字","修改边缘影响，现在每45秒钟 边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间，如果失去边缘状态，则同样的时间后失去一层抵抗难度，并且减少0.3~1.3秒高潮持续时间."]},{version:"0.1.3",description:"添加修改边缘逻辑以及高潮效果.添加打断抵抗高潮的瘙痒动作.",type:ChangeType.main,changes:["当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度","当高潮或抵抗高潮时禁用输入框."," ` 命令修改，现在可以在 ` 后或者 数字后跟一个字母 m ，这将在结巴位置添加呻吟效果."]},{version:"0.1.4",description:"添加颜文字快速发送功能!",type:ChangeType.main,changes:["添加快速发送颜文字的功能，以下为简单介绍，详细介绍请输入:/xsa kaomoji 查看。\n使用=> |+[参数]  打开颜文字选择面板，| 为回车上面的按键，需要用 Shift+\\ 键打出 请输入 |help 查看全部参数","调整忍耐高潮时每1.5秒有30%概率发送忍耐反应","高潮后的高潮抵抗难度只降低一半而非原来的降低为0.","重构注入到动作循环的逻辑","重构模组的初始化与加载逻辑"]},{version:"0.1.5",description:"颜文字发送功能大修!",type:ChangeType.main,changes:["颜文字表情功能大修! 新版使用方法请输入/xsa kaomoji 查看!"]},{version:"0.2.0",description:"淫纹大修!  待续!",type:ChangeType.main,changes:["淫纹大修! 输入 /xsa yw 查看功能.","高潮抵抗难度和温度计进度现在可以跨平台继承 换句话说 掉线也不会丢失相关数据","取消了原来的边缘计数，现在边缘等级和抵抗难度使用同一变量"]},{version:"0.3.0",description:"添加了新的动作(移植了部分浮绘的Sub动作)，但暂时移除了关于边缘和高潮机制的修改!",type:ChangeType.main,changes:["将浮绘的Sub动作模组的部分(大量!)动作移植过来，感谢浮绘的授权! 原动作Mod:[https://github.com/FuhuiNeko/BC_Mods]","暂时移除了边缘高潮机制的修改.","暂时移除了淫纹功能的大修","除了动作部分，功能将渐渐移植到新Mod","新Mod链接: [https://github.com/iceriny/XiaosuBCExpansion]","等新Mod功能完善将会在此Mod更新中提示!","新Mod的当前版本已完成: 高潮机制修改(本Mod移植)、边缘机制修改(本Mod移植)、\n高潮余韵系统(暂无介绍，请自行探索 将来的版本将完善介绍，以及淫纹大修将依赖于此功能)"]}],CSShref=DEBUG?"https://iceriny.github.io/XiaoSuActivity/dev/XSActivityStyle.css":"https://iceriny.github.io/XiaoSuActivity/main/XSActivityStyle.css",bcModSDK=bcModSDKRef.registerMod({name:"XiaoSuActivity",fullName:"XiaoSu's Activity Expand",version:XSActivity_VERSION.startsWith("v")?XSActivity_VERSION.slice(1):XSActivity_VERSION,repository:"https://github.com/iceriny/XiaoSuActivity"});function hookFunction(target,priority,hook){return bcModSDK.hookFunction(target,priority,hook)}var MSGType;function conDebug(msg,color=null,style=null){if(!1===DEBUG)return;const result="string"==typeof msg?{name:"XiaoSuActivity_Debug",type:MSGType.DebugLog,content:msg,time:(new Date).toLocaleString(),ModVersion:XSActivity_VERSION}:{name:msg.name,type:msg.type,content:msg.content,time:(new Date).toLocaleString(),ModVersion:XSActivity_VERSION};style?console.debug("%c小酥的模组信息: ",style,result):(color&&(style=`background-color: ${color}; font-weight: bold;`),console.debug("%c小酥的模组信息: ","background-color: rgba(191, 154, 175, 1); font-weight: bold;",result))}function GetModule(moduleName){return MODULES[moduleName]}function copyAndDownloadHtmlElement(element,fileName,time_limit=null){const newDoc=document.implementation.createHTMLDocument();if(null===element)return void conDebug("element is null");const copiedElement=element.cloneNode(!0);null!==time_limit&&function(element,time_limit){element.querySelectorAll("[data-time]").forEach((element=>{const dataTimeValue=element.getAttribute("data-time");if(dataTimeValue){const currentTime=new Date(`2000-01-01 ${dataTimeValue}`),minTimeDate=new Date(`2000-01-01 ${time_limit.minTime}`),maxTimeDate=new Date(`2000-01-01 ${time_limit.maxTime}`);maxTimeDate<minTimeDate&&maxTimeDate.setDate(maxTimeDate.getDate()+1),(currentTime<minTimeDate||currentTime>maxTimeDate)&&element.remove()}}))}(copiedElement,time_limit),function(element){const style=element.style;for(;style.length>0;)style.removeProperty(style[0])}(copiedElement),copiedElement.style.fontSize="14.784px",copiedElement.style.fontFamily="Arial, sans-serif",copiedElement.style.display="flex",copiedElement.style.flexDirection="column",copiedElement.style.width="70vw",newDoc.body.style.display="flex",newDoc.body.style.alignItems="center",newDoc.body.style.justifyContent="center",newDoc.body.style.backgroundColor="#f2f2f2",newDoc.body.appendChild(copiedElement);const htmlString=newDoc.documentElement.outerHTML,blob=new Blob([htmlString],{type:"text/html"}),link=document.createElement("a");link.href=URL.createObjectURL(blob),link.download=fileName,link.click()}function sendLastChangeLog(){let content="";const c=CHANGELOG[CHANGELOG.length-1],version=c.version,type=c.type==ChangeType.main?"主版本":"开发版本",description=c.description,changes=c.changes,styleForP='style="font-weight: bold; margin: 0;"';for(const s of changes)content+=`<p ${styleForP}>${s}</p>`;content=`<p ${styleForP}>版本: ${version}</p>\n    <p ${styleForP}>类型: ${type}</p>\n    <p ${styleForP}>描述: ${description}</p>\n    <p>----</p>\n    <p ${styleForP}>改动: ${content}</p>\n    <p>========</p>`,content+="<p>==当前页面显示时间30秒 再次查看请输入`/xsa new`==</p>",ChatRoomSendLocal(content,3e4)}!function(MSGType){MSGType[MSGType.DebugLog=0]="DebugLog",MSGType[MSGType.Workflow_Log=1]="Workflow_Log"}(MSGType||(MSGType={}));class BaseModule{constructor(moduleName){this.moduleName="Base",this.priority=0,this.Loaded=!1,this.moduleName=moduleName}}const selfPlaceholder="SourceCharacter";class ActivityModule extends BaseModule{constructor(){super(...arguments),this.groupNameDict={ItemAddon:"身体(附加)",ItemArms:"手臂",ItemBoots:"脚",ItemBreast:"乳房",ItemButt:"屁股",ItemDevices:"身体(装置)",ItemEars:"耳朵",ItemFeet:"小腿",ItemHandheld:"手",ItemHands:"手",ItemHead:"头",ItemHood:"头发",ItemLegs:"大腿",ItemMisc:"身体(杂项)",ItemMouth:"嘴巴",ItemMouth2:"嘴巴",ItemMouth3:"嘴巴",ItemNeck:"脖子",ItemNeckAccessories:"脖子",ItemNeckRestraints:"脖子",ItemNipples:"乳头",ItemNipplesPiercings:"乳头",ItemNose:"鼻子",ItemPelvis:"小腹",ItemTorso:"肋部",ItemTorso2:"肋部",ItemVulva:"阴道",ItemVulvaPiercings:"阴蒂"},this.bodyNamePlaceholder="{group}",this.activityToAddDict={"XSAct_眯眼":{act:{Name:"XSAct_眯眼",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}眯了眯眼.`],img:"RestHead"},"XSAct_眼神飘忽":{act:{Name:"XSAct_眼神飘忽",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}眼神飘忽的左看右看.`],img:"RestHead"},"XSAct_甩头发":{act:{Name:"XSAct_甩头发",Target:[],TargetSelf:["ItemHood"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["ItemHoodCovered"]},desc:null,descString:["",`${selfPlaceholder}甩动着头发.`],img:"RestHead"},"XSAct_大力甩头发":{act:{Name:"XSAct_大力甩头发",Target:[],TargetSelf:["ItemHood"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["ItemHoodCovered"]},desc:null,descString:["",`${selfPlaceholder}连连摇头，慌乱的甩动着头发.`],img:"RestHead"},"XSAct_轻抚发梢":{act:{Name:"XSAct_轻抚发梢",Target:["ItemHood"],TargetSelf:["ItemHood"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["ItemHoodCovered","TargetItemHoodCovered","UseArms"]},desc:null,descString:[`${selfPlaceholder}轻柔抚动着TargetCharacter的头发.`,`${selfPlaceholder}轻柔抚动着自己的头发.`],img:"RestHead"},"XSAct_叼起头发":{act:{Name:"XSAct_叼起头发",Target:["ItemHood"],TargetSelf:["ItemHood"],MaxProgress:50,MaxProgressSelf:20,Prerequisite:["UseMouth","ItemHoodCovered","TargetItemHoodCovered"],StimulationAction:"Talk"},desc:null,descString:[`${selfPlaceholder}轻轻咬起TargetCharacter的头发.`,`${selfPlaceholder}轻轻咬起自己的头发.`],img:"SiblingsCheekKiss"},"XSAct_嗅头发":{act:{Name:"XSAct_嗅头发",Target:["ItemHood"],TargetSelf:["ItemHood"],MaxProgress:30,MaxProgressSelf:30,Prerequisite:["ItemHoodCovered","TargetItemHoodCovered","ItemNoseCovered"],StimulationAction:"Talk"},desc:null,descString:[`${selfPlaceholder}在TargetCharacter的发间嗅着，鼻息弥漫着TargetCharacter的发香.`,`${selfPlaceholder}撩起自己的头发轻轻嗅着.`],img:"SiblingsCheekKiss"},"XSAct_绕头发":{act:{Name:"XSAct_绕头发",Target:["ItemHood"],TargetSelf:["ItemHood"],MaxProgress:30,MaxProgressSelf:30,Prerequisite:["UseArms","ItemHoodCovered","TargetItemHoodCovered"]},desc:null,descString:[`${selfPlaceholder}勾起一缕TargetCharacter的发丝，在指尖绕来绕去.`,`${selfPlaceholder}勾起自己的一缕头发在指尖绕来绕去.`],img:"SiblingsCheekKiss"},"XSAct_皱鼻子":{act:{Name:"XSAct_皱鼻子",Target:[],TargetSelf:["ItemNose"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["ItemHoodCovered","ItemNoseCovered"]},desc:null,descString:["",`${selfPlaceholder}皱了皱自己的鼻头.`],img:"RestHead"},"XSAct_打喷嚏":{act:{Name:"XSAct_打喷嚏",Target:[],TargetSelf:["ItemNose"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth","ItemHoodCovered"],StimulationAction:"Talk"},desc:null,descString:["",`${selfPlaceholder}打了个喷嚏.`],img:"Kiss"},"XSAct_深呼吸":{act:{Name:"XSAct_深呼吸",Target:[],TargetSelf:["ItemNose"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth","ItemHoodCovered","ItemNoseCovered"],StimulationAction:"Talk"},desc:null,descString:["",`${selfPlaceholder}深深的吸了口气.`],img:"Kiss"},"XSAct_低头":{act:{Name:"XSAct_低头",Target:[],TargetSelf:["ItemHood"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["ItemHoodCovered","MoveHead"]},desc:null,descString:["",`${selfPlaceholder}红润着脸蛋低头逃避.`],img:"RestHead"},"XSAct_恳求的摇头":{act:{Name:"XSAct_恳求的摇头",Target:["ItemHead"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:[`${selfPlaceholder}对着TargetCharacter的方向恳求的摇头.`,""],img:"RestHead"},"XSAct_恳求的看":{act:{Name:"XSAct_恳求的看",Target:["ItemHead"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["TargetZoneNaked","MoveHead"]},desc:null,descString:[`${selfPlaceholder}汪着眼睛恳求的看着TargetCharacter.`,""],img:"RestHead"},"XSAct_内八夹腿":{act:{Name:"XSAct_内八夹腿",Target:[],TargetSelf:["ItemLegs"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}通红的脸蛋忍耐着快感，大腿紧紧夹起来，摆出着内八的姿势，身体微微颤抖.`],img:"Kick"},"XSAct_噘嘴":{act:{Name:"XSAct_噘嘴",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}有些不满的噘起嘴巴.`],img:"PoliteKiss"},"XSAct_抿住嘴巴":{act:{Name:"XSAct_抿住嘴巴",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}抿住嘴巴.`],img:"PoliteKiss"},"XSAct_瘪嘴":{act:{Name:"XSAct_瘪嘴",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}瘪着嘴巴，一副委屈的样子.`],img:"PoliteKiss"},"XSAct_坐直身体":{act:{Name:"XSAct_坐直身体",Target:[],TargetSelf:["ItemTorso","ItemTorso2"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}挺直了腰，坐直了身体.`],img:"Kick"},"XSAct_挺胸收腹":{act:{Name:"XSAct_挺胸收腹",Target:[],TargetSelf:["ItemBreast"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}挺起胸部，微收下巴，腹部用力收腰.`],img:"Kick"},"XSAct_站直身体":{act:{Name:"XSAct_站直身体",Target:[],TargetSelf:["ItemTorso","ItemTorso2"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["NotKneeling"]},desc:null,descString:["",`${selfPlaceholder}挺胸收腹，努力绷紧小腿，站直了身体.`],img:"Kick"},"XSAct_身体一颤":{act:{Name:"XSAct_身体一颤",Target:[],TargetSelf:["ItemTorso","ItemTorso2"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}的身体猛然颤抖了一下.`],img:"Kick"},"XSAct_活动大腿":{act:{Name:"XSAct_活动大腿",Target:[],TargetSelf:["ItemLegs"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}尝试活动了一下腿部.`],img:"Kick"},"XSAct_活动手臂":{act:{Name:"XSAct_活动手臂",Target:[],TargetSelf:["ItemArms"],MaxProgress:30,MaxProgressSelf:30,Prerequisite:["CantUseArms"]},desc:null,descString:["",`${selfPlaceholder}一边按摩一边活动着手臂.`],img:"MasturbateHand"},"XSAct_绷紧膝盖":{act:{Name:"XSAct_绷紧膝盖",Target:[],TargetSelf:["ItemLegs"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["NotKneeling"]},desc:null,descString:["",`${selfPlaceholder}努力的绷紧膝盖，尽可能站的更直.`],img:"Kick"},"XSAct_绷直脚踝":{act:{Name:"XSAct_绷直脚踝",Target:[],TargetSelf:["ItemBoots"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}不自觉的用力绷直脚踝，释放涌来的快感.`],img:"Kick"},"XSAct_蜷缩脚趾":{act:{Name:"XSAct_蜷缩脚趾",Target:[],TargetSelf:["ItemBoots"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}脚趾互相纠结，又时而蜷缩，忍耐着快感袭来.`],img:"Kick"},"XSAct_踮脚":{act:{Name:"XSAct_踮脚",Target:[],TargetSelf:["ItemBoots"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["CantUseFeet"]},desc:null,descString:["",`${selfPlaceholder}努力的踮起脚.`],img:"Kick"},"XSAct_兴奋的伸出舌头":{act:{Name:"XSAct_兴奋的伸出舌头",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}兴奋的伸出舌头.}`],img:"MasturbateTongue"},"XSAct_兴奋的扭动":{act:{Name:"XSAct_兴奋的扭动",Target:[],TargetSelf:["ItemTorso","ItemTorso2"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}兴奋的扭动着身体.`],img:"Wiggle"},"XSAct_呼吸平复":{act:{Name:"XSAct_呼吸平复",Target:[],TargetSelf:["ItemNose"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}的呼吸渐渐平复.`],img:"PoliteKiss"},"XSAct_呼吸紊乱":{act:{Name:"XSAct_呼吸紊乱",Target:[],TargetSelf:["ItemNose"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}的呼吸突然变得躁动起来.`],img:"Whisper"},"XSAct_嘟囔着想说什么":{act:{Name:"XSAct_嘟囔着想说什么",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}嘟囔着想说什么.`],img:"Whisper"},"XSAct_失神的伸出舌头":{act:{Name:"XSAct_失神的伸出舌头",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}失神的伸出自己的舌头.`],img:"MasturbateTongue"},"XSAct_慢慢伸出舌头":{act:{Name:"XSAct_慢慢伸出舌头",Target:[],TargetSelf:["ItemMouth","ItemMouth2","ItemMouth3"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["UseMouth"]},desc:null,descString:["",`${selfPlaceholder}慢慢的伸出了自己的舌头.`],img:"MasturbateTongue"},"XSAct_微微摇头":{act:{Name:"XSAct_微微摇头",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:["",`${selfPlaceholder}微微的摇了摇头.`],img:"Suck"},"XSAct_微微点头":{act:{Name:"XSAct_微微点头",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:["",`${selfPlaceholder}微微的点了点头.`],img:"Nod"},"XSAct_身体颤抖的摇头":{act:{Name:"XSAct_身体颤抖的摇头",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:["",`${selfPlaceholder}浑身颤抖的摇了摇头.`],img:"Suck"},"XSAct_身体颤抖的点头":{act:{Name:"XSAct_身体颤抖的点头",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:["",`${selfPlaceholder}浑身颤抖的点了点头.`],img:"Nod"},"XSAct_歪头疑惑":{act:{Name:"XSAct_歪头疑惑",Target:[],TargetSelf:["ItemNeck"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:["",`${selfPlaceholder}歪着脑袋一副疑惑的样子.`],img:"Suck"},"XSAct_扭动身体":{act:{Name:"XSAct_扭动身体",Target:[],TargetSelf:["ItemTorso","ItemTorso2"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}扭动着身体.`],img:"Wiggle"},"XSAct_活动四肢":{act:{Name:"XSAct_活动四肢",Target:["ItemArms","ItemLegs","ItemFeet","ItemBoots"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["CantUseArms","CantUseFeet"]},desc:null,descString:["",`${selfPlaceholder}活动了下自己的四肢.`],img:"Slap"},"XSAct_看他":{act:{Name:"XSAct_看他",Target:["ItemHead"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["CanLook"]},desc:null,descString:["",`${selfPlaceholder}看向了TargetCharacter.`],img:"SiblingsCheekKiss"},"XSAct_缩脖子":{act:{Name:"XSAct_缩脖子",Target:[],TargetSelf:["ItemNeck"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}缩了下自己的脖子.`],img:"Suck"},"XSAct_脸红喘气":{act:{Name:"XSAct_脸红喘气",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}面色潮红的喘着气.`],img:"Whisper"},"XSAct_轻声喘气":{act:{Name:"XSAct_轻声喘气",Target:[],TargetSelf:["ItemHead"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:["",`${selfPlaceholder}轻声喘着气.`],img:"Whisper"},"XSAct_跺脚":{act:{Name:"XSAct_跺脚",Target:[],TargetSelf:["ItemLegs"],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["NotKneeling"]},desc:null,descString:["",`${selfPlaceholder}跺了跺脚.`],img:"Step"},"XSAct_头蹭":{act:{Name:"XSAct_头蹭",Target:["ItemHead","ItemNeck","ItemBreast","ItemArms","ItemLegs","ItemFeet","ItemBoots","ItemPelvis"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:[`${selfPlaceholder}用自己的脑袋蹭了蹭TargetCharacter的${this.bodyNamePlaceholder}.`,""],img:"SiblingsCheekKiss",isBase:!0},"XSAct_脸蹭":{act:{Name:"XSAct_脸蹭",Target:["ItemHead","ItemNeck","ItemBreast","ItemArms","ItemLegs","ItemFeet","ItemBoots","ItemPelvis"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:[]},desc:null,descString:[`${selfPlaceholder}用自己的脸颊 蹭了蹭TargetCharacter的${this.bodyNamePlaceholder}.`,""],img:"SiblingsCheekKiss",isBase:!0},"XSAct_鼻子蹭":{act:{Name:"XSAct_鼻子蹭",Target:["ItemHead","ItemNeck","ItemBreast","ItemArms","ItemLegs","ItemFeet","ItemBoots","ItemPelvis"],TargetSelf:[],MaxProgress:20,MaxProgressSelf:20,Prerequisite:["MoveHead"]},desc:null,descString:[`${selfPlaceholder}用自己的鼻子蹭了蹭TargetCharacter的${this.bodyNamePlaceholder}.`,""],img:"Nod",isBase:!0}},this.prerequisiteDict={ItemHoodCovered:{Name:"ItemHoodCovered",Action:args=>{const acting=args[1];return this.Judgment.ItemHoodCovered(acting)}},TargetItemHoodCovered:{Name:"TargetItemHoodCovered",Action:args=>{const acted=args[2];return this.Judgment.ItemHoodCovered(acted)}},ItemNoseCovered:{Name:"ItemNoseCovered",Action:args=>{const acting=args[1];return this.Judgment.ItemNoseCovered(acting)}},Kneeling:{Name:"Kneeling",Action:args=>{const acting=args[1];return this.Judgment.Kneeling(acting)}},NotKneeling:{Name:"NotKneeling",Action:args=>{const acting=args[1];return this.Judgment.NotKneeling(acting)}},CanLook:{Name:"CanLook",Action:args=>{const acting=args[1];return this.Judgment.CanLook(acting)}}},this.Judgment={ItemHoodCovered:acting=>""===InventoryPrerequisiteMessage(acting,"HoodEmpty"),ItemNoseCovered:acting=>""==(InventoryGet(acting,"ItemNose")?"CannotBeUsedOverMask":""),Kneeling:acting=>acting.IsKneeling(),NotKneeling:acting=>!acting.IsKneeling(),CanLook:acting=>acting.IsBlind()}}Init(){this.priority=50}Load(){this.LoadActivity(),this.hookListHandler(),this.Loaded=!0}hookListHandler(){hookFunction("ServerSend",5,((args,next)=>{if("ChatRoomChat"==args[0]&&"Activity"==args[1]?.Type){const data=args[1];if(0==(data.Dictionary[3]?.ActivityName??"").indexOf("XSAct_")){const{substitutions:substitutions}=ChatRoomMessageRunExtractors(data,Player);let msg=ActivityDictionaryText(data.Content);msg=CommonStringSubstitute(msg,substitutions??[]),data.Dictionary.push({Tag:"MISSING ACTIVITY DESCRIPTION FOR KEYWORD "+data.Content,Text:msg})}}return next(args)})),hookFunction("ActivityCheckPrerequisite",500,((args,next)=>{const prereq=args[0];if(prereq in this.prerequisiteDict){return this.prerequisiteDict[prereq].Action(args)}return next(args)})),hookFunction("DrawImageResize",10,((args,next)=>{const source=args[0];if("string"!=typeof source)return next(args);const parts=source.split("/"),aName=parts[parts.length-1].replace(".png","");if(0==aName.indexOf("XSAct_")){const resultName=`Assets/Female3DCG/Activity/${this.activityToAddDict[aName].img}.png`;return args[0]=resultName,next(args)}return next(args)})),hookFunction("ChatRoomMessage",this.priority,((args,next)=>{const data=args[0];if(conDebug({name:"ChatRoomMessage",type:MSGType.DebugLog,content:data}),"Activity"==data.Type){const actName=data.Dictionary[3]?.ActivityName,SourceCharacter=data.Dictionary[0]?.SourceCharacter,TargetCharacter=data.Dictionary[1]?.TargetCharacter;"Tickle"!=actName||Number.isNaN(TargetCharacter)||TargetCharacter!=Player?.MemberNumber||(conDebug({type:MSGType.DebugLog,name:"检测到自己为目标的瘙痒动作",content:{"高潮阶段":Player.ArousalSettings?.OrgasmStage,"抵抗难度":ActivityOrgasmGameResistCount}}),1==Player.ArousalSettings?.OrgasmStage&&(conDebug({type:MSGType.DebugLog,name:"捕捉到抵抗场景，开始截断抵抗 增加难度 并重新触发",content:{"高潮阶段":Player.ArousalSettings?.OrgasmStage,"抵抗难度":ActivityOrgasmGameResistCount}}),ActivityOrgasmGameResistCount++,function(msg,sourceCharacter,targetCharacter){const sourceCharacterObj=ChatRoomCharacter.find((c=>c.MemberNumber==sourceCharacter)),targetCharacterObj=targetCharacter?ChatRoomCharacter.find((c=>c.MemberNumber==targetCharacter)):void 0;if(void 0===sourceCharacterObj&&void 0===targetCharacterObj)return;const sourceCharacterNickname=sourceCharacterObj?CharacterNickname(sourceCharacterObj):"",targetCharacterNickname=targetCharacterObj?CharacterNickname(targetCharacterObj):"",resultDict=[{Tag:"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSA_ActMessage",Text:msg.replaceAll("{source}",sourceCharacterNickname).replaceAll("{target}",targetCharacterNickname)}];resultDict.push({SourceCharacter:sourceCharacter}),void 0!==targetCharacter&&resultDict.push({TargetCharacter:targetCharacter}),conDebug({type:MSGType.Workflow_Log,name:"SendActivity()",content:{Type:"Activity",Content:"XSA_ActMessage",Dictionary:resultDict,Sender:sourceCharacter}}),ServerSend("ChatRoomChat",{Type:"Activity",Content:"XSA_ActMessage",Dictionary:resultDict,Sender:sourceCharacter})}("{target}紧闭双眼尽力抵抗着高潮，但被{source}的瘙痒干扰，从嘴巴里泄露出一声压抑的呻吟，不知是否还能忍住.",SourceCharacter,TargetCharacter),ActivityOrgasmStop(Player,99.5),ActivityOrgasmPrepare(Player)))}return next(args)}))}LoadActivity(){conDebug("加载自定义活动");let actLength=0;for(const aN in this.activityToAddDict){this.pushToActivity(this.activityToAddDict[aN].act),this.activityDictAdd();const activityDesc=this.activityToAddDict[aN].desc;activityDesc?.forEach((d=>{ActivityDictionary?.push(d)})),actLength+=1}conDebug(`自定义活动加载完成.动作数: ${actLength}`)}activityDictAdd(){for(const a in this.activityToAddDict){const pendingActivity=this.activityToAddDict[a],actName=pendingActivity.act.Name,nameWithoutPrefix=actName.substring(6),actTarget=pendingActivity.act.Target,actTargetSelf=pendingActivity.act.TargetSelf,addedValues=[];if(addedValues.push([`ActivityAct_${actName}`,`${nameWithoutPrefix}`]),addedValues.push([`Activity${actName}`,`${nameWithoutPrefix}`]),actTarget.length>0)for(let i=0;i<actTarget.length;i++){const aT=actTarget[i];addedValues.push([`Label-ChatOther-${aT}-${actName}`,`${nameWithoutPrefix}${pendingActivity.isBase?this.groupNameDict[aT]:""}`]),addedValues.push([`ChatOther-${aT}-${actName}`,pendingActivity.descString[0].replace(this.bodyNamePlaceholder,this.groupNameDict[aT])])}if(void 0!==actTargetSelf&&"boolean"!=typeof actTargetSelf&&actTargetSelf.length>0)for(const aTS of actTargetSelf)addedValues.push([`Label-ChatSelf-${aTS}-${actName}`,`${nameWithoutPrefix}${pendingActivity.isBase?this.groupNameDict[aTS]:""}`]),addedValues.push([`ChatSelf-${aTS}-${actName}`,pendingActivity.descString[1].replace(this.bodyNamePlaceholder,this.groupNameDict[aTS])]);pendingActivity.desc=addedValues}}pushToActivity(activity){ActivityFemale3DCG.push(activity),ActivityFemale3DCGOrdering.push(activity.Name)}getAllAct(){const result=[];for(const a in this.activityToAddDict){const suffix=a.substring(6);result.push(suffix)}return conDebug({content:result,name:"ActivityNameXiaosu_onlyName",type:MSGType.DebugLog}),result}}class ChatroomModule extends BaseModule{constructor(){super(...arguments),this.moan=[" 嗯~❤.."," 昂~❤哈啊.."," --唔~呜.."," 姆嗯~❤..."," --嘶-啊~"," 唔..❤啊~"," --❤嘶哈~"," ❤呀~"," ❤...呀嗯.."," ❤.哦~嗯~."]}Load(){this.hookListHandler(),this.Loaded=!0}Init(){this.priority=30}hookListHandler(){hookFunction("ChatRoomLoad",this.priority,((args,next)=>{const result=next(args);return ChatroomModule.InputElement||(ChatroomModule.InputElement=document.getElementById("InputChat")),ChatroomModule.buildKaomojiButton(),result})),hookFunction("ElementPosition",this.priority,((args,next)=>{const result=next(args);return"InputChat"===args[0]&&ChatroomModule.ResizeKaomojiButton(),result})),hookFunction("ElementCreateTextArea",this.priority,((args,next)=>{const result=next(args);return"InputChat"===args[0]&&(ChatroomModule.InputElement=document.getElementById("InputChat")),result})),hookFunction("ChatRoomClearAllElements",this.priority,((args,next)=>(ChatroomModule.removeKaomojiMenu(),ChatroomModule.InputElement=null,next(args)))),hookFunction("ChatRoomShowElements",this.priority,((args,next)=>{const result=next(args);return ChatroomModule.showKaomojiMenu(),result})),hookFunction("ChatRoomHideElements",this.priority,((args,next)=>{const result=next(args);return ChatroomModule.hideKaomojiMenu(),result})),hookFunction("CommandParse",0,((args,next)=>{let msg=args[0];const match=msg.match(/^`([1-9])?(m)?( )? (.*)/);match&&(msg="m"!=match[2]?this.stammerHandler(match[4],parseInt(match[1]),!match[3],!1):this.stammerHandler(match[4],parseInt(match[1]),!match[3],!0));const kaomojiMatch=msg.match(/^\|(.*)/);if(!kaomojiMatch)return args[0]=msg,next(args);if(Object.keys(ChatroomModule.kaomojiSet).includes(kaomojiMatch[1])||"all"==kaomojiMatch[1]){ChatroomModule.kaomojiHandler(kaomojiMatch[1]);document.getElementById("InputChat").value=""}else{ChatRoomSendLocal("该颜文字表情包不存在，请重新输入或输入 |help 查看参数",5e3);document.getElementById("InputChat").value="|"}}))}ExportChat(time_limit=null){const exportName=`${ChatRoomData?.Name}_${(new Date).toLocaleString()}`;copyAndDownloadHtmlElement(document.getElementById("TextAreaChatLog"),exportName,time_limit)}stammerHandler(content,tenfoldStammeringProbability,isSegmentForCH,haveMoan){conDebug(`stammerHandler: content: ${content} tenfoldStammeringProbability: ${tenfoldStammeringProbability}`),Number.isNaN(tenfoldStammeringProbability)&&(tenfoldStammeringProbability=3);const stammeringProbability=tenfoldStammeringProbability/10,segmentList=isSegmentForCH?function(str){if(window.Intl&&window.Intl.Segmenter&&"cn"===TranslationLanguage.toLowerCase()){const segmenterResult=new Intl.Segmenter("zh",{granularity:"word"}).segment(str),results=[];for(const segment of segmenterResult)results.push(segment.segment);return conDebug(`segmentForCH: ${results}`),results}return null}(content.replace(/\s/g,"")):void 0,stringArray=segmentList||content.split(" ");return this.stammerForList(stringArray,stammeringProbability,haveMoan)}stammerForList(messageList,stammeringProbability,haveMoan){let result="";for(let i=0;i<messageList.length;i++){const currentWord=messageList[i];result+=currentWord,Math.random()<stammeringProbability&&(result+=this.addStammerEffect(currentWord)),haveMoan&&Player.ArousalSettings?.Progress&&100*Math.random()<=Player.ArousalSettings?.Progress&&(result+=this.moan[Math.floor(Math.random()*this.moan.length)]),i<messageList.length-1?Math.random()<stammeringProbability&&(result+="-"):result+="..."}return conDebug({name:"stammer",type:MSGType.DebugLog,content:result}),result}addStammerEffect(word,depth=0){if(depth>=3)return word;let result=Math.random()<.5?"...":`-${word}`;return Math.random()<.2&&(result=this.addStammerEffect(result,depth+1)),result}static kaomojiHandler(message){this.getKaomojiMenu(message).style.display="flex",this.KaomojiShouldShow=!0}static buildKaomojiButton(){if(this.KaomojiButton)return this.KaomojiButton;const button=document.createElement("button");return button.id="kaomoji-button",button.className="kaomoji-button",button.type="button",button.addEventListener("click",(()=>{this.KaomojiMenuObject.menu&&"none"!==this.KaomojiMenuObject.menu.style.display?"none"!==this.KaomojiMenuObject.menu.style.display&&(this.KaomojiMenuObject.menu.style.display="none",this.KaomojiShouldShow=!1):this.kaomojiHandler("all")})),this.isKaomojiMenuCloseEventListenerAdded||(document.addEventListener("click",(event=>{const target=event.target;!target.closest("#kaomoji-menu")&&!target.closest("#kaomoji-button")&&this.KaomojiMenuObject.menu&&this.KaomojiShouldShow&&(this.KaomojiMenuObject.menu.style.display="none",this.KaomojiShouldShow=!1)})),this.isKaomojiMenuCloseEventListenerAdded=!0),button.innerHTML=":)",this.ResizeKaomojiButton(),this.KaomojiButton=button,document.body.appendChild(button),button}static ResizeKaomojiButton(){this.InputElement&&this.KaomojiButton&&(this.KaomojiButton.style.top=parseInt(this.InputElement.style.top)-.026*window.innerHeight+"px",this.KaomojiButton.style.left=parseInt(this.InputElement.style.left)-.026*window.innerHeight+"px")}static getKaomojiMenu(key){const{kaomojiContainer:kaomojiContainer,menu:menu}=this.KaomojiMenuObject.menu?{kaomojiContainer:this.KaomojiMenuObject.container,menu:this.KaomojiMenuObject.menu}:ChatroomModule.buildKaomojiMenu();return this.selectKaomojiTitle(kaomojiContainer,key),menu}static kaomojiClick(event,kaomojiElement){if(0===event.button){if(this.InputElement){const cursorPosition=this.InputElement.selectionStart;if(null===cursorPosition||-1==cursorPosition)this.InputElement.value+=kaomojiElement.textContent;else{const value=this.InputElement.value,newValue=value.substring(0,cursorPosition)+kaomojiElement.textContent+value.substring(cursorPosition);this.InputElement.value=newValue;const newCursorPosition=cursorPosition+(null==kaomojiElement.textContent?0:kaomojiElement.textContent.length);this.InputElement.setSelectionRange(newCursorPosition,newCursorPosition)}}}else 2===event.button?null!=(msg=kaomojiElement.textContent)&&ServerSend("ChatRoomChat",{Content:msg,Type:"Emote"}):1===event.button&&function(msg){null!=msg&&ServerSend("ChatRoomChat",{Type:"Chat",Content:msg})}(kaomojiElement.textContent);var msg}static buildKaomojiMenu(){const menu=document.createElement("div");menu.id="kaomoji-menu",menu.style.display="flex";const menuTitle=document.createElement("div"),menuTitleTextSet=this.menuTitleTextSet,menuTitleClose=document.createElement("button");menuTitleClose.innerHTML='\n        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"\n            viewBox="0 0 24 24">\n            <circle cx="12" cy="12" r="10" fill="red" />\n        </svg>';const kaomojiContainer=document.createElement("div");menu.appendChild(menuTitle),menu.appendChild(kaomojiContainer),menu.className="kaomoji-menu",menuTitle.className="kaomoji-title",menuTitleClose.className="kaomoji-title-close",kaomojiContainer.className="kaomoji-container",menuTitleClose.addEventListener("click",(()=>{menu.style.display="none",this.KaomojiShouldShow=!1}));for(const key in menuTitleTextSet)menuTitleTextSet[key].innerHTML=key,menuTitleTextSet[key].className="kaomoji-title-text",menuTitle.appendChild(menuTitleTextSet[key]),menuTitleTextSet[key].addEventListener("click",(()=>{const selectKey=this.getKaomojiSelectKey(key);this.selectKaomojiTitle(kaomojiContainer,selectKey)}));return menuTitle.appendChild(menuTitleClose),this.KaomojiMenuObject={title:menuTitle,container:kaomojiContainer,menu:menu},document.body.appendChild(menu),{kaomojiContainer:kaomojiContainer,menu:menu}}static selectMenuTitleStyleHandle(selectKey){this.menuTitleTextSet[selectKey].classList.contains("kaomoji-title-text-active")||this.menuTitleTextSet[selectKey].classList.add("kaomoji-title-text-active");for(const key2 in this.menuTitleTextSet)key2!=selectKey&&this.menuTitleTextSet[key2].classList.remove("kaomoji-title-text-active")}static getKaomojiSelectKey(key){let selectKey=null;switch(key){case"开心":selectKey="hp";break;case"难过":selectKey="sd";break;case"害羞":selectKey="sy";break;case"生气":selectKey="ar";break;case"惊讶":selectKey="sp";break;case"困惑":selectKey="cf";break;case"搞怪":selectKey="nt";break;default:selectKey="all"}return selectKey}static getKaomojiKey(selectKey){let key=null;switch(selectKey){case"hp":key="开心";break;case"sd":key="难过";break;case"sy":key="害羞";break;case"ar":key="生气";break;case"sp":key="惊讶";break;case"cf":key="困惑";break;case"nt":key="搞怪";break;default:key="全部"}return key}static selectKaomojiTitle(kaomojiContainer,key){const kaomojiList="all"==key?this.getAllKaomoji():this.kaomojiSet[key];kaomojiContainer.innerHTML="";this.selectMenuTitleStyleHandle(this.getKaomojiKey(key));for(const kaomoji of kaomojiList){const kaomojiElement=document.createElement("div");kaomojiElement.className="kaomoji",kaomojiElement.innerText=kaomoji,"help"!==key&&(kaomojiElement.addEventListener("click",(event=>{this.kaomojiClick(event,kaomojiElement)})),kaomojiElement.addEventListener("contextmenu",(event=>{event.preventDefault(),this.kaomojiClick(event,kaomojiElement)})),kaomojiElement.addEventListener("mousedown",(event=>{1===event.button&&(event.preventDefault(),this.kaomojiClick(event,kaomojiElement))}))),kaomojiContainer.appendChild(kaomojiElement)}}static removeKaomojiMenu(){this.KaomojiButton&&(this.KaomojiButton.remove(),this.KaomojiButton=null),this.KaomojiMenuObject.menu&&(this.KaomojiMenuObject.menu.remove(),this.KaomojiMenuObject={menu:null,title:null,container:null})}static hideKaomojiMenu(){this.KaomojiMenuObject.menu&&(this.KaomojiMenuObject.menu.style.display="none"),this.KaomojiButton&&(this.KaomojiButton.style.display="none")}static showKaomojiMenu(){this.KaomojiMenuObject.menu&&1==this.KaomojiShouldShow&&(this.KaomojiMenuObject.menu.style.display="flex"),this.KaomojiButton&&(this.KaomojiButton.style.display="inline")}static getAllKaomoji(){const allKaomojiList=[];for(const key in this.kaomojiSet)if("help"!=key)for(const kaomoji of this.kaomojiSet[key])allKaomojiList.push(kaomoji);return allKaomojiList}}ChatroomModule.InputElement=null,ChatroomModule.KaomojiMenuObject={menu:null,title:null,container:null},ChatroomModule.menuTitleTextSet={"全部":document.createElement("div"),"开心":document.createElement("div"),"难过":document.createElement("div"),"害羞":document.createElement("div"),"生气":document.createElement("div"),"惊讶":document.createElement("div"),"困惑":document.createElement("div"),"搞怪":document.createElement("div")},ChatroomModule.KaomojiButton=null,ChatroomModule.KaomojiShouldShow=!1,ChatroomModule.kaomojiSet={help:["all ==> 全部表情","hp ==> 开心","sd ==> 伤心","sy ==> 害羞","ar ==> 生气","ap ==> 惊讶","cf ==> 困惑","nt ==> 搞怪顽皮"],hp:["ヾ(❀╹◡╹)ﾉ~"," (๑>؂<๑）","(｡･ω･｡)ﾉ♡","(◍ ´꒳` ◍)","(￣w￣)ノ","Hi~ o(*￣▽￣*)ブ","(≧∇≦)ﾉ","o(^▽^)o","(￣︶￣)↗","<(￣︶￣)↗[GO!]","o(*￣▽￣*)o","(p≧w≦q)","ㄟ(≧◇≦)ㄏ","(/≧▽≦)/","(　ﾟ∀ﾟ) ﾉ♡","(●'◡'●)","ヽ(✿ﾟ▽ﾟ)ノ","o(*￣︶￣*)o","(๑¯∀¯๑)","(≧∀≦)ゞ","φ(≧ω≦*)♪","╰(*°▽°*)╯","(*^▽^*)","(๑•̀ㅂ•́)و✧","(੭*ˊᵕˋ)੭*ଘ*","(o゜▽゜)o☆[BINGO!]","(^▽^ )","<(*￣▽￣*)/","┌|*´∀｀|┘","♪(´∇`*)","(｡◕ฺˇε ˇ◕ฺ｡）"," ✌︎( ᐛ )✌︎","(*・ω・)ﾉ","(„• ֊ •„)"],sd:["テ_デ","□_□","┭┮﹏┭┮","╥﹏╥...","o(TヘTo)","〒▽〒","ε(┬┬﹏┬┬)3","(;´༎ຶД༎ຶ`)","(ノへ`、)","（-_-。）","(ノへ￣、)","｡◔‸◔｡","(⊙﹏⊙)"],sy:["|ω・）","|･ω･｀)","◕ฺ‿◕ฺ✿ฺ)","つ﹏⊂","(* /ω＼*)","o(*////▽////*)q","(*/ω＼*)","(′▽`〃)","(✿◡‿◡)","(/▽＼)","(๑´ㅂ`๑)","(◡ᴗ◡✿)","⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄","(〃'▽'〃)","(๑╹ヮ╹๑)ﾉ"],ar:["/ᐠ｡ꞈ｡ᐟ\\","˃ʍ˂","(σ｀д′)σ","＼(゜ロ＼)(／ロ゜)／","<(－︿－)>","(ー`´ー)","（｀へ´）","(-__-)=@))> o<)","(///￣皿￣)○～","┻━┻︵╰(‵□′)╯︵┻━┻","→)╥﹏╥)","抽!!(￣ε(#￣)☆╰╮(￣▽￣///)","(￣ε(#￣)☆╰╮o(￣皿￣///)","(* ￣︿￣)","（＃￣～￣＃）","(⊙x⊙;)","o(*≧▽≦)ツ┏━┓","(ノω<。)ノ))☆.。","(〃＞目＜)","( σ'ω')σ","o(′益`)o","(〃＞目＜)","o(≧口≦)o","Ｏ(≧口≦)Ｏ","...(*￣０￣)ノ[等等我…]","（≧0≦）","ψ(*｀ー´)ψ","ψ(￣皿￣)ノ"],sp:["✧∇✧","!!!∑(ﾟДﾟノ)ノ","’(°ー°〃)","ヾ(ノ' ﹃' )ノ","(ーー゛)","(○´･д･)ﾉ","wow~ ⊙o⊙","~(￣0￣)/","Σ(｀д′*ノ)ノ","Σ(っ °Д °;)っ","(⊙ˍ⊙)","w(ﾟДﾟ)w","ｍ(o・ω・o)ｍ","⊙▽⊙","（இ௰இ）","(●°u°●)​ 」","（｡ò ∀ ó｡）","(๑•̀ω•́)ノ"],cf:["⚆_⚆","( -'`-)","(=′ー`)","( -'`-; )","(・-・*)","( ｀д′)","(￣m￣）","( ╯▽╰)"," o-o(=•ェ•=)m","(⊙﹏⊙)","Σ( ° △ °|||)︴","(⊙ˍ⊙)","( ᗜ ˰ ᗜ )","꒰ ˶• ༝ •˶꒱"],nt:["(ˉ▽￣～) 切~~","(￣w￣)ノ","(￣v￣)ノ","(￣l￣)ノ","( ￣ー￣)","(‾◡◝)","(￣_,￣ )","( ﹁ ﹁ ) ~→","<(￣ ﹌ ￣)@m","ꉂ-ꉂ(ˊᗜˋ*)","(｀・ω・´）","༼ つ ◕_◕ ༽つ","ヽ(✿ﾟ▽ﾟ)ノ (°ー°〃)","ヾ(￣▽￣)Bye~Bye~","(◉ω◉υ)⁼³₌₃","(●—●)","(｡･∀･)ﾉﾞ","┬─┬ ノ('-'ノ)","┸━━┸)>口<)","(-.-)..zzZZ","(｡◝ᴗ◜｡)"," =͟͟͞͞(꒪ᗜ꒪ ‧̣̥̇)","(˵¯͒〰¯͒˵)"]},ChatroomModule.isKaomojiMenuCloseEventListenerAdded=!1;class ChessModule extends BaseModule{static get newCheckerboard(){const result=[];for(let r=1;r<=19;r++){const _row=[];for(let c=1;c<=19;c++)_row.push(null);result.push(_row)}return result}Load(){hookFunction("ChatRoomMessage",10,((args,next)=>{const data=args[0];if("object"!=typeof data||"XSA_Chess"!==data.Content||!data.Dictionary)return next(args);{const CheckerInfo=data.Dictionary[0];if(CheckerInfo.sender===Player.MemberNumber)return;this.ShowChessboard(CheckerInfo,data.Sender??0)}})),this.Loaded=!0}Init(){this.priority=0}static ChangeCheckerboard(rowIndex,colIndex,value,checkerboard){switch(value){case 0:checkerboard[rowIndex-1][colIndex-1]=null;break;case 1:checkerboard[rowIndex-1][colIndex-1]=!0;break;case 2:checkerboard[rowIndex-1][colIndex-1]=!1}}SendAChess(Player1,Player2,Round,checkerboard=ChessModule.newCheckerboard,started=!1){const CheckerInfo={Player1:Player1,Player2:Player2,Round:Round,Checkerboard:checkerboard,start:started,sender:Player.MemberNumber??-1};ServerSend("ChatRoomChat",{Type:"Hidden",Content:"XSA_Chess",Dictionary:[CheckerInfo],Sender:Player.MemberNumber})}ShowChessboard(info,sender){const Player1=ChatRoomCharacter.find((c=>c.MemberNumber==info.Player1));info.Player2||Player1===Player||(info.Player2=Player.MemberNumber);const Player2=ChatRoomCharacter.find((c=>c.MemberNumber==info.Player2)),div=document.createElement("div");div.setAttribute("class","ChatMessage ChatMessageLocalMessage"),div.setAttribute("data-time",ChatRoomCurrentTime()),div.setAttribute("data-sender",sender);const main=document.createElement("div");main.className="chessContainer";const title=document.createElement("div");title.innerHTML=`玩家1: ${Player1?.Nickname??Player1?.Name??"丢失"}   玩家2: ${info.start?Player2?.Nickname??Player2?.Name:"未开始"}`,main.appendChild(title);const checkerboard=document.createElement("table");checkerboard.className="chessTable";let rowIndex=0,colIndex=0;for(const row of info.Checkerboard){rowIndex++,colIndex=0;const tableRow=document.createElement("tr");for(const i of row){colIndex++;const call=document.createElement("td");switch(call.className="chessCell",call.setAttribute("row",rowIndex.toString()),call.setAttribute("col",colIndex.toString()),call.setAttribute("value",0),!0===i?call.setAttribute("value",1):!1===i&&call.setAttribute("value",2),call.addEventListener("click",(()=>{const callValue=call.getAttribute("value");switch(Player.MemberNumber===Player1?.MemberNumber&&("0"===callValue&&call.setAttribute("value",1),"1"===callValue&&call.setAttribute("value",0)),Player.MemberNumber===Player2?.MemberNumber&&("0"===callValue&&call.setAttribute("value",2),"2"===callValue&&call.setAttribute("value",0)),call.getAttribute("value")){case"0":call.className="chessCell";break;case"1":call.className="chessCell chessCellWhite";break;case"2":call.className="chessCell chessCellBlack"}})),call.getAttribute("value")){case"0":call.className="chessCell";break;case"1":call.className="chessCell chessCellWhite";break;case"2":call.className="chessCell chessCellBlack"}tableRow.appendChild(call)}checkerboard.appendChild(tableRow)}main.appendChild(checkerboard);const sendButton=document.createElement("button");sendButton.innerHTML="发送",sendButton.addEventListener("click",(()=>{const newCheckerboard=ChessModule.newCheckerboard;for(let i=0;i<checkerboard.rows.length;i++){const row=checkerboard.rows[i];for(let j=0;j<row.cells.length;j++){const cell=row.cells[j];if("0"!==cell.getAttribute("value")){const rowIndex=parseInt(cell.getAttribute("row")??-1),colIndex=parseInt(cell.getAttribute("col")??-1),value=parseInt(cell.getAttribute("value")??-1);if(-1===rowIndex||-1===colIndex||-1===value)return;ChessModule.ChangeCheckerboard(rowIndex,colIndex,value,newCheckerboard)}}}this.SendAChess(Player1?.MemberNumber??0,Player2?.MemberNumber??0,info.Round+1,newCheckerboard,!!Player2),sendButton.disabled=!0,sendButton.remove()})),info.start&&Player1!==Player.MemberNumber&&Player2!==Player.MemberNumber||main.appendChild(sendButton),div.appendChild(main),ChatRoomAppendChat(div)}}const timeRangeRegex=/^(((0|1)\d|2[0-3]):[0-5]\d)-(((0|1)\d|2[0-3]):[0-5]\d)$/;class CommandsModule extends BaseModule{constructor(){super(...arguments),this.commandsDict={help:{Tag:"help",Description:"显示 [小酥的活动模组] 的相关命令.",Action:(_args,_msg,_parsed)=>{this.DisplayHelp()}},export:{Tag:"export",Description:"导出当前聊天室的聊天记录. 输入: ‘/xsa export -h’ 显示导出命令的使用方法.",Action:(_args,_msg,parsed)=>{const params=this.getCommandParameters(parsed);if("h"==params)ChatRoomSendLocal("输入: ‘/xsa export -[时间]’导出指定时间范围内的聊天记录.\n例如: ‘/xsa export -05:34-20:40’\n默认导出当前聊天室的全部聊天记录.\n注意! \n如果时间段过长例如第一天的05:34到第二天的06:00则可能出现导出错误.",2e4);else if(""===params)conDebug("导出当前聊天室的全部聊天记录"),GetModule("ChatroomModule").ExportChat();else if(timeRangeRegex.test(params)){conDebug(`导出指定的 ${params} 时间段的聊天记录`);const separatorIndex=params.indexOf("-");if(-1!==separatorIndex){const time_limit={minTime:params.slice(0,separatorIndex).trim(),maxTime:params.slice(separatorIndex+1).trim()};GetModule("ChatroomModule").ExportChat(time_limit)}}}},v:{Tag:"v",Description:"显示 [小酥的活动模组] 的版本信息.",Action:(_args,_msg,_parsed)=>{!function(){let content="";for(const c in CHANGELOG){const version=CHANGELOG[c].version,type=CHANGELOG[c].type==ChangeType.main?"主版本":"开发版本",description=CHANGELOG[c].description,changes=CHANGELOG[c].changes;let changesString='<ul style="list-style-position: inside;  padding-left: 0;">';for(const s of changes)changesString+=`<li>${s}</li>`;changesString+="</ul>";const styleForP='style="font-weight: bold; margin: 0;"';content+=`<div style="background-color: ${version!=XSActivity_VERSION||DEBUG||"主版本"!==type?"#442E3A":"#764460"}; display: flex; flex-direction: column;"> <p ${styleForP}>版本: ${version}</p> <p ${styleForP}>类型: ${type}</p> <p ${styleForP}>描述: ${description}</p><p>----</p> <p ${styleForP}>改动: ${changesString}</p><p>========</p></div>`}content+="<p>==当前页面显示时间1分钟==</p>",ChatRoomSendLocal(content,6e4)}()}},new:{Tag:"new",Description:"显示 [小酥的活动模组] 的最新更新日志.",Action:(_args,_msg,_parsed)=>{sendLastChangeLog()}},act:{Tag:"act",Description:"显示 [小酥的活动模组] 所添加的全部动作列表.",Action:(_args,_msg,_parsed)=>{let content="";GetModule("ActivityModule").getAllAct().forEach((item=>{content+=`<p style="font-weight: bold; margin: 0;">${item}</p>`})),conDebug(`command: AL    content: ${content}`),ChatRoomSendLocal(content,2e4)}},jieba:{Tag:"jieba",Description:"显示 自动结巴效果 的命令帮助.",Action:(_args,_msg,_parsed)=>{const stressStyle="style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'";ChatRoomSendLocal(`输入: <span ${stressStyle}>\`</span><span ${stressStyle}>空格</span><span style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'>空格</span> 开头的话将以口吃结巴的形式发出.\n结巴生效位置有两种方式: 如果键入两个<span ${stressStyle}>空格</span> 将会在空格位置概率产生结巴效果.\n如果键入一个<span ${stressStyle}>空格</span>将会使用分词系统进行结巴效果.\n该命令有一个可选参数:\n如果以<span ${stressStyle}>\`</span><span ${stressStyle}>[1-9]</span> 的形式作为开头，数字代表结巴程度，默认为3，越高将越口吃.\n不带结巴程度参数的例子:\n<span ${stressStyle}>\`</span> [要说 的 话]\n处理之后的效果就可能是:  「 要说...-的-的话... 」=>注意空格的位置.\n带参数的命令方法:\n<span ${stressStyle}>\`</span>3 [要说 的 话]\n此处的3就是结巴等级，代表着每处句子中的空格位置的词段都将有30%的概率发生结巴.上面的话就意味着发生了3等级的结巴效果.\n如果有两个空格: <span ${stressStyle}>\`</span>  [要说的话]\n💡另外: 如果数字后跟<span ${stressStyle}>m</span>结尾，则会在结巴处根据当前兴奋程度添加呻吟效果.`)}},kaomoji:{Tag:"kaomoji",Description:"显示 快速颜文字 的使用说明.",Action:()=>{const stressStyle="style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'";ChatRoomSendLocal(`输入<span ${stressStyle}>|</span>+<span style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'>参数</span>，或点击聊天室输入栏下方的小按钮，显示颜文字面板。\n                左键点击表情: 将表情插入到输入栏的光标当前位置;\n                右键点击表情: 将表情以**星号消息的形式直接发出;\n                中键点击表情: 将表情以普通消息发出.\n                当前的参数有:\n                <span ${stressStyle}>help</span>显示所有的参数作用。\n                <span ${stressStyle}>all</span>显示全部表情包。\n                <span ${stressStyle}>hp</span>显示开心的颜文字包。\n                <span ${stressStyle}>sd</span>显示伤心的颜文字包。\n                <span ${stressStyle}>sy</span>显示害羞的颜文字包。\n                <span ${stressStyle}>ar</span>显示生气的颜文字包。\n                <span ${stressStyle}>sp</span>显示惊讶的颜文字包。\n                <span ${stressStyle}>cf</span>显示疑惑的颜文字包。\n                <span ${stressStyle}>nt</span>显示顽皮搞怪的颜文字包。\n                `)}},chess:{Tag:"chess",Description:"开始一场棋局! 谁来迎战?",Action:(args,msg,parsed)=>{GetModule("ChessModule").ShowChessboard({Player1:Player.MemberNumber??-1,Round:0,Checkerboard:ChessModule.newCheckerboard,start:!1,sender:Player.MemberNumber??-1},Player.MemberNumber??-1)}}}}Load(){CommandCombine({Tag:"xsa",Description:"显示 [小酥的活动模组] 的相关命令.",Action:(args,msg,parsed)=>{parsed.length>0?this.CommandHandler(parsed):this.DisplayHelp()}}),this.Loaded=!0}Init(){this.priority=20}getCommandParameters(parsed){const lastParam=parsed[parsed.length-1];return lastParam.startsWith("-")?lastParam.slice(1):""}DisplayHelp(msg=void 0){if(void 0===msg){let content="";for(const c in this.commandsDict)content+=`/xsa ${c} ${this.commandsDict[c].Description}\n`;content+=`小酥的活动模组 版本号: ${XSActivity_VERSION}\n`,ChatRoomSendLocal(content,1e4)}else ChatRoomSendLocal(msg,1e4)}CommandHandler(parsed){const parsedCount=parsed.length;if(0==parsedCount&&this.DisplayHelp(),parsedCount>=1){const last=parsed[parsedCount-1];if(last.startsWith("-")){const cmd=parsed[parsedCount-2];cmd in this.commandsDict&&this.commandsDict[cmd]?.Action?.("","",parsed)}else last in this.commandsDict&&this.commandsDict[last]?.Action?.("","",parsed)}}}var _a$1;const PlayerStorage=()=>Player.XSA,PlayerOnlineSharedSettingsStorage=()=>Player.OnlineSharedSettings?.XSA,ExtensionStorage=()=>Player.ExtensionSettings.XSA,XSA_OnlineSharedSettingsDataKeyList=["wombTattoosAppliedEffects","sensitiveLevel"];class DataModule extends BaseModule{Load(){_a$1.allDataTake(),this.hookListHandle(),_a$1.SyncDataForPlayer(),setTimeout((()=>{ActivityChatRoomArousalSync(Player)}),1e3),this.Loaded=!0}Init(){this.priority=99,window.BROWSER_NAME=_a$1.browserName,window.BROWSER_VERSION=_a$1.browserVersion;const linkElement=document.createElement("link");linkElement.rel="stylesheet",linkElement.type="text/css",linkElement.href=CSShref,document.head.appendChild(linkElement)}hookListHandle(){hookFunction("ChatRoomLeave",this.priority,((args,next)=>(_a$1.allDataSave(),next(args)))),hookFunction("ChatRoomSync",this.priority,((args,next)=>(_a$1.allDataSave(),_a$1.IsModUpDate&&(setTimeout((()=>{sendLastChangeLog()}),2e3),_a$1.IsModUpDate=!1),next(args))))}static allDataTake(){if(ExtensionStorage()){Player.XSA=JSON.parse(LZString.decompressFromBase64(ExtensionStorage())??"");Player.XSA.version!==XSActivity_VERSION&&(this.IsModUpDate=!0,Player.XSA.version=XSActivity_VERSION);for(const k2 in Player.XSA.data)void 0===Player.XSA.data[k2]&&(Player.XSA.data[k2]=this.DefaultData[k2]);for(const k3 in Player.XSA.settings)void 0===Player.XSA.settings[k3]&&(Player.XSA.settings[k3]=this.DefaultSetting[k3])}else Player.XSA={version:XSActivity_VERSION,data:this.DefaultData,settings:this.DefaultSetting},this.IsModUpDate=!0;PlayerOnlineSharedSettingsStorage()?Player.OnlineSharedSettings.XSA={wombTattoosAppliedEffects:Player.XSA.data.wombTattoosAppliedEffects??[],sensitiveLevel:Player.XSA.data.sensitiveLevel??0}:Player.OnlineSharedSettings.XSA=this.DefaultOnlineSharedSettingsData}static allDataSave(){ExtensionStorage()||(Player.ExtensionSettings.XSA="");const data={version:PlayerStorage()?.version??XSActivity_VERSION,settings:PlayerStorage()?.settings??{},data:PlayerStorage()?.data??{}};Player.ExtensionSettings.XSA=LZString.compressToBase64(JSON.stringify(data)),ServerPlayerExtensionSettingsSync("XSA")}static SaveSettings(settingsItem){const settingsData=PlayerStorage()?.settings;for(const item in settingsItem)settingsData&&settingsData[item]!=settingsItem[item]&&(settingsData[item]=settingsItem[item])}static SaveData(dataItem){const data=PlayerStorage()?.data,OnlineSharedSettings=PlayerOnlineSharedSettingsStorage();for(const itemKey in dataItem)data&&data[itemKey]!=dataItem[itemKey]&&(data[itemKey]=dataItem[itemKey]),OnlineSharedSettings&&XSA_OnlineSharedSettingsDataKeyList.includes(itemKey)&&(OnlineSharedSettings[itemKey]=dataItem[itemKey])}static SyncDataForPlayer(){const data=PlayerStorage()?.data;data&&(Player.ArousalSettings&&Player.ArousalSettings.Progress&&data.player_Progress&&(Player.ArousalSettings.Progress=data.player_Progress),ActivityOrgasmGameResistCount=data.resistCount??0)}}_a$1=DataModule,DataModule.userAgentString=navigator.userAgent,DataModule.browserVersionRegex=/(chrome|firefox|safari|opera|edge|msie|trident(?=\/))\/?\s*(\d+)/i,DataModule.match=_a$1.userAgentString.match(_a$1.browserVersionRegex),DataModule.DefaultData={haveWombTattoos:!1,wombTattoosAppliedEffects:[],sensitiveLevel:0,resistCount:0,player_Progress:0},DataModule.DefaultSetting={},DataModule.DefaultOnlineSharedSettingsData={wombTattoosAppliedEffects:[],sensitiveLevel:0},DataModule.browserName=_a$1.match?_a$1.match[1]:"unknown",DataModule.browserVersion=_a$1.match?parseInt(_a$1.match[2]):-1,DataModule.IsModUpDate=!1;class DrawModule extends BaseModule{Load(){hookFunction("DrawProcessScreenFlash",-999,((args,next)=>(DrawModule.DrawFlash(),next(args)))),hookFunction("Player.GetBlurLevel",-999,((args,next)=>{let blurLevel=next(args);return CommonPhotoMode||0!==blurLevel||0===DrawModule.blurLevel||(blurLevel=DrawModule.blurLevel),blurLevel})),this.Loaded=!0}Init(){this.priority=20}static setFlash(color,time,intensity,callback){this.DrawFlashEventMap.set(Symbol(),{color:color,time:time,intensity:intensity,evenEnd:!1,callback:callback})}static DrawFlash(){if("ChatRoom"===CurrentScreen||0!==this.DrawFlashEventMap.size)for(const[key,event]of this.DrawFlashEventMap.entries()){if(event.evenEnd){this.DrawFlashEventMap.delete(key);continue}const commonTime=CommonTime();if(this.FlashEndTime=this.FlashEndTime??event.time+commonTime,this.FlashEndTime>commonTime){const FlashAlpha=this.DrawGetFlashAlpha(this.FlashEndTime-commonTime,event.intensity);DrawRect(0,0,2e3,1e3,event.color+FlashAlpha);break}event.evenEnd=!0,this.FlashEndTime=null,event.callback?.()}}static setDrawBlur(duration,level){this.blurLevel=level,setTimeout((()=>{this.blurLevel=0}),duration)}static DrawGetFlashAlpha(flashTime,flashIntensity){let alpha=Math.max(0,Math.min(255,Math.floor(flashIntensity*(1-Math.exp(-flashTime/2500))))).toString(16);return alpha.length<2&&(alpha="0"+alpha),alpha}static calculateDynamicIntensity(elapsedTime,baseIntensity,totalDuration){const phase=2*Math.PI*elapsedTime/500;return baseIntensity+.1*baseIntensity*Math.sin(phase)}}DrawModule.blurLevel=0,DrawModule.DrawFlashEventMap=new Map,DrawModule.FlashEndTime=null;class TimerProcessInjector extends BaseModule{static set setProcessInjectionSequence(sequence){for(const c of sequence)this.processInjectionSet[c.name]=c}Load(){TimerProcessInjector.ProcessInjection(),this.Loaded=!0}Init(){this.priority=999}static ProcessInjection(){this.InjectionSort();for(const c of this.processInjectionSequence)"number"==typeof c.timeInterval?this.TimerLastCycleCallSet[c.name]={timerLastCycleCall:-1,timeInterval:c.timeInterval,isDynamic:!1}:this.TimerLastCycleCallSet[c.name]={timerLastCycleCall:-1,timeInterval:c.timeInterval(),isDynamic:!0,getTimeInterval:c.timeInterval};conDebug(`[TimerProcessInjector] Injection Process... Injection Count: ${this.processInjectionSequence.length}`),hookFunction("TimerProcess",100,((args,next)=>{if("ChatRoom"!==CurrentScreen)return next(args);const currentTime=CommonTime();for(const c of this.processInjectionSequence)-1==this.TimerLastCycleCallSet[c.name].timerLastCycleCall&&this.TimerLastCycleCallSet[c.name].timerLastCycleCall,c.preconditions()&&this.TimerLastCycleCallSet[c.name].timerLastCycleCall+this.TimerLastCycleCallSet[c.name].timeInterval<=currentTime&&(c.code(),this.TimerLastCycleCallSet[c.name].timerLastCycleCall=currentTime,this.TimerLastCycleCallSet[c.name].isDynamic&&(this.TimerLastCycleCallSet[c.name].timeInterval=this.TimerLastCycleCallSet[c.name].getTimeInterval()));return next(args)}))}static InjectionSort(){this.processInjectionSequence=Object.values(this.processInjectionSet).sort(((a,b)=>a.priority-b.priority))}}var _a;TimerProcessInjector.processInjectionSequence=[],TimerProcessInjector.processInjectionSet={},TimerProcessInjector.TimerLastCycleCallSet={};class ModuleLoader{static InitModules(){return this.generateModule(),void 0!==this.mList&&this.mList.sort(((a,b)=>a.priority-b.priority)).forEach((m=>{m.Init(),conDebug(`模块 ${m.moduleName} 尝试初始化完成`),this.modulesInitCount++})),this.modulesInitCount}static LoadModules(){return void 0!==this.mList&&this.mList.forEach((m=>{m.Load(),conDebug(`模块 ${m.moduleName} 已尝试加载`),this.modulesLoadCount++})),this.CheckModulesLoaded()?(this.CompleteLoadingSuccessful=!0,window.XSActivity_Loaded=!0):(this.CompleteLoadingSuccessful=!1,window.XSActivity_Loaded=!1),this.modulesLoadCount}static CheckModulesLoaded(){if(7!=this.modulesLoadCount||this.modulesInitCount!=this.modulesLoadCount)return conDebug(`模块加载失败，模块数量不匹配，初始化数量为${this.modulesInitCount}模块加载数量为${this.modulesLoadCount}，应为7`),!1;if(void 0===_a.mList)return conDebug("模块加载失败，模块列表未初始化"),!1;for(const m of _a.mList)if(!m.Loaded)return conDebug(`模块加载失败，模块 ${m.moduleName} 未加载完成`),!1;return conDebug("模块加载完成"),!0}static pushToModules(module){this.modules[module.moduleName]=module,void 0!==this.mList?this.mList.push(module):this.mList=[module]}static generateModule(){let generateModuleCount=0;for(const mN in _a.ModuleMap)"Base"!==mN&&void 0===this.modules[mN]&&(_a.ModuleMap[mN](),generateModuleCount++);return generateModuleCount}}function init(){if(window.XSActivity_Loaded)return;const InitModuleCount=ModuleLoader.InitModules();conDebug({type:MSGType.Workflow_Log,name:"XSActivity Initialized!",content:`Init ${InitModuleCount} modules `});const moduleCount=ModuleLoader.LoadModules();if(conDebug({type:MSGType.Workflow_Log,name:"XSActivity Loaded!",content:`Loaded ${moduleCount} modules    FullLoaded: ${ModuleLoader.CompleteLoadingSuccessful}`}),!ModuleLoader.CompleteLoadingSuccessful)throw new Error("XSActivity load or init failed")}return _a=ModuleLoader,ModuleLoader.modules=MODULES,ModuleLoader.modulesLoadCount=0,ModuleLoader.modulesInitCount=0,ModuleLoader.CompleteLoadingSuccessful=!1,ModuleLoader.ModuleMap={Base:()=>{throw new Error("Base为模块的抽象类，请勿加载")},TimerProcessInjector:()=>{_a.pushToModules(new TimerProcessInjector("TimerProcessInjector"))},ActivityModule:()=>{_a.pushToModules(new ActivityModule("ActivityModule"))},ChatroomModule:()=>{_a.pushToModules(new ChatroomModule("ChatroomModule"))},CommandsModule:()=>{_a.pushToModules(new CommandsModule("CommandsModule"))},DataModule:()=>{_a.pushToModules(new DataModule("DataModule"))},DrawModule:()=>{_a.pushToModules(new DrawModule("DrawModule"))},ChessModule:()=>{_a.pushToModules(new ChessModule("ChessModule"))}},conDebug({name:"Start Init",type:MSGType.Workflow_Log,content:"Init wait"}),null!=CurrentScreen&&"Login"!==CurrentScreen||(hookFunction("LoginResponse",999,((args,next)=>{const response=args[0];if(response&&"string"==typeof response.Name&&"string"==typeof response.AccountName)for(const group of AssetFemale3DCG)if("ClothAccessory"===group.Group){for(const item of group.Asset)if("WombTattoos"===item.Name){item.BodyCosplay=!1;break}break}return next(args)})),hookFunction("LoginResponse",10,((args,next)=>{const result=next(args);conDebug({name:"Init! Login Response caught",content:args,type:MSGType.Workflow_Log});const response=args[0];return(response&&"string"==typeof response.Name&&"string"==typeof response.AccountName||!ModuleLoader.CompleteLoadingSuccessful)&&init(),result}))),exports.init=init,exports}({});
//# sourceMappingURL=XSActivity_dev.js.map
