{"version":3,"file":"XSActivity.js","sources":["../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../src/Modules/ModulesDict.ts","../src/changeLogData.ts","../src/utils.ts","../src/Modules/BaseModule.ts","../src/localization.ts","../src/Modules/MActivity.ts","../src/Modules/MChatroom.ts","../src/Modules/MChess.ts","../src/Modules/MCommand.ts","../src/Modules/MData.ts","../src/Modules/MDrawModule.ts","../src/Modules/MTimerProcessInjector.ts","../src/Modules/ModuleLoader.ts","../src/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.2.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const o=\"1.2.0\";function e(o){alert(\"Mod ERROR:\\n\"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&\"object\"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${e}\\nPatch1:\\n${t.get(e)||\"\"}\\nPatch2:\\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(\".\");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const c=e[a[a.length-1]];if(\"function\"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return((-1^e)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(c.toString().replaceAll(\"\\r\\n\",\"\\n\")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&\"object\"==typeof o||e(\"Failed to register mod: Expected info object, got \"+typeof o),\"string\"==typeof o.name&&o.name||e(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof o.name);let r=`'${o.name}'`;\"string\"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,\"string\"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&\"string\"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&\"object\"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s(\"unload\",(()=>u(g))),hookFunction:s(\"hookFunction\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);\"number\"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s(\"patchFunction\",((o,t)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))\"string\"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s(\"removePatches\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s(\"callOriginal\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s(\"getOriginalHash\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`);return l(o).originalHash}))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","import type { BaseModule } from \"./BaseModule\";\n\nexport const MODULES: { [key: string]: BaseModule } = {};\n\nwindow.MODULES = MODULES;","export enum ChangeType {\n    main,\n    dev\n}\ninterface ChangeLogObj {\n    version: string;\n    description: string;\n    type: ChangeType;\n    changes: string[];\n}\n\nexport const CHANGELOG: ChangeLogObj[] = [\n    {\n        version: \"0.0.1\",\n        description: \"Initial release\",\n        type: ChangeType.dev,\n        changes: [\"完成基本框架测试中...\"]\n    },\n    {\n        version: \"0.0.2\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\", \"添加部分动作\"]\n    },\n    {\n        version: \"0.0.3\",\n        description: \"修复\",\n        type: ChangeType.dev,\n        changes: [\"修复若干bug\", \"完善框架\"]\n    },\n    {\n        version: \"0.0.4\",\n        description: \"终于修复了重复加载的Bug\",\n        type: ChangeType.dev,\n        changes: [\"修复重复加载的BUG!!!!!! O.o\", \"修复若干其他bug\", \"完善框架\"]\n    },\n    {\n        version: \"0.0.5\",\n        description: \"优化\",\n        type: ChangeType.dev,\n        changes: [\"优化版本信息显示效果\"]\n    },\n    {\n        version: \"0.1.0\",\n        description: \"正式发布!当前功能如下: \",\n        type: ChangeType.main,\n        changes: [\"使用命令导出当前聊天室聊天记录 支持按时间范围导出 详细请查看 /xsa \", \"添加9个额外动作.\"]\n    },\n    {\n        version: \"0.1.1\",\n        description: \"添加了新的动作.\",\n        type: ChangeType.main,\n        changes: [\"添加了额外的17个动作\", \"添加 /xsa act 命令 显示添加的全部动作\", \"完成功能自动口吃处理命令:(` + message) --请输入 /xsa jieba 查看帮助\"]\n    },\n    {\n        version: \"0.1.2\",\n        description: \"添加修改边缘逻辑.\",\n        type: ChangeType.main,\n        changes: [\"修复一些bug\", \"修复了若干错别字\", \"修改边缘影响，现在每45秒钟 边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间，如果失去边缘状态，则同样的时间后失去一层抵抗难度，并且减少0.3~1.3秒高潮持续时间.\"]\n    },\n    {\n        version: \"0.1.3\",\n        description: \"添加修改边缘逻辑以及高潮效果.添加打断抵抗高潮的瘙痒动作.\",\n        type: ChangeType.main,\n        changes: [\"当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度\", \"当高潮或抵抗高潮时禁用输入框.\", \" ` 命令修改，现在可以在 ` 后或者 数字后跟一个字母 m ，这将在结巴位置添加呻吟效果.\"]\n    },\n    {\n        version: \"0.1.4\",\n        description: \"添加颜文字快速发送功能!\",\n        type: ChangeType.main,\n        changes: [\"添加快速发送颜文字的功能，以下为简单介绍，详细介绍请输入:/xsa kaomoji 查看。\\n使用=> |+[参数]  打开颜文字选择面板，| 为回车上面的按键，需要用 Shift+\\\\ 键打出 请输入 |help 查看全部参数\", \"调整忍耐高潮时每1.5秒有30%概率发送忍耐反应\", \"高潮后的高潮抵抗难度只降低一半而非原来的降低为0.\", \"重构注入到动作循环的逻辑\", \"重构模组的初始化与加载逻辑\"]\n    },\n    {\n        version: \"0.1.5\",\n        description: \"颜文字发送功能大修!\",\n        type: ChangeType.main,\n        changes: [\"颜文字表情功能大修! 新版使用方法请输入/xsa kaomoji 查看!\"]\n    },\n    {\n        version: \"0.2.0\",\n        description: \"淫纹大修!  待续!\",\n        type: ChangeType.main,\n        changes: [\"淫纹大修! 输入 /xsa yw 查看功能.\", \"高潮抵抗难度和温度计进度现在可以跨平台继承 换句话说 掉线也不会丢失相关数据\", \"取消了原来的边缘计数，现在边缘等级和抵抗难度使用同一变量\"]\n    },\n    {\n        version: \"0.3.0\",\n        description: \"添加了新的动作(移植了部分浮绘的Sub动作)，但暂时移除了关于边缘和高潮机制的修改!\",\n        type: ChangeType.main,\n        changes: [\"将浮绘的Sub动作模组的部分(大量!)动作移植过来，感谢浮绘的授权! 原动作Mod:[https://github.com/FuhuiNeko/BC_Mods]\",\n            \"暂时移除了边缘高潮机制的修改.\",\n            \"暂时移除了淫纹功能的大修\",\n            \"除了动作部分，功能将渐渐移植到新Mod\",\n            \"新Mod链接: [https://github.com/iceriny/XiaosuBCExpansion]\",\n            \"等新Mod功能完善将会在此Mod更新中提示!\",\n            \"新Mod的当前版本已完成: 高潮机制修改(本Mod移植)、边缘机制修改(本Mod移植)、\\n高潮余韵系统(暂无介绍，请自行探索 将来的版本将完善介绍，以及淫纹大修将依赖于此功能)\"]\n    },\n    {\n        version: \"0.3.3\",\n        description: \"添加了五子棋围棋对局功能!\",\n        type: ChangeType.main,\n        changes: ['五子棋或围棋的对局功能，详细介绍请输入 `/xsa chess -h` 查看。', '修复了部分bug。']\n    },\n    {\n        version: \"0.3.4\",\n        description: \"导出聊天记录可以精确到秒了; 命令增加自动补全\",\n        type: ChangeType.main,\n        changes: ['命令功能现在可以在输入首字母后自动补全了，例如，输入`/x`然后按Tab键将自动补全为`/xsa`，在`/xsa`后输入空格加`c`(即`/xsa c`)然后按下空格则自动补全为`/xsa chess`',\n        '现在聊天记录中的时间标记将显示精确到秒.', '现在按时间范围导出聊天记录的功能可以精确到秒了.']\n    },\n    {\n        version: \"0.3.5\",\n        description: \"添加聊天室聊天记录的右键菜单\",\n        type: ChangeType.main,\n        changes: ['右键聊天记录的条目可以呼出右键菜单', '如果有安装本插件 `回复` 功能显示特殊效果 如果没有安装被插件将显示为普通的正常说话的消息。']\n    },\n    {\n        version: \"0.4.0\",\n        description: \"添加本地化框架，添加英文翻译(Added English translation.)\",\n        type: ChangeType.main,\n        changes: ['Added English translation. Please go to: https://github.com/iceriny/XiaoSuActivity/issues for translation corrections']\n    }\n]","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport { PatchHook, GetDotedPathType } from \"bondage-club-mod-sdk\";\nimport { MODULES } from \"Modules/ModulesDict\";\nimport { CHANGELOG, ChangeType } from \"changeLogData\";\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----用得到的常数---- VVVVVVVVVVVVVVVVVVVVVVV    //\n\nexport const CSShref = DEBUG ? \"https://iceriny.github.io/XiaoSuActivity/dev/XSActivityStyle.css\" : \"https://iceriny.github.io/XiaoSuActivity/main/XSActivityStyle.css\";\n\n//   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----用得到的常数---- ^^^^^^^^^^^^^^^^^^^^^^^    //\n\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----SDK----  VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV    //\nexport const bcModSDK = bcModSDKRef.registerMod({\n    name: \"XiaoSuActivity\",\n    fullName: \"XiaoSu's Activity Expand\",\n    version: XSActivity_VERSION.startsWith(\"v\") ? XSActivity_VERSION.slice(1) : XSActivity_VERSION,\n    repository: \"https://github.com/iceriny/XiaoSuActivity\"\n});\n\n// export type PatchHook = (args: any[], next: (args: any[]) => any) => any;\nexport function hookFunction<TFunctionName extends string>(target: TFunctionName, priority: number, hook: PatchHook<GetDotedPathType<typeof globalThis, TFunctionName>>): () => void {\n    // *@ts-expect-error: 抑制1.1.0版本时的PatchHook类型不兼容\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n\n/*\nexport type PatchHook<TFunction extends AnyFunction = AnyFunction> = (args: [...Parameters<TFunction>], next: (args: [...Parameters<TFunction>]) => ReturnType<TFunction>) => ReturnType<TFunction>;\nexport type AnyFunction = (...args: any) => any;\nexport type GetDotedPathType<Base, DotedKey extends string> = DotedKey extends `${infer Key1}.${infer Key2}` ? GetDotedPathType<GetDotedPathType<Base, Key1>, Key2> : DotedKey extends keyof Base ? Base[DotedKey] : never;\nexport function hookFunction<TFunctionName extends string>(target: TFunctionName, priority: number, hook: PatchHook<GetDotedPathType<typeof globalThis, TFunctionName>>): () => void {\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n*/\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n    bcModSDK.patchFunction(functionName, patches);\n}\n\n//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----SDK----  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //\n/**\n * 发送*表情信息\n * @param msg 要发送的内容\n * @returns 无\n */\nexport function SendEmote(msg: string | null) {\n    if (msg == null) return;\n    ServerSend(\"ChatRoomChat\", { Content: msg, Type: \"Emote\" })\n}\n/**\n * 发送聊天消息\n * @param msg 发送的内容\n * @returns 无\n */\nexport function SendChat(msg: string | null) {\n    if (msg == null) return;\n    ServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n}\n\ntype LocalMessageCSSName = null | 'local-message' | 'trance-message' | 'XSA_Chess'\nexport function SendLocalMessage(msg: string, className: LocalMessageCSSName = null, timeout: number = 0) {\n    if (className !== null) {\n        msg = `<div class=\"${className}\">${msg}</div>`\n    }\n    if (timeout === 0) ChatRoomSendLocal(msg)\n    else ChatRoomSendLocal(msg, timeout);\n}\n/**\n * 发送动作消息\n * @param msg 动作消息的内容\n * @param sourceCharacter 动作的来源 id\n * @param targetCharacter 动作的目标 id\n */\nexport function SendActivity(msg: string, sourceCharacter: number, targetCharacter?: number) {\n\n    const sourceCharacterObj: Character | undefined = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter),\n        targetCharacterObj: Character | undefined = targetCharacter ? ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter) : undefined;\n\n    if (sourceCharacterObj === undefined && targetCharacterObj === undefined) return;\n\n    const sourceCharacterNickname = sourceCharacterObj ? CharacterNickname(sourceCharacterObj) : \"\",\n        targetCharacterNickname = targetCharacterObj ? CharacterNickname(targetCharacterObj) : \"\";\n    const resultDict: ChatMessageDictionary = [\n        { Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSA_ActMessage\", Text: msg.replaceAll(\"{source}\", sourceCharacterNickname).replaceAll(\"{target}\", targetCharacterNickname) }\n    ]\n\n    resultDict.push({ SourceCharacter: sourceCharacter });\n    if (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"SendActivity()\",\n        content: {\n            Type: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n        }\n    });\n\n    ServerSend(\"ChatRoomChat\", {\n        Type: \"Activity\", Content: \"XSA_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n    });\n}\n\n\n//   ^^^^^^^^^^^^^^^  ----游戏函数调用----  ^^^^^^^^^^^^^^^    //\n\n\n/* 发送的数据包对象的实例\n{\n    \"Sender\": 150217,\n    \"Content\": \"ChatOther-ItemTorso-Tickle\",\n    \"Type\": \"Activity\",\n    \"Dictionary\": [\n        {\n            \"SourceCharacter\": 150217\n        },\n        {\n            \"TargetCharacter\": 155979\n        },\n        {\n            \"Tag\": \"FocusAssetGroup\",\n            \"FocusGroupName\": \"ItemTorso\"\n        },\n        {\n            \"ActivityName\": \"Tickle\"\n        },\n        {\n            \"Tag\": \"fbc_nonce\",\n            \"Text\": 9\n        }\n    ],\n    \"MBCHC_ID\": 44\n}\n*/\n/**\n */\n// Utils\n/* 描述中表示自己的占位符 */\n\nconst selfPlaceholder = '{source}';\n/** 描述中表示目标的占位符 */\n\nconst targetPlaceholder = '{target}';\n/**\n * 包含全局占位符的对象 s:自己  t:目标\n */\nexport const PH = {\n    s: selfPlaceholder,\n    t: targetPlaceholder\n}\n/**\n * Debug信息对象接口\n */\ninterface XSDebugMSG {\n    name?: string;\n    type?: MSGType;\n    content: any;\n}\n/**\n * Debug信息类型\n */\nexport enum MSGType {\n    DebugLog,\n    Workflow_Log,\n}\n/**\n * 发送debug信息到控制台\n * @param msg 信息\n * @param color 可选颜色参数\n * @param style 可选的css风格参数\n * @returns 无\n */\nexport function conDebug(msg: XSDebugMSG | string, isError: boolean = false, color: string | null = null, style: string | null = null) {\n    if (DEBUG === false) return;\n\n\n    const result: object = typeof msg === \"string\" ? {\n        name: \"XiaoSuActivity_Debug\",\n        type: MSGType.DebugLog,\n        content: msg,\n        time: new Date().toLocaleString(),\n        ModVersion: XSActivity_VERSION,\n    } : {\n        name: msg.name,\n        type: msg.type,\n        content: msg.content,\n        time: new Date().toLocaleString(),\n        ModVersion: XSActivity_VERSION\n    }\n    if (style) {\n        console.debug(\"%c小酥的模组信息: \", style, result);\n    } else {\n        let theColor = 'rgba(191, 154, 175, 1)';\n        if (isError) {\n            theColor = 'rgba(255, 0, 0, 1)'\n        }\n        if (color) {\n            theColor = color\n        }\n        console.debug(\"%c小酥的模组信息: \", `background-color: ${theColor}; font-weight: bold;`, result);\n    }\n}\n\n/**\n * 获取已加载的模型实例\n * @param moduleName 模型名称\n * @returns 已加载的模型实例\n */\nexport function GetModule<T>(moduleName: XS_ModuleName): T {\n    return MODULES[moduleName] as T;\n}\n\n/**\n * 处理获取到的元素中时间范围外的元素 次工具在导出聊天记录时使用\n * @param element 获取的元素\n * @param time_limit 时间范围\n */\nfunction removeElementsByTimeRange(element: HTMLElement, time_limit: timeRange) {\n    const elements = element.querySelectorAll('[data-time]');\n\n    elements.forEach((element) => {\n        const dataTimeValue = element.getAttribute('data-time');\n\n        if (dataTimeValue) {\n            // 将字符串时间值转换为 Date 对象\n            const currentTime = new Date(`2000-01-01 ${dataTimeValue}`);\n            const minTimeDate = new Date(`2000-01-01 ${time_limit.minTime}`);\n            const maxTimeDate = new Date(`2000-01-01 ${time_limit.maxTime}`);\n\n            // 判断是否跨越了 00:00\n            if (maxTimeDate < minTimeDate) {\n                maxTimeDate.setDate(maxTimeDate.getDate() + 1);\n            }\n\n            // 判断是否在时间范围内\n            if (currentTime < minTimeDate || currentTime > maxTimeDate) {\n                // 使用 remove 方法\n                element.remove();\n\n                // 或者使用 parentNode.removeChild 方法\n                // element.parentNode.removeChild(element);\n            }\n        }\n    });\n}\n\n\n/**\n * 传入{@link copyAndDownloadHtmlElement}的最小时间值和最大时间值\n */\nexport interface timeRange {\n    minTime: string;\n    maxTime: string;\n}\n\n\n/**\n * 将传入的元素复制并提供下载\n * @param element 需要下载的原始元素\n * @param fileName 下载的文件名字\n * @param time_limit 时间范围\n * @returns void\n */\nexport function copyAndDownloadHtmlElement(element: HTMLElement | null, fileName: string, time_limit: timeRange | null = null) {\n    // 创建新文档\n    const newDoc = document.implementation.createHTMLDocument();\n\n    if (element === null) {\n        conDebug(\"element is null\");\n        return;\n    }\n\n    function clearElementStyle(element: HTMLElement) {\n        const style = element.style;\n        // 逐个删除属性\n        while (style.length > 0) {\n            style.removeProperty(style[0]);\n        }\n    }\n\n    // 复制元素\n    const copiedElement = element.cloneNode(true) as HTMLElement;\n\n    if (time_limit !== null) {\n        removeElementsByTimeRange(copiedElement, time_limit);\n    }\n\n    clearElementStyle(copiedElement);\n\n    copiedElement.style.fontSize = \"14.784px\";\n    copiedElement.style.fontFamily = \"Arial, sans-serif\";\n    copiedElement.style.display = \"flex\";\n    copiedElement.style.flexDirection = \"column\";\n    copiedElement.style.width = \"70vw\";\n\n    newDoc.body.style.display = \"flex\";\n    newDoc.body.style.alignItems = \"center\";\n    newDoc.body.style.justifyContent = \"center\";\n    newDoc.body.style.backgroundColor = \"#f2f2f2\";\n    // 将复制的元素添加到新文档的 body 中\n    newDoc.body.appendChild(copiedElement);\n\n    // 将新文档转换为 HTML 字符串\n    const htmlString = newDoc.documentElement.outerHTML;\n\n    // 创建一个下载链接\n    const blob = new Blob([htmlString], { type: 'text/html' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = fileName;\n\n    // 触发下载\n    link.click();\n}\n\n/**\n * 发送更新信息到本地\n */\nexport function sendChangeLog() {\n    let content = '';\n    for (const c in CHANGELOG) {\n        const version = CHANGELOG[c].version;\n        const type = CHANGELOG[c].type == ChangeType.main ? \"主版本\" : \"开发版本\";\n        const description = CHANGELOG[c].description;\n        const changes = CHANGELOG[c].changes;\n\n        let changesString = '<ul style=\"list-style-position: inside;  padding-left: 0;\">';\n        for (const s of changes) {\n            changesString += `<li>${s}</li>`;\n        }\n        changesString += '</ul>';\n\n        const backgroundColor = version == XSActivity_VERSION && (!DEBUG && type === \"主版本\") ? \"#764460\" : \"#442E3A\"\n        const styleForP = 'style=\"font-weight: bold; margin: 0;\"'\n        content += `<div style=\"background-color: ${backgroundColor}; display: flex; flex-direction: column;\"> <p ${styleForP}>版本: ${version}</p> <p ${styleForP}>类型: ${type}</p> <p ${styleForP}>描述: ${description}</p><p>----</p> <p ${styleForP}>改动: ${changesString}</p><p>========</p></div>`\n    }\n    content += \"<p>==当前页面显示时间1分钟==</p>\"\n    ChatRoomSendLocal(content, 60000);\n}\n\n/**\n * 发送最新的更新信息到本地\n */\nexport function sendLastChangeLog() {\n    let content = '';\n    const c = CHANGELOG[CHANGELOG.length - 1];\n    const version = c.version;\n    const type = c.type == ChangeType.main ? \"主版本\" : \"开发版本\";\n    const description = c.description;\n    const changes = c.changes;\n    const styleForP = 'style=\"margin: 0;\"'\n    const styleForTitle = 'style=\"font-size: 1.5em;font-weight: bold; margin: 0;\"'\n\n    for (const s of changes) {\n        content += `<p ${styleForP}>${s}</p>`;\n    }\n    content = `<p ${styleForTitle}>版本更新: ${version}</p>\n    <p ${styleForP}>类型: ${type}</p>\n    <p ${styleForP}>描述: ${description}</p>\n    <p>----</p>\n    <p ${styleForP}>改动: ${content}</p>\n    <p>========</p>`\n\n    content += \"<p>==当前页面显示时间30秒 再次查看请输入`/xsa new`==</p>\"\n    ChatRoomSendLocal(content, 30000);\n}\n\n\n/**\n * 检测数字是否被整除\n * @param num 要检测的数字\n * @param divisor 除数\n * @returns 是否被整除\n */\nexport function isDivisible(num: number, divisor: number): boolean {\n    return num % divisor === 0;\n}\n\n\n// 将滚动条滚动到底部\nexport function scrollToBottom(element: HTMLElement) {\n    const maxScrollTop = element.scrollHeight - element.clientHeight;\n    element.scrollTo({\n        top: maxScrollTop,\n        behavior: 'smooth'  // 可选：实现平滑滚动效果\n    });\n}\n\n/**\n * 确定是否应渲染资产层，假设资产本身是可见的。\n * @param C - 角色，穿戴该物品的角色\n * @param layer - 需要检查可见性的层\n * @param asset - 层所属的资产\n * @param typeRecord - 如果有的话，物品的类型记录\n * @returns - 如果层应显示则返回 TRUE，否则返回 FALSE\n */\nexport function CharacterAppearanceIsLayerIsHave(C: Character, layer: AssetLayer, typeRecord: TypeRecord | null = null) {\n    return !(layer.AllowTypes && typeRecord !== null && !CharacterAppearanceAllowForTypes(layer.AllowTypes, typeRecord));\n}\n\n\n/**\n * 获取一个随机整数\n * @param min 最小值\n * @param max 最大值\n * @returns 返回的随机整数\n */\nexport function GetRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","\n/**\n * 完整模块数量\n */\nexport const FullModCount = 7; //8\n\n\n/**\n * 模块的基础抽象类\n */\nexport abstract class BaseModule {\n    /** 模块名 */\n    moduleName: XS_ModuleName;\n    /** 模块优先级 数越大越靠后加载 */\n    priority: number = 0;\n    /** 是否加载完成 */\n    Loaded: boolean = false;\n\n    constructor(moduleName: XS_ModuleName) {\n        this.moduleName = moduleName;\n    }\n\n    /**\n     * 初始化函数\n     */\n    public abstract Init(): void\n    /**\n     * 加载函数\n     */\n    public abstract Load(): void\n\n    // protected abstract getSelfString(key: string, ...params: unknown[]): string;\n}","import { conDebug, hookFunction } from \"utils\";\n\nexport class Localization {\n    private static readonly LINK: string = DEBUG ? 'https://iceriny.github.io/XiaoSuActivity/dev/' : 'https://iceriny.github.io/XiaoSuActivity/main/'\n    public static STRINGS: IString;\n\n    public static init() {\n        conDebug(\"本地化模块初始化.\");\n        hookFunction(\"TranslationNextLanguage\", 0, (args, next) => {\n            next(args);\n            Localization.init();\n        })\n        \n        this.getLangJson();\n    }\n\n    private static getCount = 0;\n    private static getLangJson(langCode?: string) {\n        const L = langCode ? langCode : localStorage.getItem(\"BondageClubLanguage\");\n        const lang = L ?? \"CH\";\n\n        const href = this.LINK + `${lang}.json`;\n\n        conDebug(\"开始获取本地化文件.\");\n        conDebug(`获取地址: ${href}`);\n        fetch(href)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                this.getCount = 0;\n                this.STRINGS = data;\n                window.XSA_STRINGS = this.STRINGS\n                conDebug({\n                    name: \"本地化文件加载完成.\",\n                    content: data\n                });\n            })\n            .catch((error) => {\n                this.getCount++;\n                if (this.getCount < 3) {\n                    console.error(\"获取翻译文件失败: \", error, \"\\n1秒后重新获取.\");\n                    setTimeout(() => {\n                        this.getLangJson();\n                    }, 1000);\n                } else {\n                    if (lang === \"CH\") console.error(\"获取翻译文件失败: \", error, \"\\n3次失败.\")\n                    else {\n                        console.error(\"获取翻译文件失败: \", error, \"\\n3次失败, 尝试获取默认的中文翻译.\");\n                        this.getLangJson(\"CH\");\n                    }\n                }\n            });\n    }\n\n    public static get<T extends FirstStringKey>(firstKey: T, key: strKey<T>, ...param: unknown[]): string {\n        return new STR(firstKey, key)\n            .SlotReplace(...param)\n            .Personalize()\n            .S;\n    }\n\n}\n\nclass STR<T extends FirstStringKey> {\n    private str: string;\n    public get S(): string {\n        return this.str;\n    }\n\n    public constructor(firstKey: T, key: strKey<T>) {\n        if (Localization.STRINGS && Localization.STRINGS[firstKey] && Localization.STRINGS[firstKey][key]) {\n            this.str = Localization.STRINGS[firstKey][key] as string;\n        } else {\n            this.str = \"[STRING_RETRIEVAL_FAILED!!]\";\n        }\n    }\n\n    public SlotReplace(...param: unknown[]): STR<T> {\n        this.str = this.str.replace(/\\{([0-9]+)\\}/g, (match, digits) => {\n            const index = parseInt(digits, 10); // 将匹配到的数字字符串转换为数字索引\n            try {\n                return (param[index] as string).toString();\n            } catch (error) {\n                console.error(`Index ${index} out of range in parameters array.`, error);\n                return match;\n            }\n        });\n        return this;\n    }\n\n    public Personalize(): STR<T> {\n        this.str = this.str.replace(/\\{(he|her|it|they)\\}/g, (match, pronoun) => {\n            try {\n                return Localization.STRINGS.Other[pronoun as strKey<'Other'>] as string;\n            } catch (error) {\n                console.error(`未获取到人称代词。`, error);\n                return match;\n            }\n        });\n        return this;\n    }\n\n\n}","import { conDebug, hookFunction, MSGType, SendActivity } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\nimport { Localization as L } from \"localization\";\n\n/*\n * 动作的限定条件信息对象\n*/\ninterface prerequisite {\n    Name: XSA_ActivityPrerequisite;\n    Action: (args: Array<unknown>) => boolean;\n}\n\n/**\n * 描述中表示自己的占位符\n */\nconst selfPlaceholder = \"SourceCharacter\";\n/** 描述中表示目标的占位符 */\nconst targetPlaceholder = \"TargetCharacter\";\n\n/**\n * 动作模块的类\n * 涉及功能有\"\n * - 添加自定义动作\n * - 接受特定动作的特殊效果 当前为瘙痒增加高潮抵抗难度\n */\nexport class ActivityModule extends BaseModule {\n    public Init(): void {\n        this.priority = 50;\n    }\n    public Load(): void {\n        this.LoadActivity();\n        this.hookListHandler();\n        this.Loaded = true;\n    }\n\n    private getStr(key: string, ...params: unknown[]): string {\n        return L.get(\"Activity\", key as strKey<\"Activity\">, ...params);\n    }\n\n    /**\n     * 狗子函数队列处理\n     */\n    hookListHandler(): void {\n        /**\n         * 处理没有装本插件的玩家接受到的消息\n         * 原理为使用hookFunction来拦截ServerSend函数的执行,并判断消息中是否包含自定义活动的关键词,如果包含则执行自定义操作\n         * - 即替换原本的描述\n         */\n        hookFunction(\"ServerSend\", 5, (args, next) => { // ServerSend 只能检测自己发出的聊天信息 可以用来替换自己发出去的文字\n            const data = args[1] as ServerChatRoomMessage;\n            if (args[0] === \"ChatRoomChat\" && data.Type === \"Activity\" && data.Dictionary) {\n                // const actName = data.Dictionary?[3].ActivityName ?? \"\";\n                const activityNameDictEntry = data.Dictionary.find(d => 'ActivityName' in d) as ActivityNameDictionaryEntry | undefined;\n                const actName = activityNameDictEntry?.ActivityName ?? \"\";\n                if (actName.indexOf(\"XSAct_\") == 0) { // 这个条件表示只有当消息中包含以 \"XSAct_\" 开头的自定义活动时,才会执行下面的操作\n                    // 拦截自定义活动的发送并执行自定义操作\n                    const { substitutions } = ChatRoomMessageRunExtractors(data, Player)\n                    let msg = ActivityDictionaryText(data.Content);\n                    msg = CommonStringSubstitute(msg, substitutions ?? [])\n                    data.Dictionary.push({\n                        Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD \" + data.Content,\n                        Text: msg\n                    });\n                }\n            }\n            return next(args);\n        });\n\n        /**\n         * 1. 当条件关键词为自定义关键词时\n         * - 处理限制条件\n         * 2. 当关键词不是自定义关键词时\n         * - 执行原方法\n         */\n        hookFunction(\"ActivityCheckPrerequisite\", 500, (args, next) => {\n            const prereq = args[0];\n            if (prereq in this.prerequisiteDict) {\n                const customPrereq = this.prerequisiteDict[prereq as XSA_ActivityPrerequisite];\n                return customPrereq.Action(args);\n            } else {\n                return next(args);\n            }\n        });\n\n        /**\n         * args[0]: \"Assets/Female3DCG/Activity/XSAct_XXX.png\"\n         */\n        hookFunction(\"DrawImageResize\", 10, (args, next) => {\n            const source = args[0];\n\n            if (typeof source !== \"string\") return next(args);\n            // 使用 split 方法拆分字符串\n            const parts = source.split('/');\n            const fileName = parts[parts.length - 1];  // 获取文件名部分，即 \"XSAct_XXX.png\"\n\n            // 进一步处理文件名，去掉 \".png\" 后缀\n            const aName = fileName.replace('.png', '');\n\n            if (aName.indexOf(\"XSAct_\") == 0) {\n                const resultName = `Assets/Female3DCG/Activity/${this.activityToAddDict[aName as XSA_ActivityName].img}.png`;\n                args[0] = resultName;\n                return next(args);\n            }\n            return next(args);\n        });\n\n\n\n        /** 瘙痒动作增加抵抗难度 */\n        hookFunction(\"ChatRoomMessage\", this.priority, (args, next) => {\n            const data = args[0];\n            conDebug({\n                name: \"ChatRoomMessage\",\n                type: MSGType.DebugLog,\n                content: data\n            });\n            // 确定是否是活动消息\n            if (data.Type == \"Activity\" && data.Dictionary) {\n\n                const activityNameDictEntry = data.Dictionary.find(d => 'ActivityName' in d) as ActivityNameDictionaryEntry | undefined;\n                const sc = data.Dictionary.find(d => \"SourceCharacter\" in d) as SourceCharacterDictionaryEntry | undefined\n                const tc = data.Dictionary.find(d => \"TargetCharacter\" in d) as TargetCharacterDictionaryEntry | undefined;\n\n                const actName = activityNameDictEntry?.ActivityName as string;\n                const SourceCharacter = sc?.SourceCharacter as number;\n                const TargetCharacter = tc?.TargetCharacter as number;\n                if (actName == \"Tickle\" && !Number.isNaN(TargetCharacter) && TargetCharacter == Player?.MemberNumber) {// 瘙痒动作且目标为自己\n                    conDebug({\n                        type: MSGType.DebugLog,\n                        name: \"检测到自己为目标的瘙痒动作\",\n                        content: {\n                            高潮阶段: Player.ArousalSettings?.OrgasmStage,\n                            抵抗难度: ActivityOrgasmGameResistCount\n                        }\n                    });\n                    if (Player.ArousalSettings?.OrgasmStage == 1) {// 如果当前正在抵抗则添加难度并重新开始抵抗游戏\n                        conDebug({\n                            type: MSGType.DebugLog,\n                            name: \"捕捉到抵抗场景，开始截断抵抗 增加难度 并重新触发\",\n                            content: {\n                                高潮阶段: Player.ArousalSettings?.OrgasmStage,\n                                抵抗难度: ActivityOrgasmGameResistCount\n                            }\n                        });\n                        // 增加抵抗难度\n                        ActivityOrgasmGameResistCount++;\n                        // 发送活动消息\n                        SendActivity(L.get(\"Activity\", \"XSAct.Tickle.Resist\"), SourceCharacter, TargetCharacter)\n                        // 打断当前高潮\n                        ActivityOrgasmStop(Player, 99.5);\n                        // 触发新的高潮\n                        ActivityOrgasmPrepare(Player);\n                    }\n                }\n            }\n            next(args);\n        });\n    }\n\n    //============================================================\n\n    /**\n     * 载入自定义动作\n     */\n    LoadActivity(): void {\n        conDebug(\"加载自定义活动\");\n        let actLength = 0;\n        this.activityDictAdd();\n        for (const aN in this.activityToAddDict) { // a 为活动名\n\n            this.pushToActivity(this.activityToAddDict[aN as XSA_ActivityName].act);\n\n            //加载文字描述\n            const activityDesc = this.activityToAddDict[aN as XSA_ActivityName].desc;\n\n            activityDesc?.forEach((d) => {\n                ActivityDictionary?.push(d);\n            });\n            actLength += 1;\n        }\n        conDebug(`自定义活动加载完成.动作数: ${actLength}`)\n    }\n    //============================================================\n    /**\n     * 初始化活动的文字描述。\n     */\n    activityDictAdd() {\n        // const outputDesc: { [key in string]: string } = {};\n\n        for (const a in this.activityToAddDict) {\n            const pendingActivity = this.activityToAddDict[a as XSA_ActivityName];\n\n            const actName = pendingActivity.act.Name;\n            const nameWithoutPrefix = L.get(\"Activity\", actName.substring(6) as XSA_ActivityName_onlyName);\n            const actTarget = pendingActivity.act.Target;\n            const actTargetSelf = pendingActivity.act.TargetSelf;\n\n            const addedValues: string[][] = [];\n\n            addedValues.push([`ActivityAct_${actName}`, `${nameWithoutPrefix}`]);\n            addedValues.push([`Activity${actName}`, `${nameWithoutPrefix}`]);\n            if (actTarget.length > 0) {\n                for (let i = 0; i < actTarget.length; i++) {\n                    const aT = actTarget[i];\n                    addedValues.push([`Label-ChatOther-${aT}-${actName}`,\n                    `${nameWithoutPrefix}${pendingActivity.isBase ? L.get(\"Activity\", aT) : ''}`]);\n                    addedValues.push([`ChatOther-${aT}-${actName}`,\n                    this.getStr(`${nameWithoutPrefix}.Desc.0`, selfPlaceholder, targetPlaceholder, L.get(\"Activity\", aT))]);\n                    //pendingActivity.descString[0].replace(this.bodyNamePlaceholder, L.get(\"Activity\", aT))]);\n                }\n            }\n            if (typeof actTargetSelf !== 'undefined' && typeof actTargetSelf !== 'boolean' && actTargetSelf.length > 0) {\n                for (const aTS of actTargetSelf) {\n                    addedValues.push([`Label-ChatSelf-${aTS}-${actName}`,\n                    `${nameWithoutPrefix}${pendingActivity.isBase ? L.get(\"Activity\", aTS) : ''}`]);\n                    addedValues.push([`ChatSelf-${aTS}-${actName}`,\n                    this.getStr(`${nameWithoutPrefix}.Desc.1`, selfPlaceholder, targetPlaceholder, L.get(\"Activity\", aTS))]);\n                    // pendingActivity.descString[1].replace(this.bodyNamePlaceholder, L.get(\"Activity\", aTS))]);\n                }\n            }\n            pendingActivity.desc = addedValues;\n\n            // outputDesc[`${nameWithoutPrefix}_Desc_0`] = pendingActivity.descString[0]\n            // outputDesc[`${nameWithoutPrefix}_Desc_1`] = pendingActivity.descString[1]\n            // console.log(nameWithoutPrefix)\n        }\n        // console.log(outputDesc)\n    }\n    // private readonly groupNameDict: { [name in AssetGroupItemName]: string } = {\n    //     'ItemAddon': '身体(附加)', 'ItemArms': '手臂', 'ItemBoots': '脚', 'ItemBreast': '乳房',\n    //     'ItemButt': '屁股', 'ItemDevices': '身体(装置)', 'ItemEars': '耳朵', 'ItemFeet': '小腿',\n    //     'ItemHandheld': '手', 'ItemHands': '手', 'ItemHead': '头', 'ItemHood': '头发', 'ItemLegs': '大腿',\n    //     'ItemMisc': '身体(杂项)', \"ItemMouth\": '嘴巴', 'ItemMouth2': '嘴巴', 'ItemMouth3': '嘴巴',\n    //     'ItemNeck': '脖子', 'ItemNeckAccessories': '脖子', 'ItemNeckRestraints': '脖子', 'ItemNipples': '乳头',\n    //     'ItemNipplesPiercings': '乳头', 'ItemNose': '鼻子', 'ItemPelvis': '小腹', 'ItemTorso': '肋部', 'ItemTorso2': '肋部',\n    //     'ItemVulva': '阴道', 'ItemVulvaPiercings': '阴蒂'\n    // }\n    // private readonly bodyNamePlaceholder = '{group}'\n    /**\n     * 将传入的活动对象载入\n     * @param activity 将要载入的活动对象\n     */\n    private pushToActivity(activity: Activity) {\n        ActivityFemale3DCG.push(activity);\n        ActivityFemale3DCGOrdering.push(activity.Name);\n        //}\n    }\n\n    //============================================================\n\n\n    // SourceCharacter 为动作发起人  TargetCharacter 为动作目标人\n    /**\n     * 将要添加的动作字典\n     * @interface Activity - Activity对象的属性如下定义:\n     * @param  Name - 活动的名称\n     * @param  MaxProgress - 活动的最大进度\n     * @param  MaxProgressSelf - 活动自身的最大进度\n     * @param  Prerequisite - 活动的前置条件\n     * @param  Target - 活动的目标\n     * @param  TargetSelf - 活动的自身目标\n     * @param  Reverse - 是否反转前置条件的判断\n     * @param  MakeSound - 是否播放声音 used for setting {@link ExtendedItemAutoPunishHandled} \n     * @param  StimulationAction - 当使用该活动时触发的动作\n     * @param  ActivityExpression - 活动表达式,包含一系列的动作 该活动的默认表达式。可以使用资产上的ActivityExpression进行覆盖。\n     * -------\n     * @desc - desc默认需要为null,当活动初始化时,会自动添加文字描述\n     * @descString - 两个元素的数组 [0]为如果目标为他人的描述，[1]为目标自己的描述\n     * @img - 指定的动作图片\n     * @isBase - 是否是基础动作 基础动作将会自动把名称中的 @bodyNamePlaceholder 换成 `{group}` 并在添加动作时动态的将其替换为目标部位的名称\n    */\n    activityToAddDict: { [ActivityIndex in XSA_ActivityName]:\n        { act: Activity, desc: null | string[][], /*descString: [string, string],*/ img: ActivityName, isBase?: true } } = {\n            XSAct_眯眼: {\n                act: {\n                    Name: \"XSAct_眯眼\",\n                    Target: [],\n                    TargetSelf: [\"ItemHead\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['CanLook']\n                },\n                desc: null,\n                // descString: [\"\", L.get(\"Activity\", \"眯眼_Desc_1\", selfPlaceholder)],\n                img: \"RestHead\"\n            },\n            XSAct_眼神飘忽: {\n                act: {\n                    Name: \"XSAct_眼神飘忽\",\n                    Target: [],\n                    TargetSelf: [\"ItemHead\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['CanLook']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}眼神飘忽的左看右看.`],\n                img: \"RestHead\"\n            },\n            XSAct_甩头发: {\n                act: {\n                    Name: \"XSAct_甩头发\",\n                    Target: [],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"ItemHoodCovered\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}甩动着头发.`],\n                img: \"RestHead\"\n            },\n            XSAct_大力甩头发: {\n                act: {\n                    Name: \"XSAct_大力甩头发\",\n                    Target: [],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"ItemHoodCovered\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}连连摇头，慌乱的甩动着头发.`],\n                img: \"RestHead\"\n            },\n            XSAct_轻抚发梢: {\n                act: {\n                    Name: \"XSAct_轻抚发梢\",\n                    Target: [\"ItemHood\"],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"UseArms\"]\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}轻柔抚动着${targetPlaceholder}的头发.`, `${selfPlaceholder}轻柔抚动着自己的头发.`],\n                img: \"RestHead\"\n            },\n            XSAct_叼起头发: {\n                act: {\n                    Name: \"XSAct_叼起头发\",\n                    Target: [\"ItemHood\"],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 50,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"],\n                    StimulationAction: \"Talk\"\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}轻轻咬起${targetPlaceholder}的头发.`, `${selfPlaceholder}轻轻咬起自己的头发.`],\n                img: \"SiblingsCheekKiss\"\n            },\n            XSAct_嗅头发: {\n                act: {\n                    Name: \"XSAct_嗅头发\",\n                    Target: [\"ItemHood\"],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 30,\n                    MaxProgressSelf: 30,\n                    Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"ItemNoseCovered\"],\n                    StimulationAction: \"Talk\"\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}在${targetPlaceholder}的发间嗅着，鼻息弥漫着${targetPlaceholder}的发香.`, `${selfPlaceholder}撩起自己的头发轻轻嗅着.`],\n                img: \"SiblingsCheekKiss\"\n            },\n            XSAct_绕头发: {\n                act: {\n                    Name: \"XSAct_绕头发\",\n                    Target: [\"ItemHood\"],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 30,\n                    MaxProgressSelf: 30,\n                    Prerequisite: [\"UseArms\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"]\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}勾起一缕${targetPlaceholder}的发丝，在指尖绕来绕去.`, `${selfPlaceholder}勾起自己的一缕头发在指尖绕来绕去.`],\n                img: \"SiblingsCheekKiss\"\n            },\n            XSAct_皱鼻子: {\n                act: {\n                    Name: \"XSAct_皱鼻子\",\n                    Target: [],\n                    TargetSelf: [\"ItemNose\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"ItemHoodCovered\", \"ItemNoseCovered\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}皱了皱自己的鼻头.`],\n                img: \"RestHead\"\n            },\n            XSAct_打喷嚏: {\n                act: {\n                    Name: \"XSAct_打喷嚏\",\n                    Target: [],\n                    TargetSelf: [\"ItemNose\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\", \"ItemHoodCovered\"],\n                    StimulationAction: \"Talk\"\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}打了个喷嚏.`],\n                img: \"Kiss\"\n            },\n            XSAct_深呼吸: {\n                act: {\n                    Name: \"XSAct_深呼吸\",\n                    Target: [],\n                    TargetSelf: [\"ItemNose\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"ItemNoseCovered\"],\n                    StimulationAction: \"Talk\"\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}深深的吸了口气.`],\n                img: \"Kiss\"\n            },\n            XSAct_低头: {\n                act: {\n                    Name: \"XSAct_低头\",\n                    Target: [],\n                    TargetSelf: [\"ItemHood\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"ItemHoodCovered\", \"MoveHead\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}红润着脸蛋低头逃避.`],\n                img: \"RestHead\"\n            },\n            XSAct_恳求的摇头: {\n                act: {\n                    Name: \"XSAct_恳求的摇头\",\n                    Target: [\"ItemHead\"],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"MoveHead\"]\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}对着${targetPlaceholder}的方向恳求的摇头.`, ``],\n                img: \"RestHead\"\n            },\n            XSAct_恳求的看: {\n                act: {\n                    Name: \"XSAct_恳求的看\",\n                    Target: [\"ItemHead\"],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"CanLook\"]\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}汪着眼睛恳求的看着${targetPlaceholder}.`, \"\"],\n                img: \"RestHead\"\n            },\n            XSAct_内八夹腿: {\n                act: {\n                    Name: \"XSAct_内八夹腿\",\n                    Target: [],\n                    TargetSelf: [\"ItemLegs\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}通红的脸蛋忍耐着快感，大腿紧紧夹起来，摆出着内八的姿势，身体微微颤抖.`],\n                img: \"Kick\"\n            },\n            XSAct_噘嘴: {\n                act: {\n                    Name: \"XSAct_噘嘴\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}有些不满的噘起嘴巴.`],\n                img: \"PoliteKiss\"\n            },\n            XSAct_抿住嘴巴: {\n                act: {\n                    Name: \"XSAct_抿住嘴巴\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}抿住嘴巴.`],\n                img: \"PoliteKiss\"\n            },\n            XSAct_瘪嘴: {\n                act: {\n                    Name: \"XSAct_瘪嘴\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}瘪着嘴巴，一副委屈的样子.`],\n                img: \"PoliteKiss\"\n            },\n            XSAct_坐直身体: {\n                act: {\n                    Name: \"XSAct_坐直身体\",\n                    Target: [],\n                    TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}挺直了腰，坐直了身体.`],\n                img: \"Kick\"\n            },\n            XSAct_挺胸收腹: {\n                act: {\n                    Name: \"XSAct_挺胸收腹\",\n                    Target: [],\n                    TargetSelf: [\"ItemBreast\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}挺起胸部，微收下巴，腹部用力收腰.`],\n                img: \"Kick\"\n            },\n            XSAct_站直身体: {\n                act: {\n                    Name: \"XSAct_站直身体\",\n                    Target: [],\n                    TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"NotKneeling\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}挺胸收腹，努力绷紧小腿，站直了身体.`],\n                img: \"Kick\"\n            },\n            XSAct_身体一颤: {\n                act: {\n                    Name: \"XSAct_身体一颤\",\n                    Target: [],\n                    TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}的身体猛然颤抖了一下.`],\n                img: \"Kick\"\n            },\n            XSAct_活动大腿: {\n                act: {\n                    Name: \"XSAct_活动大腿\",\n                    Target: [],\n                    TargetSelf: [\"ItemLegs\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}尝试活动了一下腿部.`],\n                img: \"Kick\"\n            },\n            XSAct_活动手臂: {\n                act: {\n                    Name: \"XSAct_活动手臂\",\n                    Target: [],\n                    TargetSelf: [\"ItemArms\"],\n                    MaxProgress: 30,\n                    MaxProgressSelf: 30,\n                    Prerequisite: [\"CantUseArms\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}一边按摩一边活动着手臂.`],\n                img: \"MasturbateHand\"\n            },\n            XSAct_绷紧膝盖: {\n                act: {\n                    Name: \"XSAct_绷紧膝盖\",\n                    Target: [],\n                    TargetSelf: [\"ItemLegs\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"NotKneeling\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}努力的绷紧膝盖，尽可能站的更直.`],\n                img: \"Kick\"\n            },\n            XSAct_绷直脚踝: {\n                act: {\n                    Name: \"XSAct_绷直脚踝\",\n                    Target: [],\n                    TargetSelf: [\"ItemBoots\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [],\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}不自觉的用力绷直脚踝，释放涌来的快感.`],\n                img: \"Kick\"\n            },\n            XSAct_蜷缩脚趾: {\n                act: {\n                    Name: \"XSAct_蜷缩脚趾\",\n                    Target: [],\n                    TargetSelf: [\"ItemBoots\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [],\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}脚趾互相纠结，又时而蜷缩，忍耐着快感袭来.`],\n                img: \"Kick\"\n            },\n            XSAct_踮脚: {\n                act: {\n                    Name: \"XSAct_踮脚\",\n                    Target: [],\n                    TargetSelf: [\"ItemBoots\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"CantUseFeet\"],\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}努力的踮起脚.`],\n                img: \"Kick\"\n            },\n            XSAct_兴奋的伸出舌头: {\n                act: {\n                    Name: \"XSAct_兴奋的伸出舌头\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}兴奋的伸出舌头.}`],\n                img: \"MasturbateTongue\"\n            },\n            XSAct_兴奋的扭动: {\n                act: {\n                    Name: \"XSAct_兴奋的扭动\",\n                    Target: [],\n                    TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: ['', `${selfPlaceholder}兴奋的扭动着身体.`],\n                img: 'Wiggle'\n            },\n            XSAct_呼吸平复: {\n                act: {\n                    Name: \"XSAct_呼吸平复\",\n                    Target: [],\n                    TargetSelf: [\"ItemNose\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}的呼吸渐渐平复.`],\n                img: \"PoliteKiss\"\n            },\n            XSAct_呼吸紊乱: {\n                act: {\n                    Name: \"XSAct_呼吸紊乱\",\n                    Target: [],\n                    TargetSelf: [\"ItemNose\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}的呼吸渐渐紊乱起来，发出软软的鼻音.`],\n                img: \"Whisper\"\n            },\n            XSAct_嘟囔着想说什么: {\n                act: {\n                    Name: \"XSAct_嘟囔着想说什么\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}嘟囔着想说什么.`],\n                img: \"Whisper\"\n            },\n            XSAct_失神的伸出舌头: {\n                act: {\n                    Name: \"XSAct_失神的伸出舌头\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}失神的伸出自己的舌头.`],\n                img: \"MasturbateTongue\"\n            },\n            XSAct_慢慢伸出舌头: {\n                act: {\n                    Name: \"XSAct_慢慢伸出舌头\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"UseMouth\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}慢慢的伸出了自己的舌头.`],\n                img: \"MasturbateTongue\"\n            },\n            XSAct_微微摇头: {\n                act: {\n                    Name: \"XSAct_微微摇头\",\n                    Target: [],\n                    TargetSelf: [\"ItemHead\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}微微的摇了摇头.`],\n                img: \"Suck\"\n            },\n            XSAct_微微点头: {\n                act: {\n                    Name: \"XSAct_微微点头\",\n                    Target: [],\n                    TargetSelf: [\"ItemHead\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}微微的点了点头.`],\n                img: \"Nod\"\n            },\n            XSAct_身体颤抖的摇头: {\n                act: {\n                    Name: \"XSAct_身体颤抖的摇头\",\n                    Target: [],\n                    TargetSelf: [\"ItemHead\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}浑身颤抖的摇了摇头.`],\n                img: \"Suck\"\n            },\n            XSAct_身体颤抖的点头: {\n                act: {\n                    Name: \"XSAct_身体颤抖的点头\",\n                    Target: [],\n                    TargetSelf: [\"ItemHead\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}浑身颤抖的点了点头.`],\n                img: \"Nod\"\n            },\n            XSAct_歪头疑惑: {\n                act: {\n                    Name: \"XSAct_歪头疑惑\",\n                    Target: [],\n                    TargetSelf: [\"ItemNeck\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}歪着脑袋一副疑惑的样子.`],\n                img: \"Suck\"\n            },\n            XSAct_扭动身体: {\n                act: {\n                    Name: \"XSAct_扭动身体\",\n                    Target: [],\n                    TargetSelf: [\"ItemTorso\", \"ItemTorso2\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}扭动着身体.`],\n                img: \"Wiggle\"\n            },\n            XSAct_活动四肢: {\n                act: {\n                    Name: \"XSAct_活动四肢\",\n                    Target: ['ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots'],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: [\"CantUseArms\", \"CantUseFeet\"]\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}活动了下自己的四肢.`],\n                img: \"Slap\"\n            },\n            XSAct_看他: {\n                act: {\n                    Name: \"XSAct_看他\",\n                    Target: ['ItemHead'],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['CanLook']\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}看向了${targetPlaceholder}.`, ''],\n                img: \"SiblingsCheekKiss\"\n            },\n            XSAct_缩脖子: {\n                act: {\n                    Name: \"XSAct_缩脖子\",\n                    Target: [],\n                    TargetSelf: [\"ItemNeck\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}缩了下自己的脖子.`],\n                img: \"Suck\"\n            },\n            XSAct_脸红喘气: {\n                act: {\n                    Name: \"XSAct_脸红喘气\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}面色潮红的喘着气.`],\n                img: \"Whisper\"\n            },\n            XSAct_轻声喘气: {\n                act: {\n                    Name: \"XSAct_轻声喘气\",\n                    Target: [],\n                    TargetSelf: [\"ItemMouth\", \"ItemMouth2\", \"ItemMouth3\"],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}轻声喘着气.`],\n                img: \"Whisper\"\n            },\n            XSAct_跺脚: {\n                act: {\n                    Name: \"XSAct_跺脚\",\n                    Target: [],\n                    TargetSelf: ['ItemBoots'],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['NotKneeling']\n                },\n                desc: null,\n                // descString: [\"\", `${selfPlaceholder}跺了跺脚.`],\n                img: \"Step\"\n            },\n            XSAct_头蹭: {\n                act: {\n                    Name: \"XSAct_头蹭\",\n                    Target: ['ItemHead', 'ItemNeck', 'ItemBreast', 'ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots', 'ItemPelvis'],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}用自己的脑袋蹭了蹭${targetPlaceholder}的${this.bodyNamePlaceholder}.`, ''],\n                img: \"SiblingsCheekKiss\",\n                isBase: true\n            },\n            XSAct_脸蹭: {\n                act: {\n                    Name: \"XSAct_脸蹭\",\n                    Target: ['ItemHead', 'ItemNeck', 'ItemBreast', 'ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots', 'ItemPelvis'],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: []\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}用自己的脸颊蹭了蹭${targetPlaceholder}的${this.bodyNamePlaceholder}.`, ''],\n                img: \"SiblingsCheekKiss\",\n                isBase: true\n            },\n            XSAct_鼻子蹭: {\n                act: {\n                    Name: \"XSAct_鼻子蹭\",\n                    Target: ['ItemHead', 'ItemNeck', 'ItemBreast', 'ItemArms', 'ItemLegs', 'ItemFeet', 'ItemBoots', 'ItemPelvis'],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}用自己的鼻子蹭了蹭${targetPlaceholder}的${this.bodyNamePlaceholder}.`, ''],\n                img: \"Nod\",\n                isBase: true\n            },\n            XSAct_埋怀里: {\n                act: {\n                    Name: \"XSAct_埋怀里\",\n                    Target: ['ItemBreast'],\n                    TargetSelf: [],\n                    MaxProgress: 20,\n                    MaxProgressSelf: 20,\n                    Prerequisite: ['MoveHead']\n                },\n                desc: null,\n                // descString: [`${selfPlaceholder}把脑袋埋在${targetPlaceholder}的怀里.`, ''],\n                img: \"SiblingsCheekKiss\"\n            }\n        }\n\n\n\n    /**\n     * 前置条件字典\n     * @PrerequisiteName - 需要是在{@link XSA_ActivityPrerequisite}的字符串\n     * @Name - 需要是在{@link XSA_ActivityPrerequisite}的字符串\n     * @Action - 检测判断的具体动作\n     * - @param args - 一个数组,包含四个元素.\n     * - args[0]为@param prereq:{@link ActivityPrerequisite} 判定决定使用哪个条件的依据，但此处无用 请不要在这里使用该参数\n     * - args[1]为@param acting:{@link Character} | {@link PlayerCharacter} 代表动作发起者的数据\n     * - args[2]为@param acted:{@link Character} | {@link PlayerCharacter} 代表动作目标的数据\n     * - args[3]为@param group:{@link AssetGroup}.\n     */\n    prerequisiteDict: { [PrerequisiteName in XSA_ActivityPrerequisite]: prerequisite } = {\n        ItemHoodCovered: { //头部面罩位置是否覆盖\n            Name: \"ItemHoodCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                const acting = args[1] as Character | PlayerCharacter;\n                //const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemHoodCovered(acting);\n            }\n        },\n        TargetItemHoodCovered: { //目标的头部面罩位置是否覆盖\n            Name: \"TargetItemHoodCovered\",\n            Action: (args) => {\n                const acted = args[2] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemHoodCovered(acted);\n            }\n        },\n        ItemNoseCovered: { //头部鼻子位置是否覆盖\n            Name: \"ItemNoseCovered\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.ItemNoseCovered(acting);\n            }\n        },\n        Kneeling: {\n            Name: \"Kneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.Kneeling(acting);\n            }\n        },\n        NotKneeling: {\n            Name: \"NotKneeling\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.NotKneeling(acting);\n            }\n        },\n        CanLook: {\n            Name: \"CanLook\",\n            Action: (args) => {\n                const acting = args[1] as Character | PlayerCharacter;\n\n                return this.Judgment.CanLook(acting);\n            }\n        }\n    }\n    /**\n     * 判断函数字典\n     * 前置条件字典将要调用的方法集合\n    */\n    Judgment: { [judgmentName: string]: (acting: Character | PlayerCharacter, acted?: Character | PlayerCharacter, group?: AssetGroup) => boolean } = {\n        ItemHoodCovered: (acting: Character | PlayerCharacter): boolean => { // 头部面罩位置是否覆盖 // 尝试修复\n            return InventoryPrerequisiteMessage(acting, \"HoodEmpty\") === \"\";\n        },\n        ItemNoseCovered: (acting: Character | PlayerCharacter): boolean => { // 鼻子位置是否覆盖 // 测试\n            return (InventoryGet(acting, 'ItemNose') ? \"CannotBeUsedOverMask\" : \"\") === \"\";\n        },\n        Kneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return (acting as PlayerCharacter).IsKneeling();\n        },\n        NotKneeling: (acting: Character | PlayerCharacter): boolean => { // 是否跪着\n            return !(acting as PlayerCharacter).IsKneeling();\n        },\n        CanLook: (acting: Character | PlayerCharacter): boolean => { // 是否可以看到\n            return !(acting as PlayerCharacter).IsBlind();\n        }\n\n    }\n\n\n    public getAllAct(): string[] {\n        const result: string[] = []\n        for (const a in this.activityToAddDict) {\n            const suffix = this.getStr(\"Activity\", this.getActName(a));\n            result.push(suffix); // 输出：XXXX\n        }\n        conDebug({\n            content: result,\n            name: \"ActivityNameXiaosu_onlyName\",\n            type: MSGType.DebugLog\n        });\n        return result;\n    }\n\n    private getActName(act: string): string {\n        try {\n            return this.activityToAddDict[`${act}` as keyof typeof this.activityToAddDict].act.Name\n        } catch (error) {\n            conDebug({ content: `${act}`, name: \"getActName\", type: MSGType.DebugLog }, true)\n            throw error;\n        }\n    }\n}\n","import { BaseModule } from \"Modules/BaseModule\";\nimport { MSGType, SendChat, SendEmote, conDebug, copyAndDownloadHtmlElement, hookFunction, patchFunction, timeRange } from \"utils\";\nimport { Localization as L } from \"localization\";\n\nexport class ChatroomModule extends BaseModule {\n\n    // VVVV==========初始化与加载函数==========VVVV //\n    public Load(): void {\n        this.hookListHandler();\n        this.pathListHandler();\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        if (!window.AddChatRightClickEvent) window.AddChatRightClickEvent = this.AddChatRightClickEvent;\n        document.addEventListener(\"click\", () => {\n            ChatroomModule.HideContextmenu()\n        })\n        this.priority = 30;\n\n        ChatroomModule.contextmenuText = [\n            ['reply', L.get(\"Chatroom\", \"Contextmenu.Button.reply\")],\n            ['whisper', L.get(\"Chatroom\", \"Contextmenu.Button.whisper\")],\n            ['copy', L.get(\"Chatroom\", \"Contextmenu.Button.copy\")],\n            ['delete', L.get(\"Chatroom\", \"Contextmenu.Button.delete\")]\n        ]\n\n        for (let i = 0; i <= 9; i++) {\n            this.moan.push(L.get(\"Chatroom\", `moan.${i}` as strKey<\"Chatroom\">))\n        }\n\n        for (let i = 0; i <= 7; i++) {\n            ChatroomModule.kaomojiSet.help.push(L.get(\"Chatroom\", `kaomojiHelp.${i}` as strKey<\"Chatroom\">))\n        }\n\n    }\n\n\n    static InputElement: HTMLInputElement | null = null;\n\n    /**\n     * hook函数列表处理\n     */\n    hookListHandler(): void {\n\n        hookFunction(\"ChatRoomLoad\", this.priority, (args, next) => {\n            const result = next(args);\n            if (!ChatroomModule.InputElement) {\n                ChatroomModule.InputElement = document.getElementById('InputChat') as HTMLInputElement;\n            }\n            ChatroomModule.buildKaomojiButton()\n\n            return result;\n        });\n\n\n        // 调整按钮位置\n        hookFunction(\"ElementPosition\", this.priority, (args, next) => {\n            const result = next(args);\n            if (args[0] === \"InputChat\") {\n                ChatroomModule.ResizeKaomojiButton();\n            }\n            return result;\n        });\n        // 生成InputChat元素时将InputChat元素保存起来\n        hookFunction(\"ElementCreateTextArea\", this.priority, (args, next) => {\n            const result = next(args);\n            if (args[0] === \"InputChat\") {\n                ChatroomModule.InputElement = document.getElementById('InputChat') as HTMLInputElement;\n            }\n            return result;\n        });\n        // 当聊天室清理全部元素时 删除表情系统元素\n        hookFunction(\"ChatRoomClearAllElements\", this.priority, (args, next) => {\n            ChatroomModule.removeKaomojiMenu();\n            ChatroomModule.InputElement = null;\n            return next(args);\n        });\n        // 当聊天室显示元素时 显示表情系统菜单\n        hookFunction(\"ChatRoomShowElements\", this.priority, (args, next) => {\n            const result = next(args);\n            ChatroomModule.showKaomojiMenu();\n            return result;\n        });\n        // 当聊天室隐藏元素时 隐藏表情系统元素\n        hookFunction(\"ChatRoomHideElements\", this.priority, (args, next) => {\n            const result = next(args);\n            ChatroomModule.hideKaomojiMenu();\n            return result;\n        });\n\n        // 让记录显示时间包含秒\n        hookFunction(\"ChatRoomCurrentTime\", 99, () => {\n            const D = new Date();\n            const hStr = `0${D.getHours()}`;\n            const mStr = `0${D.getMinutes()}`;\n            const sStr = `0${D.getSeconds()}`;\n            return `${hStr.substring(hStr.length - 2)}:${mStr.substring(mStr.length - 2)}:${sStr.substring(sStr.length - 2)}`;\n        });\n\n\n\n\n        // 处理聊天室发送消息时 接受 \" ` \" 命令和 接受 \" | \" 命令\n        hookFunction(\"CommandParse\", 0,\n            (args, next) => {\n                let msg = args[0];\n\n                // 匹配[ ` ]开头的命令 处理结巴系统\n                const match = msg.match(/^`([1-9])?(m)?( )? (.*)/);\n                if (match) {\n                    msg = match[2] != \"m\" ? this.stammerHandler(match[4], parseInt(match[1]), true, false) :\n                        this.stammerHandler(match[4], parseInt(match[1]), true, true);\n                }\n\n                // 匹配[ | ]的颜文字命令 处理表情系统\n                const kaomojiMatch = msg.match(/^\\|(.*)/);\n                if (kaomojiMatch) {\n                    if (Object.keys(ChatroomModule.kaomojiSet).includes(kaomojiMatch[1]) || kaomojiMatch[1] == \"all\") {\n                        ChatroomModule.kaomojiHandler(kaomojiMatch[1]);\n                        const inputElement: HTMLInputElement = document.getElementById('InputChat') as HTMLInputElement;\n                        inputElement.value = \"\";\n                    } else {\n                        ChatRoomSendLocal(L.get(\"Chatroom\", \"kaomoji.doesNotExist.tips\"), 5000)\n                        const inputElement: HTMLInputElement = document.getElementById('InputChat') as HTMLInputElement;\n                        inputElement.value = \"|\";\n                    }\n                    return;\n                }\n                args[0] = msg;\n                return next(args);\n            });\n\n        // 处理聊天室接受消息时 的 \" 🪧回复* \" 命令显示\n        hookFunction(\"ChatRoomMessage\", 51, (args, next) => {\n            const msg = args[0];\n            const type = msg.Type;\n            if (type === \"Chat\") {\n                const content = msg.Content;\n                const matchWord = L.get(\"Chatroom\", \"Prefix.reply\");\n                if (content.startsWith(`🪧${matchWord}*>`)){\n                    const match = content.match(new RegExp(`^🪧${matchWord}\\\\*>(.+)<\\\\*(.+)`, 's'))\n                    conDebug({\n                        name: \"ChatRoomMessage 回复debug\",\n                        content: match\n                    })\n                    if (match) {\n                        ChatRoomSendLocal(`·🪧·  ${matchWord}==>  ${match[1]}  ·🪧·`);\n                        args[0].Content = match[2];\n                    }\n                }\n            }\n            next(args);\n        })\n    }\n\n\n    pathListHandler(): void {\n        // 处理将消息添加右键菜单 (回复、复制、悄悄话、删除)\n        patchFunction(\"ChatRoomMessageDisplay\", {\n            \"div.innerHTML = displayMessage;\": `\n            if (!!window.AddChatRightClickEvent) window.AddChatRightClickEvent(div);\n            div.innerHTML = displayMessage;\n            `\n        });\n    }\n\n    // -----------右键菜单----------- //\n    AddChatRightClickEvent(div: HTMLDivElement) {\n        const divClassName = div.className;\n        if (!divClassName.includes(\"ChatMessageChat\") && !divClassName.includes(\"ChatMessageEmote\")) return;\n        // 右键点击事件监听器\n        div.addEventListener('contextmenu', function (event) {\n            // 阻止默认的右键点击事件\n            event.preventDefault();\n            // 自定义逻辑\n            ChatroomModule.showContextmenu(event);\n        });\n    }\n    /**     显示右键菜单      */\n    private static Contextmenu: HTMLDivElement | null = null;\n    /** 显示右键菜单的div元素 */\n    private static targetDiv: HTMLDivElement | null = null;\n    /** 右键菜单的内容 */\n    private static contextmenuText: [[string, string], [string, string], [string, string], [string, string]]; // [] = [\"回复\", \"悄悄话\", \"复制\", \"删除\"]\n    /**\n     * 显示右键菜单的功能实现。\n     * 当用户在指定元素上右击时，此函数将显示一个右键菜单。\n     * @param e 触发显示菜单的鼠标事件对象。用于获取事件的详细信息。\n     * @returns void 无返回值。\n     */\n    private static showContextmenu(e: MouseEvent) {\n        // 尝试将触发事件的目标元素转换为 HTMLDivElement\n        const div = e.target as HTMLDivElement | null;\n        // 如果目标元素不是 HTMLDivElement，则不执行任何操作\n        if (!div) return;\n        // 指定目标元素\n        this.targetDiv = div;\n\n        // 检查右键菜单是否已经存在\n        // 如果不存在，则创建一个新的右键菜单\n        // 如果存在，则显示右键菜单并调整其位置\n        if (!this.Contextmenu) {\n            ChatroomModule.buildNewContextmenu(e);\n        }\n        else {\n            this.Contextmenu.style.display = \"flex\";\n            ChatroomModule.changeContextmenuPosition(e);\n        }\n    }\n    /**\n     * 隐藏右键菜单\n     */\n    private static HideContextmenu() {\n        if (this.Contextmenu) this.Contextmenu.style.display = \"none\";\n    }\n\n    /**\n     * 构建并显示一个新的右键菜单。\n     * @param e 鼠标事件，用于确定菜单的位置。\n     */\n    private static buildNewContextmenu(e: MouseEvent) {\n        // 创建右键菜单的容器元素\n        const contextmenu = document.createElement('div');\n        contextmenu.className = \"xsa-contextmenu\"; // 设置菜单的类名\n        contextmenu.style.display = \"none\"; // 初始时隐藏菜单\n\n        this.Contextmenu = contextmenu; // 将菜单对象赋值给类的上下文菜单属性\n\n        // 调整菜单的位置\n        ChatroomModule.changeContextmenuPosition(e);\n\n        // 循环创建菜单项\n        for (let i = 0; i < 4; i++) {\n            const buttonInfo = ChatroomModule.contextmenuText[i]\n            const contextmenuItem = document.createElement('div'); // 创建菜单项\n            contextmenuItem.className = \"xsa-contextmenu-item\"; // 设置菜单项的类名\n            contextmenuItem.innerText = buttonInfo[1]; // 设置菜单项的文本\n\n            const replyPrefix = L.get(\"Chatroom\", \"Prefix.reply\");\n\n            // 给菜单项添加点击事件监听\n            contextmenuItem.addEventListener('click', () => {\n                switch (buttonInfo[0]) {\n                    case 'reply': // 回复功能\n                        ElementValue(\"InputChat\", `🪧${replyPrefix}*>${ChatroomModule.targetDiv?.textContent}<*\\n${ElementValue('InputChat')}`);\n                        ElementFocus(\"InputChat\");\n                        break;\n                    case 'copy': // 复制功能\n                        navigator.clipboard.writeText((ChatroomModule.targetDiv?.textContent ?? \"\"));\n                        break;\n                    case 'whisper': {\n                        // 私聊功能\n                        //ElementValue(\"InputChat\", `/whisper ${ChatroomModule.targetDiv?.getAttribute(\"data-sender\")} ${ElementValue(\"InputChat\").replace(/\\/whisper\\s*\\d+ ?/u, '')}`);\n                        const target = ChatroomModule.targetDiv?.getAttribute(\"data-sender\");\n                        const targetNum = parseInt(target ?? \"0\");\n                        if (Number.isNaN(targetNum) || targetNum === Player.MemberNumber) return;\n                        ChatRoomSetTarget(targetNum);\n                        ChatRoomTarget();\n                        ElementFocus(\"InputChat\");\n                        break;\n                    }\n                    case 'delete': // 删除功能\n                        ChatroomModule.targetDiv?.remove();\n                }\n            });\n\n            contextmenu.appendChild(contextmenuItem); // 将菜单项添加到菜单容器\n        }\n\n        contextmenu.style.display = \"flex\"; // 显示菜单\n        document.body.appendChild(contextmenu); // 将菜单添加到文档体中\n    }\n\n    /**\n     * 根据鼠标事件改变右键菜单的位置\n     * @param e 鼠标事件对象，用于获取鼠标位置\n     */\n    private static changeContextmenuPosition(e: MouseEvent) {\n        // 如果不存在右键菜单，则直接返回\n        if (!this.Contextmenu) return;\n\n        // 计算右键菜单的水平位置\n        let left = e.clientX;\n        // 如果菜单位置超出屏幕右侧，则将菜单向左移动\n        if (left + (window.screen.width * 0.06) > window.screen.width) {\n            left = e.clientX - (window.screen.width * 0.06);\n        }\n\n        // 计算右键菜单的垂直位置\n        let top = e.clientY;\n        // 如果菜单位置超出屏幕下侧，则将菜单向上移动\n        if (top + (window.screen.height * 0.06) > window.screen.height) {\n            top = e.clientY - (window.screen.height * 0.06);\n        }\n\n        // 设置菜单的最终位置\n        this.Contextmenu.style.left = `${left}px`;\n        this.Contextmenu.style.top = `${top}px`;\n    }\n    // -----------右键菜单END----------- //\n\n    // VVVV==========聊天记录模块==========VVVV //\n    /**\n     * 导出聊天记录\n     * @param time_limit 时间范围\n     */\n    ExportChat(time_limit: timeRange | null = null): void {\n        const exportName: string | undefined = `${ChatRoomData?.Name}_${new Date().toLocaleString()}`;\n\n        const mainElement: HTMLElement | null = document.getElementById('TextAreaChatLog')\n\n        copyAndDownloadHtmlElement(mainElement, exportName, time_limit)\n    }\n\n    // VVVV==========结巴模块==========VVVV //\n    /**\n     * \n     * @param content 将要处理的句子内容\n     * @param tenfoldStammeringProbability 结巴程度 [1 - 9]\n     * @param isSegmentForCH 是否使用中文分词效果\n     * @param haveMoan 是否呻吟\n     * @returns 最终处理后的句子\n     */\n    stammerHandler(content: string, tenfoldStammeringProbability: number, isSegmentForCH: boolean, haveMoan: boolean): string {\n        conDebug(`stammerHandler: content: ${content} tenfoldStammeringProbability: ${tenfoldStammeringProbability}`)\n\n        // 处理结巴程度，默认结巴程度为3\n        if (Number.isNaN(tenfoldStammeringProbability)) tenfoldStammeringProbability = 3;\n        const stammeringProbability = tenfoldStammeringProbability / 10;\n\n        // 使用segmentForCH进行分词，传入参数取消掉空白字符\n        const segmentList = isSegmentForCH ? this.segmentForCH(TranslationLanguage === \"CN\" ? content.replace(/\\s/g, \"\") : content) : undefined;\n\n        // 如果segmentForCH没有返回内容，则使用源字符串通过空格分词\n        const stringArray: string[] = segmentList ? segmentList : content.split(' ');\n\n        return this.stammerForList(stringArray, stammeringProbability, haveMoan);\n    }\n\n    /**\n     * 处理结巴效果基于segmenter.segment()分词\n     * @param str 传入的字符串\n     * @returns 返回处理后的字符串\n     */\n    private segmentForCH(str: string): string[] | null {\n        // 检查浏览器是否支持 Intl.Segmenter\n        if (window.Intl && window.Intl.Segmenter) {\n            const segmenter = new Intl.Segmenter(L.get(\"Other\", TranslationLanguage.toLowerCase() as strKey<\"Other\">), { granularity: 'word' }); // 创建分词器实例\n            const segmenterResult = segmenter.segment(str); // 对文本进行分词\n            const results: string[] = []\n            for (const segment of segmenterResult) {\n                results.push(segment.segment);\n            }\n\n            conDebug(`segmentForCH: ${results}`)\n            return results;\n        } else {\n            return null;\n        }\n    }\n\n    /** 呻吟词库 */\n    moan: string[] = [];\n    /**\n     * 将分词后的句子添加效果并返回完整句子.\n     * @param messageList 经过分词后的字符串列表\n     * @param stammeringProbability 结巴程度 [0.1~0.9]\n     * @param haveMoan 是否呻吟\n     * @returns 返回处理后的完整句子.\n     */\n    private stammerForList(messageList: string[], stammeringProbability: number, haveMoan: boolean): string {\n        //const stringArray: string[] = message.split(' ');\n        let result = '';\n\n        // 遍历单词数组\n        for (let i = 0; i < messageList.length; i++) {\n            // 将当前单词加入结果字符串\n            const currentWord: string = messageList[i];\n            result += currentWord;\n\n            // 随机决定是否添加结巴效果\n            if (Math.random() < stammeringProbability) { // 假设添加结巴效果的概率为50%\n                result += this.addStammerEffect(currentWord);\n            }\n\n            // 根据当前玩家的兴奋程度决定是否添加呻吟\n            if (haveMoan && Player.ArousalSettings?.Progress && 100 * Math.random() <= Player.ArousalSettings?.Progress) {\n                result += this.moan[Math.floor(Math.random() * this.moan.length)];\n            }\n\n            // 添加-分隔符，最后一个单词后添加 「 ... 」\n            if (i < messageList.length - 1) {\n                if (Math.random() < stammeringProbability)\n                    result += '-';\n            } else {\n                result += '...';\n            }\n        }\n\n        // 调试日志输出处理后的结果\n        conDebug({\n            name: 'stammer',\n            type: MSGType.DebugLog,\n            content: result\n        });\n\n        return result;\n    }\n    // 添加结巴效果的辅助方法\n    private addStammerEffect(word: string, depth: number = 0): string {\n        // 设置最大递归深度\n        const maxDepth = 3;\n        // 如果递归深度达到最大值，返回原单词\n        if (depth >= maxDepth) {\n            return word;\n        }\n        // 在这里实现添加结巴效果的逻辑，可以是随机的字符、重复的部分、乱序等等\n        const randomNumber: number = Math.random();\n        let result: string = randomNumber < 0.5 ? '...' : `-${word}`;\n\n        if (Math.random() < 0.2) {\n            result = this.addStammerEffect(result, depth + 1);\n        }\n        return result;\n    }\n\n    // VVVV==========颜文字表情模块==========VVVV //\n\n    /** 表情菜单对象 */\n    private static KaomojiMenuObject: {\n        menu: HTMLDivElement | null,\n        title: HTMLDivElement | null,\n        container: HTMLDivElement | null\n    } = {\n            menu: null,\n            title: null,\n            container: null\n        };\n\n    /** 表情菜单标题元素 */\n    private static menuTitleTextSet: { [key: string]: HTMLDivElement } = {\n        all: document.createElement('div'),\n        hp: document.createElement('div'),\n        sd: document.createElement('div'),\n        sy: document.createElement('div'),\n        ar: document.createElement('div'),\n        sp: document.createElement('div'),\n        cf: document.createElement('div'),\n        nt: document.createElement('div')\n    }\n\n    /** 表情按钮 */\n    static KaomojiButton: HTMLButtonElement | null = null;\n    /** 是否应该显示表情菜单 处理跟随聊天室UI隐藏表情菜单时，等需要再显示时，菜单是否跟随显示 */\n    static KaomojiShouldShow: boolean = false;\n\n    /**\n     * 处理颜文字表情系统\n     * @param message 传入的信息，一般是命令\n     */\n    private static kaomojiHandler(message: string): void {\n        const kaomojiMenu = this.getKaomojiMenu(message);\n        kaomojiMenu!.style.display = \"flex\";\n        this.KaomojiShouldShow = true;\n    }\n\n    /** 表情库 */\n    private static kaomojiSet: { [groupName: string]: string[] } = {\n        help: [],\n        hp: [\"ヾ(❀╹◡╹)ﾉ~\", \" (๑>؂<๑）\", \"(｡･ω･｡)ﾉ♡\", \"(◍ ´꒳` ◍)\", \"(￣w￣)ノ\", \"Hi~ o(*￣▽￣*)ブ\", \"(≧∇≦)ﾉ\", \"o(^▽^)o\", \"(￣︶￣)↗\", \"<(￣︶￣)↗[GO!]\", \"o(*￣▽￣*)o\", \"(p≧w≦q)\", \"ㄟ(≧◇≦)ㄏ\", \"(/≧▽≦)/\", \"(　ﾟ∀ﾟ) ﾉ♡\", \"(●'◡'●)\", \"ヽ(✿ﾟ▽ﾟ)ノ\",\n            \"o(*￣︶￣*)o\", \"(๑¯∀¯๑)\", \"(≧∀≦)ゞ\", \"φ(≧ω≦*)♪\", \"╰(*°▽°*)╯\", \"(*^▽^*)\", \"(๑•̀ㅂ•́)و✧\", \"(੭*ˊᵕˋ)੭*ଘ*\", \"(o゜▽゜)o☆[BINGO!]\", \"(^▽^ )\", \"<(*￣▽￣*)/\", \"┌|*´∀｀|┘\",\n            \"♪(´∇`*)\", \"(｡◕ฺˇε ˇ◕ฺ｡）\", \" ✌︎( ᐛ )✌︎\", \"(*・ω・)ﾉ\", \"(„• ֊ •„)\"],\n        sd: [\"テ_デ\", \"□_□\", \"┭┮﹏┭┮\", \"╥﹏╥...\", \"o(TヘTo)\", \"〒▽〒\", \"ε(┬┬﹏┬┬)3\", \"(;´༎ຶД༎ຶ`)\", \"(ノへ`、)\", \"（-_-。）\", \"(ノへ￣、)\", \"｡◔‸◔｡\", \"(⊙﹏⊙)\"],\n        sy: [\"|ω・）\", \"|･ω･｀)\", \"◕ฺ‿◕ฺ✿ฺ)\", \"つ﹏⊂\", \"(* /ω＼*)\", \"o(*////▽////*)q\", \"(*/ω＼*)\", \"(′▽`〃)\", \"(✿◡‿◡)\", \"(/▽＼)\", \"(๑´ㅂ`๑)\", \"(◡ᴗ◡✿)\", \"⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄\", \"(〃'▽'〃)\", \"(๑╹ヮ╹๑)ﾉ\"],\n        ar: [\"/ᐠ｡ꞈ｡ᐟ\\\\\", \"˃ʍ˂\", \"(σ｀д′)σ\", \"＼(゜ロ＼)(／ロ゜)／\", \"<(－︿－)>\", \"(ー`´ー)\", \"（｀へ´）\", \"(-__-)=@))> o<)\", \"(///￣皿￣)○～\", \"┻━┻︵╰(‵□′)╯︵┻━┻\",\n            \"→)╥﹏╥)\", \"抽!!(￣ε(#￣)☆╰╮(￣▽￣///)\", \"(￣ε(#￣)☆╰╮o(￣皿￣///)\", \"(* ￣︿￣)\", \"（＃￣～￣＃）\", \"(⊙x⊙;)\", \"o(*≧▽≦)ツ┏━┓\", \"(ノω<。)ノ))☆.。\",\n            \"(〃＞目＜)\", \"( σ'ω')σ\", \"o(′益`)o\", \"(〃＞目＜)\", \"o(≧口≦)o\", \"Ｏ(≧口≦)Ｏ\", \"...(*￣０￣)ノ[等等我…]\", \"（≧0≦）\", \"ψ(*｀ー´)ψ\", \"ψ(￣皿￣)ノ\"],\n        sp: [\"✧∇✧\", \"!!!∑(ﾟДﾟノ)ノ\", \"’(°ー°〃)\", \"ヾ(ノ' ﹃' )ノ\", \"(ーー゛)\", \"(○´･д･)ﾉ\", \"wow~ ⊙o⊙\", \"~(￣0￣)/\", \"Σ(｀д′*ノ)ノ\", \"Σ(っ °Д °;)っ\", \"(⊙ˍ⊙)\", \"w(ﾟДﾟ)w\",\n            \"ｍ(o・ω・o)ｍ\", \"⊙▽⊙\", \"（இ௰இ）\", \"(●°u°●)​ 」\", \"（｡ò ∀ ó｡）\", \"(๑•̀ω•́)ノ\"],\n        cf: [\"⚆_⚆\", \"( -'`-)\", \"(=′ー`)\", \"( -'`-; )\", \"(・-・*)\", \"( ｀д′)\", \"(￣m￣）\", \"( ╯▽╰)\", \" o-o(=•ェ•=)m\", \"(⊙﹏⊙)\", \"Σ( ° △ °|||)︴\", \"(⊙ˍ⊙)\", \"( ᗜ ˰ ᗜ )\", \"꒰ ˶• ༝ •˶꒱\"],\n        nt: [\"(ˉ▽￣～) 切~~\", \"(￣w￣)ノ\", \"(￣v￣)ノ\", \"(￣l￣)ノ\", \"( ￣ー￣)\", \"(‾◡◝)\", \"(￣_,￣ )\", \"( ﹁ ﹁ ) ~→\", \"<(￣ ﹌ ￣)@m\", \"ꉂ-ꉂ(ˊᗜˋ*)\", \"(｀・ω・´）\", \"༼ つ ◕_◕ ༽つ\", \"ヽ(✿ﾟ▽ﾟ)ノ (°ー°〃)\",\n            \"ヾ(￣▽￣)Bye~Bye~\", \"(◉ω◉υ)⁼³₌₃\", \"(●—●)\", \"(｡･∀･)ﾉﾞ\", \"┬─┬ ノ('-'ノ)\", \"┸━━┸)>口<)\", \"(-.-)..zzZZ\", \"(｡◝ᴗ◜｡)\", \" =͟͟͞͞(꒪ᗜ꒪ ‧̣̥̇)\", \"(˵¯͒〰¯͒˵)\"]\n    }\n\n\n    private static isKaomojiMenuCloseEventListenerAdded: boolean = false;\n    /**\n     * 构建表情按钮并返回按钮实例\n     * @returns 创建的表情按钮\n     */\n    private static buildKaomojiButton(): HTMLButtonElement {\n        if (this.KaomojiButton) return this.KaomojiButton;\n        const button = document.createElement(\"button\");\n        button.id = \"kaomoji-button\";\n        button.className = \"kaomoji-button\";\n        button.type = 'button';\n        button.addEventListener(\"click\", () => {\n            if (!this.KaomojiMenuObject.menu || this.KaomojiMenuObject.menu.style.display === \"none\") {\n                this.kaomojiHandler('all');\n            } else if (this.KaomojiMenuObject.menu.style.display !== \"none\") {\n                this.KaomojiMenuObject.menu.style.display = \"none\";\n                this.KaomojiShouldShow = false;\n            }\n        });\n        if (!this.isKaomojiMenuCloseEventListenerAdded) {\n            document.addEventListener('click', (event) => {\n                const target = event.target as HTMLElement; // 将事件目标转换为 HTMLElement 类型\n                if (!target.closest('#kaomoji-menu') && !target.closest('#kaomoji-button') && this.KaomojiMenuObject.menu && this.KaomojiShouldShow) {\n                    this.KaomojiMenuObject.menu!.style.display = \"none\";\n                    this.KaomojiShouldShow = false;\n                }\n            });\n            this.isKaomojiMenuCloseEventListenerAdded = true;\n        }\n        button.innerHTML = \":)\";\n\n        this.ResizeKaomojiButton();\n        this.KaomojiButton = button;\n        document.body.appendChild(button);\n        return button;\n    }\n\n    /**\n     * 调整按钮位置\n     */\n    private static ResizeKaomojiButton() {\n        if (this.InputElement && this.KaomojiButton) {\n            this.KaomojiButton.style.top = parseInt(this.InputElement.style.top) - window.innerHeight * 0.026 + \"px\";\n            this.KaomojiButton.style.left = parseInt(this.InputElement.style.left) - window.innerHeight * 0.026 + \"px\";\n        }\n    }\n    /**\n     * 获取表情菜单\n     * @param key 要获取表情菜单的索引\n     * @returns 表情菜单的元素\n     */\n    private static getKaomojiMenu(key: string): HTMLDivElement {\n        // 获取表情菜单 如果不存在则创建\n        const { kaomojiContainer, menu }\n            : { kaomojiContainer: HTMLDivElement; menu: HTMLDivElement; }\n            = this.KaomojiMenuObject.menu\n                ? { kaomojiContainer: this.KaomojiMenuObject.container!, menu: this.KaomojiMenuObject.menu! }\n                : ChatroomModule.buildKaomojiMenu();\n\n        // 设置表情菜单内容\n        this.selectKaomojiTitle(kaomojiContainer, key);\n        return menu;\n    }\n\n    /**\n     * 点击表情元素后的事件处理\n     * &gt;>   &lt;<\n     */\n    private static kaomojiClick(event: MouseEvent, kaomojiElement: HTMLDivElement): void {\n        if (event.button === 0) { // 左键点击 将表情插入到输入框当前光标位置，如果不在焦点则插入到末尾\n\n            if (this.InputElement) {\n                // 获取光标位置\n                const cursorPosition = this.InputElement.selectionStart;\n                if (cursorPosition === null || cursorPosition == -1) {\n                    this.InputElement.value += kaomojiElement.textContent;\n                } else {\n                    // 插入字符串\n                    const value = this.InputElement.value;\n                    const newValue = value.substring(0, cursorPosition) + kaomojiElement.textContent + value.substring(cursorPosition);\n                    this.InputElement.value = newValue;\n                    // 将光标位置移到插入字符串后面\n                    const newCursorPosition = cursorPosition + (kaomojiElement.textContent == null ? 0 : kaomojiElement.textContent.length);\n                    this.InputElement.setSelectionRange(newCursorPosition, newCursorPosition);\n                }\n            }\n        } else if (event.button === 2) { // 右键点击直接使用*消息发送表情\n            SendEmote(kaomojiElement.textContent);\n        } else if (event.button === 1) { // 中键点击直接发送表情\n            SendChat(kaomojiElement.textContent);\n        }\n    }\n\n\n    /**\n     * 构建表情菜单 并填充内容\n     * @returns 表情菜单的div元素包含菜单和菜单内表情容器元素\n     */\n    private static buildKaomojiMenu() {\n        // 创建表情菜单的div元素\n        const menu: HTMLDivElement = document.createElement('div');\n        menu.id = 'kaomoji-menu';\n        menu.style.display = 'flex';//\n\n        // 创建表情菜单标题的div元素\n        const menuTitle: HTMLDivElement = document.createElement('div');\n        // 创建表情菜单选择标题元素\n        const menuTitleTextSet: { [key: string]: HTMLDivElement } = this.menuTitleTextSet;\n\n\n        // 创建表情菜单标题关闭按钮的div元素\n        const menuTitleClose: HTMLButtonElement = document.createElement('button');\n        menuTitleClose.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n            viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"red\" />\n        </svg>`\n\n        // 创建表情容器的div元素\n        const kaomojiContainer: HTMLDivElement = document.createElement('div');\n\n        // 将表情菜单标题、表情容器添加到表情菜单div元素中  关闭按钮的添加在选择菜单添加之后\n        menu.appendChild(menuTitle);\n        menu.appendChild(kaomojiContainer);\n\n\n        // 设置除菜单按钮之外的其他元素的类名\n        menu.className = 'kaomoji-menu';\n        menuTitle.className = 'kaomoji-title';\n        menuTitleClose.className = 'kaomoji-title-close';\n        kaomojiContainer.className = 'kaomoji-container';\n\n        // 监听表情菜单标题关闭按钮的点击事件，点击时隐藏表情菜单\n        menuTitleClose.addEventListener('click', () => {\n            menu.style.display = 'none';\n            this.KaomojiShouldShow = false;\n        });\n\n        // 处理表情选择菜单\n        for (const key in menuTitleTextSet) {\n            /** 获取菜单标题元素的索引key key为中文菜单的字符串在这里{@link menuTitleTextSet} */\n\n            // 赋值菜单选择按钮的内容\n            menuTitleTextSet[key].innerHTML = L.get(\"Chatroom\", `KaomojiTitle.${key}` as strKey<\"Chatroom\">);\n            // 类名\n            menuTitleTextSet[key].className = 'kaomoji-title-text';\n            // 添加到菜单标题元素中\n            menuTitle.appendChild(menuTitleTextSet[key]);\n\n            // 为按钮添加点击事件\n            menuTitleTextSet[key].addEventListener('click', () => {\n                this.selectKaomojiTitle(kaomojiContainer, key)\n            })\n        }\n\n        // 添加关闭按钮\n        menuTitle.appendChild(menuTitleClose);\n\n        // 将表情菜单标题、表情容器和表情菜单对象保存到静态属性中\n        this.KaomojiMenuObject = { title: menuTitle, container: kaomojiContainer, menu: menu };\n\n        document.body.appendChild(menu);\n        // 返回表情菜单标题、表情容器和表情菜单对象\n        return { kaomojiContainer, menu };\n    }\n\n    /**\n     * 将菜单的样式设置成当前选择的样式\n     * @param selectKey 表情库的key\n     */\n    private static selectMenuTitleStyleHandle(selectKey: string) {\n        const _className = 'kaomoji-title-text-active';\n        if (!this.menuTitleTextSet[selectKey].classList.contains(_className)) {\n            this.menuTitleTextSet[selectKey].classList.add(_className);\n        }\n        for (const key2 in this.menuTitleTextSet) {\n            if (key2 != selectKey) {\n                this.menuTitleTextSet[key2].classList.remove('kaomoji-title-text-active');\n            }\n        }\n    }\n\n    // /**\n    //  * 将中文key变为表情库的key\n    //  * @param key 将中文key变为表情库的key\n    //  * @returns 返回表情库key\n    //  */\n    // private static getKaomojiSelectKey(key: string): string {\n    //     /** 获取选择的key 这里的处理只是为了让中文的key变为表情库的key */\n    //     let selectKey: string | null = null;\n    //     switch (key) {\n    //         case '开心':\n    //             selectKey = 'hp';\n    //             break;\n    //         case '难过':\n    //             selectKey = 'sd';\n    //             break;\n    //         case '害羞':\n    //             selectKey = 'sy';\n    //             break;\n    //         case '生气':\n    //             selectKey = 'ar';\n    //             break;\n    //         case '惊讶':\n    //             selectKey = 'sp';\n    //             break;\n    //         case '困惑':\n    //             selectKey = 'cf';\n    //             break;\n    //         case '搞怪':\n    //             selectKey = 'nt';\n    //             break;\n    //         default:\n    //             selectKey = 'all';\n    //             break;\n    //     }\n    //     return selectKey;\n    // }\n\n\n    /**\n     * 选择标题按钮时触发的方法\n     * @param kaomojiContainer 容纳表情的容器元素\n     * @param key 要显示表情库索引键 英文\n     */\n    private static selectKaomojiTitle(kaomojiContainer: HTMLDivElement, key: string): void {\n\n\n        const kaomojiList: string[] = key == \"all\" ? this.getAllKaomoji() : this.kaomojiSet[key]\n        // 设置表情菜单内容\n        kaomojiContainer.innerHTML = '';\n        const kaomojiClassName = 'kaomoji';\n        this.selectMenuTitleStyleHandle(key);\n\n        for (const kaomoji of kaomojiList) {\n            const kaomojiElement: HTMLDivElement = document.createElement('div');\n            kaomojiElement.className = kaomojiClassName;\n            kaomojiElement.innerText = kaomoji;\n            if (key !== \"help\") {\n                kaomojiElement.addEventListener('click', (event) => {\n                    this.kaomojiClick(event, kaomojiElement);\n                });\n                // 阻断该元素的右键点击和中间点击事件\n                kaomojiElement.addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    this.kaomojiClick(event, kaomojiElement);\n                })\n                kaomojiElement.addEventListener('mousedown', (event) => {\n                    if (event.button === 1) {\n                        event.preventDefault();\n                        this.kaomojiClick(event, kaomojiElement);\n                    }\n                })\n            }\n            kaomojiContainer.appendChild(kaomojiElement);\n        }\n    }\n\n    /**\n     * 移除表情菜单\n     */\n    private static removeKaomojiMenu() {\n        if (this.KaomojiButton) {\n            this.KaomojiButton.remove();\n            this.KaomojiButton = null;\n        }\n        if (this.KaomojiMenuObject.menu) {\n            this.KaomojiMenuObject.menu.remove();\n            this.KaomojiMenuObject = {\n                menu: null,\n                title: null,\n                container: null,\n            };\n        }\n    }\n\n    /**\n     * 隐藏表情菜单\n     */\n    private static hideKaomojiMenu() {\n        if (this.KaomojiMenuObject.menu) {\n            this.KaomojiMenuObject.menu.style.display = \"none\";\n        }\n        if (this.KaomojiButton) {\n            this.KaomojiButton.style.display = \"none\";\n        }\n    }\n\n    /**\n     * 显示表情菜单\n     */\n    private static showKaomojiMenu() {\n        if (this.KaomojiMenuObject.menu && this.KaomojiShouldShow == true) {\n            this.KaomojiMenuObject.menu.style.display = 'flex';\n        }\n        if (this.KaomojiButton) {\n            this.KaomojiButton.style.display = 'inline';\n\n        }\n    }\n\n    /**\n     * 返回全部的表情\n     * @returns 全部的表情列表\n     */\n    private static getAllKaomoji(): string[] {\n        const allKaomojiList: string[] = [];\n        for (const key in this.kaomojiSet) {\n            if (key == 'help') continue;\n            for (const kaomoji of this.kaomojiSet[key]) {\n                allKaomojiList.push(kaomoji);\n            }\n        }\n        return allKaomojiList;\n    }\n}","import { hookFunction } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\nimport { Localization as L } from \"localization\";\n\n\nexport class ChessModule extends BaseModule {\n    public Load(): void {\n        hookFunction(\"ChatRoomMessage\", 10, (args, next) => {\n            const data = args[0] as ServerChatRoomMessage;\n\n            if (typeof data === 'object') {\n                if (data.Content === 'XSA_Chess' && data.Dictionary) {\n                    // 拦截XSA_Chess消息\n                    const CheckerInfo = data.Dictionary[0] as ChessDictionaryEntry;\n                    if (CheckerInfo.sender === Player.MemberNumber) return;\n                    this.ShowChessboard(CheckerInfo, data.Sender ?? 0);\n                    return;\n                }\n            }\n            return next(args);\n        })\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 0;\n    }\n\n    // 内存中的历史棋盘 当前版本有内存泄露的风险 回头再详细测试\n    private static ChessDivMap: Map<number, HTMLDivElement> = new Map();\n\n    /**\n     * 获取相同两个人在历史棋盘中储存的内容的键\n     * @param p1 玩家1编号\n     * @param p2 玩家2编号\n     * @returns 通过玩家编号获取的在历史棋盘中的键\n     */\n    private static getChessDivKey(p1: number, p2: number): number {\n        const combinedString = `${p1}${p2}`; // 将两个数字拼接成一个字符串\n        let hash = 0;\n        for (let i = 0; i < combinedString.length; i++) {\n            const char = combinedString.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char; // 使用简单的哈希算法处理字符串\n            hash |= 0; // 将结果转换为32位整数\n        }\n        return hash;\n    }\n\n    /**\n     * 发送一个棋局信息到服务器\n     * @param Player1 玩家1\n     * @param Player2 玩家2\n     * @param Round 回合数\n     * @param checkerboard 棋盘信息 二维数组\n     * @param started 是否已经开始对局\n     */\n    SendAChess(Player1: number, Player2: number | null, Round: number, checkerboard: Checkerboard = Chess.newCheckerboard, started: boolean = false) {\n        const CheckerInfo: ChessDictionaryEntry = { Player1, Player2, Round: Round, Checkerboard: checkerboard, start: started, sender: Player.MemberNumber ?? -1 }\n        //if (!Player2) this.ShowChessboard(CheckerInfo);\n        ServerSend(\"ChatRoomChat\", { Type: 'Hidden', Content: 'XSA_Chess', Dictionary: [CheckerInfo], Sender: Player.MemberNumber })\n    }\n\n    /**\n     * 显示一个棋局\n     * @param info 对局信息\n     * @param sender 发送者\n     */\n    ShowChessboard(info: ChessDictionaryEntry, sender: number) {\n        // 通过从服务器接受的信息new一个棋局类\n        const chess = new Chess(info.Player1)\n        // 载入信息\n        chess.LoadInfo(info);\n\n        // 仿照原版的发送本地信息函数的部分代码\n        const div = document.createElement(\"div\");\n        const chessKey = ChessModule.getChessDivKey(chess.player1MemberNumber, chess.player2MemberNumber ?? -1);\n        if (ChessModule.ChessDivMap.has(chessKey)) {\n            ChessModule.ChessDivMap.get(chessKey)!.remove();\n            ChessModule.ChessDivMap.delete(chessKey);\n            ChessModule.ChessDivMap.set(chessKey, div);\n        } else {\n            ChessModule.ChessDivMap.set(chessKey, div);\n        }\n\n        div.setAttribute('class', 'ChatMessage ChatMessage' + 'LocalMessage');\n        div.setAttribute('data-time', ChatRoomCurrentTime());\n        div.setAttribute('data-sender', sender);\n\n        // 通过chess类实例的Element属性(get())获取棋盘\n        const main = chess.Element;\n\n        // 如果对局没有开始 或者 当前玩家是 玩家1 (发起者) 或者是 玩家2 则添加按钮\n        // \n        if (!info.start || chess.player1MemberNumber === Player.MemberNumber || chess.player2MemberNumber === Player.MemberNumber) {\n            // 发送按钮\n            const sendButton: HTMLButtonElement = document.createElement('button');\n            sendButton.className = 'ChatMessageButton';\n\n            sendButton.innerHTML = L.get(\"Chess\", \"button.send\");\n            sendButton.addEventListener('click', () => {\n                // 点击后禁用交互\n                chess.Disable = true;\n                // 如果对局开始 并且 玩家1 是操作者 则回合数加1 换句话说 因为发起者总是玩家1 所以发起者发送信息后回合数加1 等从服务器接受到信息再发送 则回合数+1\n                if (info.start && info.Player1 === Player.MemberNumber) chess.Round++;\n                // 如果对局没有开始 并且 当前玩家不是 玩家1 (不是发起者) 则对局开始 将当前玩家的编号传入 chess 类实例中\n                if (!info.start && info.Player1 !== Player.MemberNumber) {\n                    chess.player2MemberNumber = Player.MemberNumber ?? null;\n                    info.start = true;\n                }\n                // 发送对局信息到服务器\n                this.SendAChess(chess.player1MemberNumber, chess.player2MemberNumber, chess.Round, chess.checkerboard, info.start);\n                // 发送后移除按钮\n                sendButton.remove();\n                // 30秒后移除div 防止内存泄露\n                setTimeout(() => {\n                    div.remove();\n                }, 30000);\n            })\n            // 添加按钮\n            main.appendChild(sendButton);\n        }\n\n        // 将棋盘添加到div中\n        div.appendChild(main)\n        // 添加到聊天框中\n        ChatRoomAppendChat(div);\n    }\n}\n\n\nexport class Chess {\n    /** 棋盘信息 */\n    public checkerboard: Checkerboard;\n    /** 玩家1编号 */\n    public player1MemberNumber: number;\n    /** 玩家1名称 */\n    public player1Name: string;\n    /** 玩家2编号 */\n    public player2MemberNumber: number | null;\n    /** 玩家2名称 */\n    public player2Name: string;\n\n    /** 回合数 */\n    public Round: number;\n\n    /** 表示是否可以对玩家1的棋子交互 */\n    private canChange1: boolean;\n    /** 表示是否可以对玩家2的棋子交互 */\n    private canChange2: boolean;\n\n    /** 表示是否可以对棋子交互 */\n    public Disable: boolean;\n\n\n    constructor(player1MemberNumber: number) {\n        this.player1MemberNumber = player1MemberNumber;\n        this.player1Name = this.getPlayer1Name()\n        this.canChange1 = false;\n\n        this.player2MemberNumber = null;\n        this.player2Name = L.get(\"Chess\", \"not_started_identification\");\n        this.canChange2 = false;\n\n        this.checkerboard = Chess.newCheckerboard;\n        this.Round = 0;\n\n        this.Disable = false;\n    }\n\n    /**\n     * 将棋局信息载入到类实例中\n     * 因为在构造函数时玩家1的信息已经写入\n     * 此处关于玩家的信息只需要更新玩家2的信息 和 当前玩家是否是参与玩家 (canChange1, canChange2)\n     * @param info 棋局信息\n     */\n    public LoadInfo(info: ChessDictionaryEntry): void {\n        this.player2MemberNumber = info.Player2;\n        this.player2Name = this.getPlayer2Name();\n\n        if (this.player1MemberNumber === Player.MemberNumber) {\n            this.canChange1 = true;\n            this.canChange2 = false;\n        }\n        else if (!this.player2MemberNumber || this.player2MemberNumber === Player.MemberNumber) {\n            this.canChange1 = false;\n            this.canChange2 = true;\n        }\n\n        this.Round = info.Round;\n        this.checkerboard = info.Checkerboard;\n    }\n\n    /**\n     * 在聊天室中寻找 player1 如果未找到则返回null\n     * @returns 聊天室中的玩家1(如果存在)\n     */\n    private getPlayer1(): Character | null {\n        return ChatRoomCharacter.find(c => c.MemberNumber == this.player1MemberNumber) ?? null;\n    }\n    /**\n     * 搜索玩家1 并返回名称(昵称(优先)或名字)\n     * @returns 玩家1的名称\n     */\n    private getPlayer1Name(): string {\n        const P1 = this.getPlayer1();\n\n        return P1 ? ((P1.Nickname === '' || !P1.Nickname) ? P1.Name : P1.Nickname) : L.get(\"Chess\", \"lost_identification\")\n    }\n    /**\n     * 在聊天室中寻找 player2 如果未找到则返回null\n     * @returns 聊天室中的玩家2(如果存在)\n     */\n    private getPlayer2(): Character | null {\n        if (this.player2MemberNumber === null) return null;\n        return ChatRoomCharacter.find(c => c.MemberNumber == this.player2MemberNumber) ?? null;\n    }\n    /**\n     * 搜索玩家2 并返回名称(昵称(优先)或名字)\n     * @returns 玩家2的名称\n     */\n    private getPlayer2Name(): string {\n        const P2 = this.getPlayer2();\n        if (this.player2MemberNumber === null) return L.get(\"Chess\", \"not_started_identification\");\n        return P2 ? ((P2.Nickname === '' || !P2.Nickname) ? P2.Name : P2.Nickname) : L.get(\"Chess\", \"lost_identification\");\n    }\n\n    /** 获取一个新的棋盘数据结构 */\n    public static get newCheckerboard(): Checkerboard {\n        const result = [];\n        for (let r = 1; r <= 19; r++) {\n            const _row = [];\n            for (let c = 1; c <= 19; c++) {\n                _row.push(null);\n            }\n            result.push(_row);\n        }\n        return result as Checkerboard;\n    }\n\n    /** 通过类的实例数据生成一个在页面中显示的棋盘元素 (不会添加到页面中) */\n    get Element(): HTMLDivElement {\n\n        // 容器\n        const main: HTMLDivElement = document.createElement('div');\n        main.className = 'chessContainer';\n        // 标题\n        const title: HTMLDivElement = document.createElement('div');\n        title.className = 'chessTitle';\n        const playerSymbol = L.get(\"Chess\", \"symbol.player\")\n\n        title.innerHTML =\n        `|---${playerSymbol}1: ${this.player1Name} 🆚 ${playerSymbol}2: ${this.player2Name}---|---${L.get(\"Chess\",\"symbol.round\")}: ${this.Round}---|`;\n\n        main.appendChild(title);\n\n        // 棋盘\n        const checkerboard: HTMLTableElement = document.createElement('table');\n        checkerboard.className = 'chessTable';\n\n\n        let rowIndex = 0;\n        let colIndex = 0;\n        // 获取信息\n        for (const row of this.checkerboard) {\n            rowIndex++;\n            colIndex = 0;\n            // 生成一行\n            const tableRow: HTMLTableRowElement = document.createElement('tr');\n            // 通过遍历生成一行的列\n            for (const i of row) {\n                colIndex++;\n                // 棋子\n                const call: HTMLTableCellElement = document.createElement('td');\n                call.className = 'chessCell';\n\n                // 行和列的序号属性\n                call.setAttribute('row', rowIndex.toString());\n                call.setAttribute('col', colIndex.toString());\n\n                // 值\n                call.setAttribute('value', 0)\n                // 如果true则为玩家1的棋子，false则为玩家2棋子\n                if (i === true) {\n                    call.setAttribute('value', 1);\n                } else if (i === false) {\n                    call.setAttribute('value', 2);\n                }\n\n                // 点击事件\n                call.addEventListener('click', () => {\n                    this.chessCallClick(call);\n                });\n\n                // 设置棋子颜色 玩家1为白色 2为黑色\n                this.updateChessCallColor(call);\n                // 添加到行中\n                tableRow.appendChild(call);\n            }\n            // 添加到棋盘中\n            checkerboard.appendChild(tableRow);\n        }\n        main.appendChild(checkerboard);\n        return main;\n    }\n\n    /**\n     * 处理点击棋子事件\n     * @param call 代表棋子的单元格\n     * @returns void\n     */\n    chessCallClick(call: HTMLTableCellElement): void {\n        if (this.Disable) return;\n        // 获取值\n        const callValue = call.getAttribute('value');\n        // 如果当前操作者是玩家1 \n        if (this.canChange1) {\n            // 如果当前值为0则设置为1(悔棋或修改)，否则设置为0\n            if (callValue === '0') call.setAttribute('value', 1);\n            if (callValue === '1') call.setAttribute('value', 0);\n        }\n        // 如果当前操作者是玩家2\n        if (this.canChange2) {\n            // 如果当前值为0则设置为1(悔棋或修改)，否则设置为0\n            if (callValue === '0') call.setAttribute('value', 2);\n            if (callValue === '2') call.setAttribute('value', 0);\n        }\n        // 设置棋子颜色 玩家1为白色 2为黑色\n        this.updateChessCallColor(call);\n        this.changeCheckerboard(parseInt(call.getAttribute('row')!), parseInt(call.getAttribute('col')!), parseInt(call.getAttribute('value')!) as (0 | 1 | 2));\n    }\n\n    /**\n     * 根据棋子的值 更新棋子的颜色\n     * @param call 代表棋子的单元格\n     */\n    private updateChessCallColor(call: HTMLTableCellElement) {\n        switch (call.getAttribute('value')) {\n            case '0':\n                call.className = 'chessCell';\n                break;\n            case '1':\n                call.className = 'chessCell chessCellWhite';\n                break;\n            case '2':\n                call.className = 'chessCell chessCellBlack';\n                break;\n        }\n    }\n\n    /**\n     * 改变对应位置棋子的值\n     * @param rowIndex 行索引(1~19)\n     * @param colIndex 列索引(1~19)\n     * @param value 要写入的值\n     */\n    changeCheckerboard(rowIndex: number, colIndex: number, value: 0 | 1 | 2): void {\n        switch (value) {\n            case 0:\n                this.checkerboard[rowIndex - 1][colIndex - 1] = null;\n                break;\n            case 1:\n                this.checkerboard[rowIndex - 1][colIndex - 1] = true;\n                break;\n            case 2:\n                this.checkerboard[rowIndex - 1][colIndex - 1] = false;\n                break;\n        }\n    }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseModule } from \"./BaseModule\";\nimport { conDebug, GetModule, timeRange, sendChangeLog, SendLocalMessage, sendLastChangeLog } from \"utils\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { ActivityModule } from \"./MActivity\";\nimport { ChessModule, Chess } from \"./MChess\";\nimport { Localization as L } from \"localization\";\n\nconst timeRangeRegex: RegExp = /^((0|1)\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?-((0|1)\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?$/;// 00:00(:00)-00:00(:00)\n\nexport class CommandsModule extends BaseModule {\n\n    commandsDict: { [CommandName: string]: ICommand } = {\n        help: {\n            Tag: \"help\",\n            Description: L.get(\"Command\", \"desc.help\"),\n            Action: (_args, _msg, _parsed) => {\n                this.DisplayHelp();\n            }\n        },\n        export: {\n            Tag: \"export\",\n            Description: L.get(\"Command\", \"desc.export\"),\n            Action: (_args, _msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params == 'h') {\n                    ChatRoomSendLocal(L.get(\"Command\", \"help.export\"), 20000)\n                } else if (params === '') {\n                    // 导出当前聊天室的全部聊天记录\n                    conDebug(\"导出当前聊天室的全部聊天记录\");\n                    GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat();\n                }\n                else if (timeRangeRegex.test(params)) {\n                    // 导出指定时间段的聊天记录 \n                    conDebug(`导出指定的 ${params} 时间段的聊天记录`);\n                    const separatorIndex = params.indexOf('-');\n\n                    if (separatorIndex !== -1) {\n                        const startTime = params.slice(0, separatorIndex).trim();\n                        const endTime = params.slice(separatorIndex + 1).trim();\n\n                        const time_limit: timeRange = {\n                            minTime: startTime,\n                            maxTime: endTime\n                        };\n                        GetModule<ChatroomModule>(\"ChatroomModule\").ExportChat(time_limit);\n                    }\n                }\n\n            }\n        },\n        v: {\n            Tag: \"v\",\n            Description: L.get(\"Command\", \"desc.v\"),\n            Action: (_args, _msg, _parsed) => {\n                sendChangeLog();\n            }\n        },\n        new: {\n            Tag: \"new\",\n            Description: L.get(\"Command\", \"desc.new\"),\n            Action: (_args, _msg, _parsed) => {\n                sendLastChangeLog()\n            }\n        },\n        act: {\n            Tag: \"act\",\n            Description: L.get(\"Command\", \"desc.act\"),\n            Action: (_args, _msg, _parsed) => {\n                let content = ''\n                GetModule<ActivityModule>(\"ActivityModule\").getAllAct().forEach((item) => {\n                    content += `<p style=\"font-weight: bold; margin: 0;\">${item}</p>`\n                })\n                conDebug(`command: AL    content: ${content}`)\n\n                ChatRoomSendLocal(content, 20000)\n            }\n        },\n        jieba: {\n            Tag: \"jieba\",\n            Description: L.get(\"Command\", \"desc.jieba\"),\n            Action: (_args, _msg, _parsed) => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                ChatRoomSendLocal(L.get(\"Command\", \"help.jieba\", stressStyle, weakStyle))\n            }\n        },\n        // edge: {\n        //     Tag: \"edge\",\n        //     Description: \"显示 关于边缘机制的修改内容帮助.\",\n        //     Action: (_args,_msg, _parsed) => {\n        //         ChatRoomSendLocal(`模组修改了的边缘机制:\n        //         每持续45秒钟边缘 ,将提高一层高潮抵抗难度，并且增加0.3~1.3秒的即将到来的高潮的持续时间-最多27秒持续时间.\n        //         如果失去边缘状态，将每45秒钟降低一层高潮抵抗难度，并且减少0.3~1.3秒的即将到来的高潮的持续时间-最少高潮持续时间范围4~7秒.\n        //         `)\n        //     }\n        // },\n        // orgasm: {\n        //     Tag: \"orgasm\",\n        //     Description: \"显示 关于高潮机制的修改内容帮助.\",\n        //     Action: (_args, _msg, _parsed) => {\n        //         ChatRoomSendLocal(`当角色抵抗高潮时被挠痒，则重新开始抵抗并且增加一层难度\\n当高潮或抵抗高潮时禁用输入框.\\n现在温度计进度和高潮抵抗难度不会随着重新登陆或跨平台而丢失.`)\n        //     }\n        // },\n        kaomoji: {\n            Tag: \"kaomoji\",\n            Description: L.get(\"Command\", \"desc.kaomoji\"),\n            Action: () => {\n                const stressStyle = \"style='word-wrap: break-word;list-style: square;color: #FFCEE9;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                const weakStyle = \"style='word-wrap: break-word;list-style: square;color: #B0809B;background-color: #AB6B8E;border-radius: 3px;padding: .2em .6em;margin: .2em .6em;'\"\n                ChatRoomSendLocal(L.get(\"Command\", \"help.kaomoji\", stressStyle, weakStyle))\n            }\n        },\n        // yw: {\n        //     Tag: \"yw\",\n        //     Description: \"淫纹大修说明! \",\n        //     Action: (_args, _msg, _parsed) => {\n        //         SendLocalMessage(`\n        //         1. 淫纹现在不属于Cosplay物品 换句话说,如果 勾选设置-在线-禁止其他玩家更改cosplay物品 也不会影响其他人能够更换你的淫纹，但这需要两人都装上本模组.\n        //         2. 玩家穿戴淫纹时，如果激活 心(小) 的图层 则激活本大修. 这意味着，从RP角度来说，心(小) 属于淫纹的核心.\n        //         3. 玩家的不同的淫纹可以触发不同的效果。有的效果需要多个图层同时激活才能触发。\n        //         4. 当想要某效果，但不想要对应的样式时，可以激活对应的图层但调整不透明度为0.\n        //         -------------------\n\n        //         淫纹的效果为:\n\n        //         a. 心(小) 图层激活时，将触发本大修.\n        //         b. 叶子 图层激活时，触发 【敏感】效果. 「 玩家的温度计上升速度将提高两倍，每激活一个淫纹效果，额外提高0.5倍. 」\n        //         c. 爆炸 图层激活时，触发 【粉异电流】效果. 「 每过200毫秒则有 0.15% 的概率触发一次产生剧烈快感的电流.换句话说: 时间越久概率越大，77秒后的触发概率为50%. 」\n        //         d. 开花 飞 图层激活时，触发 【迷幻】效果. 「 每过10~20分钟，将触发一次迷幻效果，持续20秒. 在触发期间，可能爆发毁灭高潮，可能随机的出现温度计上涨的情况. 触发迷幻效果时将缓慢进出房间，缓慢程度随机.」\n        //         e. 其他效果敬请期待....\n        //         -------------------\n        //         `)\n        //     }\n        // }\n        chess: {\n            Tag: \"chess\",\n            Description: L.get(\"Command\", \"desc.chess\"),\n            Action: (args, msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params === '') {\n                    GetModule<ChessModule>('ChessModule').ShowChessboard(\n                        {\n                            Player1: Player.MemberNumber ?? -1,\n                            Player2: null,\n                            Round: 0,\n                            Checkerboard: Chess.newCheckerboard,\n                            start: false,\n                            sender: Player.MemberNumber ?? -1\n                        },\n                        Player.MemberNumber ?? -1,\n                    );\n                } else if (params === 'h') {\n                    SendLocalMessage(L.get(\"Command\", \"help.chess\"))\n                }\n\n            }\n        }\n    }\n\n    public Load(): void {\n        CommandCombine([\n            {\n                Tag: \"xsa\",\n                Description: L.get(\"Command\", \"desc.mainCommand\"),\n                Action: (args, msg, parsed) => {\n                    if (parsed.length > 0) this.CommandHandler(parsed);\n                    else this.DisplayHelp();\n                },\n                AutoComplete: (parsed, low, msg) => {\n                    let word: string = \"\";\n                    const commandsList: string[] = [];\n                    for (const c in this.commandsDict) {\n                        commandsList.push(c);\n                    }\n                    const foundCommands: string[] = [];\n                    commandsList.forEach(c => {\n                        if (c.startsWith(parsed[0])) {\n                            foundCommands.push(c);\n                        }\n                    });\n                    if (foundCommands.length === 1) {\n                        word = foundCommands[0];\n                        if (parsed.length > 1) ChatRoomSendLocal(`${this.commandsDict[word].Description}`, 3000);\n                    } if (foundCommands.length > 1) {\n                        let content: string = ``;\n                        for (const c of foundCommands) {\n                            content += `/xsa ${c} ${this.commandsDict[c].Description}\\n`;\n                        }\n                        content += `${L.get(\"Command\", \"desc.version\")}: ${XSActivity_VERSION}\\n`\n                        ChatRoomSendLocal(content, 3000);\n                    }\n                    if (word !== \"\") ElementValue(\"InputChat\", CommandsKey + \"xsa \" + word);\n                    ElementFocus(\"InputChat\");\n                }\n            }\n        ]\n        )\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 20;\n    }\n\n\n    private getCommandParameters(parsed: string[]): string {\n        // if (parsed.length === 0) {\n        //     return '';\n        // }\n        const lastParam = parsed[parsed.length - 1];\n        if (lastParam.startsWith(\"-\")) {\n            return lastParam.slice(1);\n        }\n        return '';\n    }\n\n    private DisplayHelp(msg?: string): void {\n        if (msg === undefined) {\n            let content: string = ``;\n            for (const c in this.commandsDict) {\n                content += `/xsa ${c} ${this.commandsDict[c].Description}\\n`;\n            }\n            content += `${L.get(\"Command\", \"desc.version\")}: ${XSActivity_VERSION}\\n`\n            ChatRoomSendLocal(content, 10000);\n        } else {\n            ChatRoomSendLocal(msg, 10000)\n        }\n    }\n\n    private CommandHandler(parsed: Array<string>): void {\n        const parsedCount: number = parsed.length;\n        if (parsedCount == 0) this.DisplayHelp();\n        if (parsedCount >= 1) {\n            const last = parsed[parsedCount - 1];\n            if (last.startsWith(\"-\")) {\n                const cmd: string = parsed[parsedCount - 2];\n                if (cmd in this.commandsDict) {\n                    this.commandsDict[cmd]?.Action?.('', '', parsed);\n                }\n            } else {\n                if (last in this.commandsDict) {\n                    this.commandsDict[last]?.Action?.('', '', parsed);\n                }\n            }\n        }\n    }\n}","import { SendLocalMessage, hookFunction, sendLastChangeLog } from \"utils\";\nimport { BaseModule } from \"./BaseModule\";\nimport { CSShref } from \"utils\";\nimport { Localization as L } from \"localization\";\n\n\nexport const PlayerStorage = () => Player.XSA;\nexport const PlayerOnlineSharedSettingsStorage = () => Player.OnlineSharedSettings?.XSA;\nexport const ExtensionStorage = () => Player.ExtensionSettings.XSA as string;\nconst XSA_OnlineSharedSettingsDataKeyList = ['wombTattoosAppliedEffects', 'sensitiveLevel'];\nexport class DataModule extends BaseModule {\n\n    // 获取用户代理字符串\n    static userAgentString = navigator.userAgent;\n    // 创建正则表达式，匹配常见的浏览器版本信息\n    static browserVersionRegex = /(chrome|firefox|safari|opera|edge|msie|trident(?=\\/))\\/?\\s*(\\d+)/i;\n    // 使用正则表达式匹配浏览器版本信息\n    static match = this.userAgentString.match(this.browserVersionRegex);\n\n    static DefaultData: XSA_Data = {\n        haveWombTattoos: false,\n        wombTattoosAppliedEffects: [],\n        sensitiveLevel: 0,\n        resistCount: 0,\n        player_Progress: 0\n    }\n    static DefaultSetting: XSA_SettingsData = {\n\n    }\n    static DefaultOnlineSharedSettingsData: XSA_OnlineSharedSettingsData = {\n        wombTattoosAppliedEffects: [],\n        sensitiveLevel: 0\n    }\n    /**\n     * 浏览器名称\n     */\n    static browserName = this.match ? this.match[1] : 'unknown';\n    /**\n     * 浏览器版本\n     */\n    static browserVersion = this.match ? parseInt(this.match[2]) : -1;\n\n    /** 0代表没有更新 1代表更新了版本 -1代表老版本回退了 */\n    static IsModUpDate: -1 | 0 | 1 = 0;\n\n    public Load(): void {\n        DataModule.allDataTake();\n        this.hookListHandle();\n        DataModule.SyncDataForPlayer();\n\n        this.hookListHandle();\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 99;\n\n        window.BROWSER_NAME = DataModule.browserName;\n        window.BROWSER_VERSION = DataModule.browserVersion;\n\n        const linkElement = document.createElement(\"link\");\n        linkElement.rel = \"stylesheet\";\n        linkElement.type = \"text/css\";\n        linkElement.href = CSShref;\n\n        // 将 link 元素插入到 head 标签中\n        document.head.appendChild(linkElement);\n\n    }\n\n    private hookListHandle(): void {\n        hookFunction('ChatRoomLeave', this.priority, (args, next) => {\n            DataModule.allDataSave();\n\n            setTimeout(() => {\n                ActivityChatRoomArousalSync(Player);\n            }, 1000);\n\n            return next(args);\n        });\n        hookFunction('ChatRoomSync', this.priority, (args, next) => {\n            DataModule.allDataSave();\n            switch (DataModule.IsModUpDate) {\n                case 0:\n                    break;\n                case 1:\n                    setTimeout(() => {\n                        sendLastChangeLog();\n                    }, 2000);\n                    DataModule.IsModUpDate = 0;\n                    break;\n                case -1:\n                    setTimeout(() => {\n                        SendLocalMessage(L.get(\"Data\" ,\"TIPS_FOR_LOADING_OLDER_VERSIONS\"));\n                    }, 2000);\n                    DataModule.IsModUpDate = 0;\n                    break;\n            }\n            return next(args);\n        });\n    }\n\n    /**\n     * 从ExtensionStorage获取mod数据\n     */\n    public static allDataTake() {\n        // 处理XSASettingAndData的获取 从ExtensionStorage获取数据\n        if (ExtensionStorage()) {\n            // 处理XSASettingAndData的获取 从ExtensionStorage获取数据\n            Player.XSA = JSON.parse(LZString.decompressFromBase64(ExtensionStorage()) ?? '') as XSASettingAndData\n            // 如果没有获取到数据则读取默认数据\n            const afterVersion = Player.XSA.version;\n            if (afterVersion !== XSActivity_VERSION) {\n                const versionCompare = this.CompareVersions(afterVersion, XSActivity_VERSION);\n                this.IsModUpDate = versionCompare;\n                Player.XSA.version = XSActivity_VERSION;\n            }\n            for (const k2 in Player.XSA.data) {\n                if (Player.XSA.data[k2] === undefined) {\n                    Player.XSA.data[k2] = this.DefaultData[k2]\n                }\n            }\n            for (const k3 in Player.XSA.settings) {\n                if (Player.XSA.settings[k3] === undefined) {\n                    Player.XSA.settings[k3] = this.DefaultSetting[k3]\n                }\n            }\n        } else {\n            // 如果没有定义ExtensionStorage 则读取默认数据\n            Player.XSA = {\n                version: XSActivity_VERSION,\n                data: this.DefaultData,\n                settings: this.DefaultSetting\n            }\n            this.IsModUpDate = 1;\n        }\n\n        // 将获取到的数据输出到PlayerOnlineSharedSettingsStorage\n        if (PlayerOnlineSharedSettingsStorage()) {\n            Player.OnlineSharedSettings!.XSA = {\n                // 需要手动处理每一条需要的 PlayerOnlineSharedSettings 后续如果有使用额外的数据需要手动添加\n                wombTattoosAppliedEffects: Player.XSA.data.wombTattoosAppliedEffects ?? [],\n                sensitiveLevel: Player.XSA.data.sensitiveLevel ?? 0\n            }\n        } else {\n            Player.OnlineSharedSettings!.XSA = this.DefaultOnlineSharedSettingsData\n        }\n    }\n\n    /**\n     * 储存设置到ExtensionStorage\n     */\n    public static allDataSave() {\n        if (!ExtensionStorage()) {\n            Player.ExtensionSettings.XSA = ''\n        }\n        const data: XSASettingAndData = {\n            version: PlayerStorage()?.version ?? XSActivity_VERSION,\n            settings: PlayerStorage()?.settings ?? <XSA_SettingsData>{},\n            data: PlayerStorage()?.data ?? <XSA_Data>{},\n        }\n        Player.ExtensionSettings.XSA = LZString.compressToBase64(JSON.stringify(data));\n        ServerPlayerExtensionSettingsSync('XSA');\n    }\n\n    /**\n     * 保存设置到PlayerStorage\n     * @param settingKey 要保存的设置 key\n     * @param settingValue 要保存的值\n     */\n    public static SaveSettings(settingsItem: { [settingKey: string]: any }): void {\n        const settingsData = PlayerStorage()?.settings;\n        for (const item in settingsItem) {\n            if (settingsData && settingsData[item] != settingsItem[item]) {\n                settingsData[item] = settingsItem[item];\n            }\n        }\n    }\n    public static SaveData(dataItem: { [dataKey: string]: any }): void {\n        const data = PlayerStorage()?.data;\n        const OnlineSharedSettings = PlayerOnlineSharedSettingsStorage();\n        for (const itemKey in dataItem) {\n            if (data && data[itemKey] != dataItem[itemKey]) {\n                data[itemKey] = dataItem[itemKey];\n            }\n            if (OnlineSharedSettings && XSA_OnlineSharedSettingsDataKeyList.includes(itemKey)) {\n                OnlineSharedSettings[itemKey as keyof XSA_OnlineSharedSettingsData] = dataItem[itemKey];\n            }\n        }\n    }\n    /**\n     * 将PlayerStorage中的数据同步到Player 在模块加载时 takeData后调用\n     * @see Load\n     * @returns 无\n     */\n    public static SyncDataForPlayer() {\n        const data = PlayerStorage()?.data;\n        if (!data) return;\n        if (Player.ArousalSettings && Player.ArousalSettings.Progress && data.player_Progress) {\n            Player.ArousalSettings.Progress = data.player_Progress;\n        }\n        ActivityOrgasmGameResistCount = data.resistCount ?? 0\n    }\n    /**\n     * 比较两个版本号谁更大\n     * @param oldVersion 老的版本号\n     * @param newVersion 新的版本号\n     * @returns 是否新的版本号大于老的版本号 0代表相等 1代表新版本号大于老版本号 -1代表老版本号大于新版本号\n     */\n    private static CompareVersions(oldVersion: string, newVersion: string): 0 | 1 | -1 {\n        // 移除前导\"v\"，并按\".\"分割版本号字符串。对每个部分进行解析，对于无法解析的部分则视为0。\n        const parseVersion = (version: string): number[] => {\n            const withoutPrefix = version.replace(\"v\", \"\");\n            const parts = withoutPrefix.split(\".\");\n            return parts.map(part => {\n                const parsed = parseInt(part, 10);\n                return isNaN(parsed) ? 0 : parsed;\n            });\n        };\n\n        const oldVersionArray = parseVersion(oldVersion);\n        const newVersionArray = parseVersion(newVersion);\n\n        // 比较两个版本数组的每个元素。如果在任何位置上，旧版本的数字小于新版本的数字，则返回-1。\n        // 为了确保可比性，两个版本数组的长度将被调整为相等。\n        const maxLength = Math.max(oldVersionArray.length, newVersionArray.length);\n        for (let i = 0; i < maxLength; i++) {\n            const oldPart = oldVersionArray[i] ?? 0;\n            const newPart = newVersionArray[i] ?? 0;\n\n            if (oldPart < newPart) {\n                return 1; // 修改为1，因为此时应该是旧版本号小于新版本号\n            } else if (oldPart > newPart) {\n                return -1; // 此处-1，表示旧版本号大于新版本号\n            }\n        }\n        // 如果遍历完整个数组都没有找到差异，则认为两个版本号相等\n        return 1;\n    }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseModule } from \"./BaseModule\";\nimport { conDebug, GetModule, timeRange, sendChangeLog, MSGType, hookFunction } from \"utils\";\n\n\nexport class DrawModule extends BaseModule {\n\n    public Load(): void {\n\n        // 绘制闪光的hook\n        hookFunction(\"DrawProcessScreenFlash\", -999, (args, next) => {\n            DrawModule.DrawFlash();\n            return next(args);\n        });\n\n        // 绘制模糊效果的hook\n        hookFunction('Player.GetBlurLevel', -999, (args, next) => {\n            let blurLevel = next(args);\n            if (!CommonPhotoMode && blurLevel === 0 && DrawModule.blurLevel !== 0) {\n                blurLevel = DrawModule.blurLevel;\n            }\n            return blurLevel;\n        });\n\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 20;\n    }\n\n    /** 模糊等级 */\n    public static blurLevel: number = 0;\n\n    /** 绘制闪光事件map */\n    public static DrawFlashEventMap: Map<symbol, { color: string, time: number, intensity: number, evenEnd: boolean, callback?: () => void }>\n        = new Map<symbol, { color: string, time: number, intensity: number, evenEnd: boolean, callback?: () => void }>();\n\n    /**\n     * 设置一个闪光事件\n     * @param color 闪光颜色\n     * @param time 闪光时间\n     * @param intensity 闪光强度\n     * @param callback 闪光结束后的回调函数\n     */\n    public static setFlash(color: string, time: number, intensity: number, callback?: () => void): void {\n        this.DrawFlashEventMap.set(Symbol(), { color: color, time: time, intensity: intensity, evenEnd: false, callback: callback });\n    }\n\n    /** 当前正在处理的闪光事件的结束时间 */\n    public static FlashEndTime: number | null = null;\n\n\n    /**\n     * 绘制闪光效果\n     */\n    private static DrawFlash(): void {\n        // 如果当前屏幕不是聊天室且没有触发的闪光事件，则直接返回\n        if (CurrentScreen !== 'ChatRoom' && this.DrawFlashEventMap.size === 0) return;\n\n        // 遍历所有触发的闪光事件\n        for (const [key, event] of this.DrawFlashEventMap.entries()) {\n            // 如果事件触发已完成，则删除该事件并继续处理下一个事件\n            if (event.evenEnd) {\n                this.DrawFlashEventMap.delete(key);\n                continue;\n            }\n            // 获取当前时间\n            const commonTime = CommonTime();\n            // 闪光结束时间 如果存在则不变 如果不存在则初始化为当前时间加上闪光时间\n            this.FlashEndTime = this.FlashEndTime ?? event.time + commonTime;\n            // 如果闪光结束时间晚于当前时间\n            if (this.FlashEndTime > commonTime) {\n                // 计算闪光的透明度\n                const FlashAlpha = this.DrawGetFlashAlpha(this.FlashEndTime - commonTime, event.intensity);\n                // 绘制矩形\n                DrawRect(0, 0, 2000, 1000, event.color + FlashAlpha);\n                // 跳出循环进入调用本函数的下一个大循环\n                break;\n            } else {\n                // 标记事件触发完成\n                event.evenEnd = true;\n                // 清空闪光结束时间 以备下个事件使用\n                this.FlashEndTime = null;\n                // 调用回调函数\n                event.callback?.();\n                continue;\n            }\n        }\n    }\n\n    /**\n     * 设置当前屏幕模糊并持续一段时间\n     * @param duration 持续时间\n     * @param level 模糊等级\n     */\n    public static setDrawBlur(duration: number, level: number) {\n        this.blurLevel = level;\n        setTimeout(() => {\n            this.blurLevel = 0;\n        }, duration);\n    }\n\n    /**\n     * Gets the alpha of a screen flash. append to a color like \"#111111\" + DrawGetScreenFlash(FlashTime)\n     * @param  flashTime - Time remaining as part of the screen flash\n     * @param flashIntensity - Intensity of the screen flash\n     * @returns - alpha of screen flash\n     */\n    private static DrawGetFlashAlpha(flashTime: number, flashIntensity: number) {\n        let alpha = Math.max(0, Math.min(255, Math.floor(flashIntensity * (1 - Math.exp(-flashTime / 2500))))).toString(16);\n        if (alpha.length < 2) alpha = \"0\" + alpha;\n        return alpha;\n    }\n\n\n    /**\n     * Calculates dynamic intensity based on elapsed time.\n     * This example simulates a flickering effect.\n     * @param elapsedTime - The time elapsed since the flash started, in milliseconds.\n     * @param baseIntensity - The base intensity of the flash.\n     * @param totalDuration - The total duration of the flash.\n     * @returns - Adjusted intensity.\n     */\n    private static calculateDynamicIntensity(elapsedTime: number, baseIntensity: number, totalDuration: number): number {\n        // Oscillation period (in milliseconds)\n        const period = 500;\n        // Calculate phase of the sine wave\n        const phase = (2 * Math.PI * elapsedTime) / period;\n        // Oscillate intensity around the baseIntensity value\n        return baseIntensity + baseIntensity * 0.1 * Math.sin(phase);\n    }\n\n}\n\n\n","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction } from \"utils\";\n\n/**\n * 进程注入集合\n */\ninterface IProcessInjectionSetOBJ {\n    [key: string]: IInjectionCode\n}\n/**\n * 注入进程对象\n */\nexport interface IInjectionCode {\n    name: string,\n    priority: number,\n    preconditions: () => boolean,\n    timeInterval: number | (() => number),\n    code: () => void\n}\n\nexport class TimerProcessInjector extends BaseModule {\n\n    /** 注入进程的顺序队列 */\n    private static processInjectionSequence: IInjectionCode[] = [];\n    /** 注入进程集合 */\n    private static processInjectionSet: IProcessInjectionSetOBJ = {};\n    /** 注入进程集合 需要在Init函数的末尾注入 */\n    public static set setProcessInjectionSequence(sequence: IInjectionCode[]) {\n        for (const c of sequence) {\n            this.processInjectionSet[c.name] = c;\n        }\n    }\n\n    public Load(): void {\n        TimerProcessInjector.ProcessInjection();\n        this.Loaded = true;\n    }\n    public Init(): void {\n        this.priority = 999;\n    }\n\n    /** 记录上次调用时间 & 时间间隔 的集合 */\n    private static TimerLastCycleCallSet: { [name: string]: { timerLastCycleCall: number, timeInterval: number, isDynamic: boolean, getTimeInterval?: () => number } } = {};\n\n    /**\n     * 时序进程注入\n     */\n    private static ProcessInjection(): void {\n        // 根据优先级排序 从小到大 priority越大越靠后\n        this.InjectionSort();\n\n        // 设置计时器Set\n        for (const c of this.processInjectionSequence) {\n            if (typeof c.timeInterval == 'number') {\n                this.TimerLastCycleCallSet[c.name] = {\n                    timerLastCycleCall: -1,\n                    timeInterval: c.timeInterval,\n                    isDynamic: false\n                }\n            } else {\n                this.TimerLastCycleCallSet[c.name] = {\n                    timerLastCycleCall: -1,\n                    timeInterval: c.timeInterval(),\n                    isDynamic: true,\n                    getTimeInterval: c.timeInterval\n                }\n            }\n\n        }\n\n        conDebug(`[TimerProcessInjector] Injection Process... Injection Count: ${this.processInjectionSequence.length}`);\n        // 注入TimerProcess\n        hookFunction(\"TimerProcess\", 100, (args, next) => {\n            // 如果不是聊天室界面 则跳过\n            if (CurrentScreen !== 'ChatRoom') return next(args)\n\n            const currentTime = CommonTime();\n            for (const c of this.processInjectionSequence) {\n\n                // 初始化计时器\n                if (this.TimerLastCycleCallSet[c.name].timerLastCycleCall == -1) this.TimerLastCycleCallSet[c.name].timerLastCycleCall == currentTime;\n\n                // 判定前置条件 && 时间间隔已到\n                if (c.preconditions() && this.TimerLastCycleCallSet[c.name].timerLastCycleCall + this.TimerLastCycleCallSet[c.name].timeInterval <= currentTime) {\n                    c.code();\n                    this.TimerLastCycleCallSet[c.name].timerLastCycleCall = currentTime;\n                    if (this.TimerLastCycleCallSet[c.name].isDynamic) {\n                        this.TimerLastCycleCallSet[c.name].timeInterval = this.TimerLastCycleCallSet[c.name].getTimeInterval!();\n                    }\n                }\n\n                //conDebug(`[TimerProcessInjector] ${c.name} is Done.`);\n            }\n\n            return next(args);\n        });\n\n\n    }\n\n    /**\n     * 注入排序\n     */\n    private static InjectionSort(): void {\n        this.processInjectionSequence = Object.values(this.processInjectionSet)\n            .sort((a, b) => a.priority - b.priority);\n    }\n\n\n}","import { conDebug } from \"utils\";\nimport { BaseModule, FullModCount } from \"./BaseModule\";\nimport { ActivityModule } from \"./MActivity\";\n// import { ArousalModule } from \"./MArousal\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { CommandsModule } from \"./MCommand\";\nimport { DataModule } from \"./MData\";\nimport { DrawModule } from \"./MDrawModule\";\nimport { TimerProcessInjector } from \"./MTimerProcessInjector\";\nimport { ChessModule } from \"./MChess\";\n// import { WombTattoosModule } from \"./MWombTattoos\";\nimport { MODULES } from \"./ModulesDict\";\n\nexport class ModuleLoader {\n    public static modules: { [key: string]: BaseModule } = MODULES;\n    static mList: [BaseModule] | undefined;\n    public static modulesLoadCount: number = 0;\n    public static modulesInitCount: number = 0;\n    public static CompleteLoadingSuccessful: boolean = false;\n\n    /**\n     * 初始化模块 对外初始化入口\n     */\n    public static InitModules(): number {\n        this.generateModule();\n\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .sort((a, b) => a.priority - b.priority)\n                .forEach((m) => {\n                    // 初始化模块\n                    m.Init();\n                    conDebug(`模块 ${m.moduleName} 尝试初始化完成`);\n                    this.modulesInitCount++;\n                });\n        }\n\n        return this.modulesInitCount;\n    }\n\n    /**\n     * 加载模块   Loader对外加载入口.\n     */\n    public static LoadModules(): number {\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .forEach((m) => {\n                    // 加载模块\n                    m.Load();\n                    conDebug(`模块 ${m.moduleName} 已尝试加载`);\n                    this.modulesLoadCount++;\n                });\n        }\n\n        if (this.CheckModulesLoaded()) {\n            this.CompleteLoadingSuccessful = true;\n            window.XSActivity_Loaded = true;\n        } else {\n            this.CompleteLoadingSuccessful = false;\n            window.XSActivity_Loaded = false;\n        }\n        return this.modulesLoadCount;\n    }\n\n\n    public static CheckModulesLoaded(): boolean {\n        if (this.modulesLoadCount != FullModCount || this.modulesInitCount != this.modulesLoadCount) {\n            conDebug(`模块加载失败，模块数量不匹配，初始化数量为${this.modulesInitCount}模块加载数量为${this.modulesLoadCount}，应为${FullModCount}`);\n            return false;\n        }\n        if (ModuleLoader.mList === undefined) {\n            conDebug(`模块加载失败，模块列表未初始化`);\n            return false;\n        }\n        for (const m of ModuleLoader.mList) {\n            if (!m.Loaded) {\n                conDebug(`模块加载失败，模块 ${m.moduleName} 未加载完成`);\n                return false;\n            }\n        }\n        conDebug(`模块加载完成`);\n        return true;\n    }// 该方法在加载模块完成之后调用，确保mList中的所有模块都已加载。\n\n    /**\n     * 将模块添加到模块数组中\n     * @param module 要添加的模块对象\n     */\n    private static pushToModules(module: BaseModule): void {\n        this.modules[module.moduleName] = module;\n\n        if (typeof this.mList !== \"undefined\") {\n            this.mList.push(module);\n        } else {\n            this.mList = [module];\n        }\n    }\n\n    public static ModuleMap: { [mName in XS_ModuleName]: () => void } = {\n        Base: () => {\n            throw new Error(\"Base为模块的抽象类，请勿加载\");\n        },\n        TimerProcessInjector: () => {\n            this.pushToModules(new TimerProcessInjector('TimerProcessInjector'));\n        },\n        ActivityModule: () => {\n            this.pushToModules(new ActivityModule('ActivityModule'));\n        },\n        ChatroomModule: () => {\n            this.pushToModules(new ChatroomModule('ChatroomModule'));\n        },\n        CommandsModule: () => {\n            this.pushToModules(new CommandsModule('CommandsModule'));\n        },\n        DataModule: () => {\n            this.pushToModules(new DataModule('DataModule'));\n        },\n        DrawModule: () => {\n            this.pushToModules(new DrawModule('DrawModule'));\n        },\n        ChessModule: () => {\n            this.pushToModules(new ChessModule('ChessModule'));\n        },\n        // ArousalModule: () => {\n        //     this.pushToModules(new ArousalModule());\n        // },\n        // WombTattoosModule: () => {\n        //     this.pushToModules(new WombTattoosModule());\n        // }\n    }\n\n\n    private static generateModule(): number {\n        let generateModuleCount: number = 0;\n        for (const mN in ModuleLoader.ModuleMap) {\n            if (mN !== \"Base\" && this.modules[mN] === undefined) {\n                ModuleLoader.ModuleMap[mN as XS_ModuleName]();\n                generateModuleCount++;\n            }\n        }\n\n        return generateModuleCount;\n    }\n\n}","import { conDebug, hookFunction, MSGType } from \"./utils\";\nimport { ModuleLoader } from \"Modules/ModuleLoader\";\nimport { Localization } from \"localization\";\n\nfunction initWait() {\n    Localization.init();\n\n    conDebug({\n        name: \"Start Init\",\n        type: MSGType.Workflow_Log,\n        content: \"Init wait\"\n    });\n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        // 修改WombTattoos为非cosplay物品\n        hookFunction('LoginResponse', 999, (args, next) => {\n            const response = args[0];\n            if (response && typeof response !== 'string' && typeof response.Name === 'string' && 'AccountName' in response) {\n                \n                for (const group of AssetFemale3DCG as AssetGroupDefinition.Appearance[]) {\n                    if (group.Group === 'ClothAccessory') {\n                        for (const item of group.Asset as AssetDefinition.Appearance[]) {\n                            if (item.Name === \"WombTattoos\") {\n                                item.BodyCosplay = false;\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n            return next(args);\n        });\n        // 加载模组\n        hookFunction('LoginResponse', 10, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: MSGType.Workflow_Log\n            });\n            const response = args[0];\n            if (response && typeof response !== 'string'\n                && typeof response.Name === 'string'\n                && 'AccountName' in response\n                || !ModuleLoader.CompleteLoadingSuccessful) {\n                init();\n            }\n            return result;\n        });\n    }\n}\n\nexport function init() {\n    if (window.XSActivity_Loaded) return;\n\n\n    const InitModuleCount = ModuleLoader.InitModules();\n\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Initialized!\",\n        content: `Init ${InitModuleCount} modules `\n    });\n\n    const moduleCount = ModuleLoader.LoadModules();\n\n    conDebug({\n        type: MSGType.Workflow_Log,\n        name: \"XSActivity Loaded!\",\n        content: `Loaded ${moduleCount} modules    FullLoaded: ${ModuleLoader.CompleteLoadingSuccessful}`\n    });\n\n    if (!ModuleLoader.CompleteLoadingSuccessful) {\n        throw new Error(\"XSActivity load or init failed\");\n    }\n}\n\n\n\ninitWait();\n"],"names":["o","e","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","c","warn","s","f","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","l","precomputed","window","split","slice","join","encode","padStart","toUpperCase","d","originalHash","Object","assign","router","context","contextProperty","p","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","repository","allowReplace","apiEndpointEnter","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","globalThis","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","defineProperty","exports","value","MODULES","ChangeType","CHANGELOG","description","type","dev","changes","main","CSShref","DEBUG","bcModSDK","bcModSDKRef","XSActivity_VERSION","startsWith","target","SendLocalMessage","msg","className","timeout","ChatRoomSendLocal","MSGType","conDebug","isError","color","style","result","DebugLog","content","time","Date","toLocaleString","ModVersion","debug","theColor","GetModule","moduleName","copyAndDownloadHtmlElement","element","fileName","time_limit","newDoc","document","implementation","createHTMLDocument","copiedElement","cloneNode","querySelectorAll","forEach","dataTimeValue","getAttribute","currentTime","minTimeDate","minTime","maxTimeDate","maxTime","setDate","getDate","remove","removeElementsByTimeRange","removeProperty","clearElementStyle","fontSize","fontFamily","display","flexDirection","width","body","alignItems","justifyContent","backgroundColor","appendChild","htmlString","documentElement","outerHTML","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","sendLastChangeLog","styleForP","BaseModule","constructor","Loaded","Localization","init","args","next","getLangJson","langCode","lang","localStorage","getItem","LINK","fetch","then","response","json","data","getCount","STRINGS","XSA_STRINGS","catch","setTimeout","firstKey","key","param","STR","SlotReplace","Personalize","S","str","replace","match","digits","index","parseInt","pronoun","Other","ActivityModule","activityToAddDict","act","Name","Target","TargetSelf","MaxProgress","MaxProgressSelf","Prerequisite","desc","img","StimulationAction","isBase","prerequisiteDict","ItemHoodCovered","Action","acting","Judgment","TargetItemHoodCovered","acted","ItemNoseCovered","Kneeling","NotKneeling","CanLook","InventoryPrerequisiteMessage","InventoryGet","IsKneeling","IsBlind","Init","Load","LoadActivity","hookListHandler","getStr","params","L","Type","Dictionary","activityNameDictEntry","find","ActivityName","substitutions","ChatRoomMessageRunExtractors","Player","ActivityDictionaryText","Content","CommonStringSubstitute","Tag","Text","prereq","source","parts","aName","resultName","sc","tc","actName","SourceCharacter","TargetCharacter","Number","isNaN","MemberNumber","ArousalSettings","OrgasmStage","ActivityOrgasmGameResistCount","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","targetCharacterObj","undefined","sourceCharacterNickname","CharacterNickname","targetCharacterNickname","resultDict","Workflow_Log","Sender","ServerSend","SendActivity","ActivityOrgasmStop","ActivityOrgasmPrepare","actLength","activityDictAdd","aN","pushToActivity","activityDesc","ActivityDictionary","pendingActivity","nameWithoutPrefix","substring","actTarget","actTargetSelf","addedValues","aT","aTS","activity","ActivityFemale3DCG","ActivityFemale3DCGOrdering","getAllAct","suffix","getActName","ChatroomModule","moan","pathListHandler","AddChatRightClickEvent","addEventListener","HideContextmenu","contextmenuText","kaomojiSet","help","InputElement","getElementById","buildKaomojiButton","ResizeKaomojiButton","removeKaomojiMenu","showKaomojiMenu","hideKaomojiMenu","D","hStr","getHours","mStr","getMinutes","sStr","getSeconds","stammerHandler","kaomojiMatch","keys","kaomojiHandler","matchWord","RegExp","functionName","div","divClassName","event","preventDefault","showContextmenu","targetDiv","Contextmenu","changeContextmenuPosition","buildNewContextmenu","contextmenu","buttonInfo","contextmenuItem","innerText","replyPrefix","ElementValue","textContent","ElementFocus","navigator","clipboard","writeText","targetNum","ChatRoomSetTarget","ChatRoomTarget","left","clientX","screen","top","clientY","height","ExportChat","exportName","ChatRoomData","tenfoldStammeringProbability","isSegmentForCH","haveMoan","stammeringProbability","segmentList","segmentForCH","TranslationLanguage","stringArray","stammerForList","Intl","Segmenter","segmenterResult","toLowerCase","granularity","segment","results","messageList","currentWord","Math","random","addStammerEffect","Progress","floor","word","depth","message","getKaomojiMenu","KaomojiShouldShow","KaomojiButton","button","id","KaomojiMenuObject","menu","isKaomojiMenuCloseEventListenerAdded","closest","innerHTML","innerHeight","kaomojiContainer","container","buildKaomojiMenu","selectKaomojiTitle","kaomojiClick","kaomojiElement","cursorPosition","selectionStart","newValue","newCursorPosition","setSelectionRange","SendChat","menuTitle","menuTitleTextSet","menuTitleClose","title","selectMenuTitleStyleHandle","selectKey","classList","contains","key2","kaomojiList","getAllKaomoji","kaomoji","allKaomojiList","all","hp","sd","sy","ar","sp","cf","nt","ChessModule","CheckerInfo","sender","ShowChessboard","getChessDivKey","p1","p2","combinedString","hash","charCodeAt","SendAChess","Player1","Player2","Round","checkerboard","Chess","newCheckerboard","started","Checkerboard","start","info","chess","LoadInfo","chessKey","player1MemberNumber","player2MemberNumber","ChessDivMap","setAttribute","ChatRoomCurrentTime","Element","sendButton","Disable","ChatRoomAppendChat","player1Name","getPlayer1Name","canChange1","player2Name","canChange2","getPlayer2Name","getPlayer1","P1","Nickname","getPlayer2","P2","_row","playerSymbol","rowIndex","colIndex","row","tableRow","chessCallClick","updateChessCallColor","callValue","changeCheckerboard","timeRangeRegex","CommandsModule","commandsDict","Description","_args","_msg","_parsed","DisplayHelp","export","parsed","getCommandParameters","test","separatorIndex","trim","v","changesString","sendChangeLog","new","item","jieba","CommandCombine","CommandHandler","AutoComplete","low","commandsList","foundCommands","CommandsKey","lastParam","parsedCount","last","cmd","PlayerStorage","XSA","PlayerOnlineSharedSettingsStorage","OnlineSharedSettings","ExtensionStorage","ExtensionSettings","XSA_OnlineSharedSettingsDataKeyList","DataModule","_a","allDataTake","hookListHandle","SyncDataForPlayer","BROWSER_NAME","browserName","BROWSER_VERSION","browserVersion","linkElement","rel","head","allDataSave","ActivityChatRoomArousalSync","IsModUpDate","JSON","parse","LZString","decompressFromBase64","afterVersion","versionCompare","CompareVersions","k2","DefaultData","k3","settings","DefaultSetting","wombTattoosAppliedEffects","sensitiveLevel","DefaultOnlineSharedSettingsData","compressToBase64","stringify","ServerPlayerExtensionSettingsSync","SaveSettings","settingsItem","settingsData","SaveData","dataItem","itemKey","player_Progress","resistCount","oldVersion","newVersion","parseVersion","part","oldVersionArray","newVersionArray","maxLength","max","oldPart","newPart","userAgentString","userAgent","browserVersionRegex","haveWombTattoos","DrawModule","DrawFlash","blurLevel","CommonPhotoMode","setFlash","intensity","callback","DrawFlashEventMap","Symbol","evenEnd","CurrentScreen","commonTime","CommonTime","FlashEndTime","FlashAlpha","DrawGetFlashAlpha","DrawRect","setDrawBlur","duration","level","flashTime","flashIntensity","alpha","min","exp","calculateDynamicIntensity","elapsedTime","baseIntensity","totalDuration","phase","PI","sin","TimerProcessInjector","setProcessInjectionSequence","sequence","processInjectionSet","ProcessInjection","InjectionSort","processInjectionSequence","timeInterval","TimerLastCycleCallSet","timerLastCycleCall","isDynamic","getTimeInterval","preconditions","code","b","ModuleLoader","InitModules","generateModule","mList","modulesInitCount","LoadModules","modulesLoadCount","CheckModulesLoaded","CompleteLoadingSuccessful","XSActivity_Loaded","pushToModules","module","modules","generateModuleCount","mN","ModuleMap","InitModuleCount","moduleCount","Base","group","AssetFemale3DCG","Group","Asset","BodyCosplay"],"mappings":"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","x_google_ignoreList":[0]}