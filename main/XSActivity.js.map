{"version":3,"file":"XSActivity.js","sources":["../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../src/Modules/ModulesDict.ts","../src/utils.ts","../src/Modules/BaseModule.ts","../src/Modules/MChatroom.ts","../src/Modules/MCommand.ts","../src/Modules/MActivity.ts","../src/Modules/ModuleLoader.ts","../src/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.1.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const e=\"1.1.0\";function o(e){alert(\"Mod ERROR:\\n\"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&\"object\"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${o}\\nPatch1:\\n${t.get(o)||\"\"}\\nPatch2:\\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(\".\");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const d=o[a[a.length-1]];if(\"function\"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(d.toString().replaceAll(\"\\r\\n\",\"\\n\")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){\"string\"==typeof e&&\"string\"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&\"object\"==typeof e||o(\"Failed to register mod: Expected info object, got \"+typeof e),\"string\"==typeof e.name&&e.name||o(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof e.name);let i=`'${e.name}'`;\"string\"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,\"string\"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&\"string\"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&\"object\"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(d));const s=e=>{\"string\"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);\"number\"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))\"string\"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),\"string\"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>(\"string\"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith(\"1.0.\")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&\"object\"==typeof o&&\"string\"==typeof o.name&&\"string\"==typeof o.version?e.registerMod(o.name,o.version,\"object\"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","import type { BaseModule } from \"./BaseModule\";\n\nexport const modules: { [key: string]: BaseModule } = {};","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport { DEBUG, ModVersion } from \"declaration/dev_const\";\nimport { modules } from \"Modules/ModulesDict\";\nimport { BaseModule } from \"Modules/BaseModule\";\n\n\n// SDK\nexport const bcModSDK = bcModSDKRef.registerMod({\n\tname: \"XiaoSuActivity\",\n\tfullName: \"XiaoSu's Activity Expand\",\n\tversion: XSActivity_VERSION.startsWith(\"v\") ? XSActivity_VERSION.slice(1) : XSActivity_VERSION,\n\trepository: \"https://github.com/iceriny/XiaoSuActivity\"\n});\n\nexport enum ModuleCategory {\n\tCore = -1,\n\tGlobal = 0,\n\tTest = 1\n}\n\ntype PatchHook = (args: any[], next: (args: any[]) => any) => any;\nexport function hookFunction(target: string, priority: number, hook: PatchHook): () => void {\n\tconst removeCallback = bcModSDK.hookFunction(target, priority, hook);\n\treturn removeCallback;\n}\n\nexport function SendChat(msg: string) {\n\tServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n}\n\n\n// Utils\ninterface XSDebugMSG {\n\tname: string;\n\ttype: MSGType;\n\tcontent: any;\n}\nexport enum MSGType {\n\tDebugLog,\n\tWorkflow_Log,\n}\nexport function conDebug(msg: XSDebugMSG | string) {\n\tif (DEBUG === false) return;\n\n\tlet result: object;\n\n\tif (typeof msg === \"string\") {\n\t\tresult = {\n\t\t\tname: \"XiaoSuActivity_Debug\",\n\t\t\ttype: MSGType.DebugLog,\n\t\t\tcontent: msg,\n\t\t\ttime: new Date().toLocaleString(),\n\t\t\tModVersion: ModVersion\n\t\t}\n\t} else {\n\t\tresult = {\n\t\t\tname: msg.name,\n\t\t\ttype: msg.type,\n\t\t\tcontent: msg.content,\n\t\t\ttime: new Date().toLocaleString(),\n\t\t\tModVersion: ModVersion\n\t\t}\n\t}\n\tconsole.debug(result);\n}\n\nexport function GetModule(moduleName: string): BaseModule {\n\treturn modules[moduleName];\n}\n\n\nfunction removeElementsByTimeRange(element: HTMLElement, time_limit: timeRange) {\n\tconst elements = element.querySelectorAll('[data-time]');\n\n\telements.forEach((element) => {\n\t\tconst dataTimeValue = element.getAttribute('data-time');\n\n\t\tif (dataTimeValue) {\n\t\t\t// 将字符串时间值转换为 Date 对象\n\t\t\tconst currentTime = new Date(`2000-01-01 ${dataTimeValue}`);\n\t\t\tconst minTimeDate = new Date(`2000-01-01 ${time_limit.minTime}`);\n\t\t\tconst maxTimeDate = new Date(`2000-01-01 ${time_limit.maxTime}`);\n\n\t\t\t// 判断是否在时间范围内\n\t\t\tif (currentTime < minTimeDate || currentTime > maxTimeDate) {\n\t\t\t\t// 使用 remove 方法\n\t\t\t\telement.remove();\n\n\t\t\t\t// 或者使用 parentNode.removeChild 方法\n\t\t\t\t// element.parentNode.removeChild(element);\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport interface timeRange {\n\tminTime: string;\n\tmaxTime: string;\n}\n\nexport function copyAndDownloadHtmlElement(element: HTMLElement | null, fileName: string, time_limit: timeRange | null = null) {\n\t// 创建新文档\n\tconst newDoc = document.implementation.createHTMLDocument();\n\n\tif (element === null) {\n\t\tconDebug(\"element is null\");\n\t\treturn;\n\t}\n\n\tfunction clearElementStyle(element: HTMLElement) {\n\t\tconst style = element.style;\n\t\t// 逐个删除属性\n\t\twhile (style.length > 0) {\n\t\t\tstyle.removeProperty(style[0]);\n\t\t}\n\t}\n\n\t// 复制元素\n\tconst copiedElement = element.cloneNode(true) as HTMLElement;\n\n\tif (time_limit !== null) {\n\t\tremoveElementsByTimeRange(copiedElement, time_limit);\n\t}\n\n\tclearElementStyle(copiedElement);\n\n\tcopiedElement.style.fontSize = \"14.784px\";\n\tcopiedElement.style.fontFamily = \"Arial, sans-serif\";\n\tcopiedElement.style.display = \"flex\";\n\tcopiedElement.style.flexDirection = \"column\";\n\tcopiedElement.style.width = \"70vw\";\n\n\tnewDoc.body.style.display = \"flex\";\n\tnewDoc.body.style.alignItems = \"center\";\n\tnewDoc.body.style.justifyContent = \"center\";\n\tnewDoc.body.style.backgroundColor = \"#f2f2f2\";\n\t// 将复制的元素添加到新文档的 body 中\n\tnewDoc.body.appendChild(copiedElement);\n\n\t// 将新文档转换为 HTML 字符串\n\tconst htmlString = newDoc.documentElement.outerHTML;\n\n\t// 创建一个下载链接\n\tconst blob = new Blob([htmlString], { type: 'text/html' });\n\tconst link = document.createElement('a');\n\tlink.href = URL.createObjectURL(blob);\n\tlink.download = fileName;\n\n\t// 触发下载\n\tlink.click();\n}","export class BaseModule {\n    moduleName: string = '';\n    priority: number = 0;\n\n    constructor() {\n        this.init();\n    }\n\n    init(): void { }\n    Load(): void { }\n}","import { conDebug, hookFunction, SendChat, MSGType , copyAndDownloadHtmlElement, timeRange} from \"utils\";\nimport { BaseModule } from \"Modules/BaseModule\";\n\nexport class ChatroomModule extends BaseModule {\n    moduleName = \"Chatroom\";\n    priority = 30;\n    Load(): void {\n        hookFunction(\"ChatRoomLoad\", 30, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: 'ChatRoomLoadTest',\n                type: MSGType.DebugLog,\n                content: args\n            });\n            // SendChat(\"我是! 小酥的小白鼠! 吱吱吱吱~~~\");\n            return result;\n        });\n    }\n\n\n    ExportChat(time_limit : timeRange | null = null) : void {\n        const exportName : string | undefined = `${ChatRoomData?.Name}_${new Date().toLocaleString()}`;\n\n        const mainElement : HTMLElement | null = document.getElementById('TextAreaChatLog')\n\n        copyAndDownloadHtmlElement(mainElement, exportName, time_limit)\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, MSGType, GetModule, timeRange } from \"utils\";\nimport { ChatroomModule } from \"./MChatroom\";\n\nconst timeRangeRegex: RegExp = /^(((0|1)\\d|2[0-3]):[0-5]\\d)-(((0|1)\\d|2[0-3]):[0-5]\\d)$/;\n\nexport class CommandsModule extends BaseModule {\n    moduleName = \"Commands\";\n    priority = 20;\n\n    commandsDict: { [CommandName: string]: ICommand } = {\n        help: {\n            Tag: \"help\",\n            Description: \"显示 [小酥的活动模组] 的相关命令.\",\n            Action: (args, msg, parsed) => {\n                this.DisplayHelp();\n            }\n        },\n        export: {\n            Tag: \"export\",\n            Description: \"导出当前聊天室的聊天记录. 输入: ‘/xsa export -h’ 显示导出命令的使用方法.\",\n            Action: (args, msg, parsed) => {\n                const params: string = this.getCommandParameters(parsed);\n                if (params == 'h') {\n                    ChatRoomSendLocal('输入: ‘/xsa export -[时间]’导出指定时间范围内的聊天记录.\\n例如: ‘/xsa export -05:34-20:40’\\n默认导出当前聊天室的全部聊天记录.\\n注意! \\n如果时间段过长例如第一天的05:34到第二天的06:00则可能出现导出错误.')\n                } else if (params === '') {\n                    // 导出当前聊天室的全部聊天记录\n                    conDebug(\"导出当前聊天室的全部聊天记录\");\n                    (GetModule(\"Chatroom\") as ChatroomModule).ExportChat();\n                }\n                else if (timeRangeRegex.test(params)) {\n                    // 导出指定时间段的聊天记录 \n                    conDebug(`导出指定的 ${params} 时间段的聊天记录`);\n                    const separatorIndex = params.indexOf('-');\n\n                    if (separatorIndex !== -1) {\n                        const startTime = params.slice(0, separatorIndex).trim();\n                        const endTime = params.slice(separatorIndex + 1).trim();\n\n                        const time_limit: timeRange = {\n                            minTime: startTime,\n                            maxTime: endTime\n                        };\n                        (GetModule(\"Chatroom\") as ChatroomModule).ExportChat();\n                    }\n                }\n\n            }\n        }\n    }\n\n\n\n    private getCommandParameters(parsed: string[]): string {\n        // if (parsed.length === 0) {\n        //     return '';\n        // }\n        const lastParam = parsed[parsed.length - 1];\n        if (lastParam.startsWith(\"-\")) {\n            return lastParam.slice(1);\n        }\n        return '';\n    }\n    public Load(): void {\n        CommandCombine(\n            {\n                Tag: \"xsa\",\n                Description: \"显示 [小酥的活动模组] 的相关命令.\",\n                Action: (args, msg, parsed) => {\n                    if (parsed.length > 0) this.CommandHandler(parsed);\n                    else this.DisplayHelp();\n                }\n            }\n        )\n    }\n\n    private DisplayHelp(msg: string | undefined = undefined): void {\n        if (msg === undefined) {\n            let content: string = ``;\n            for (const c in this.commandsDict) {\n                content += `/xsa ${c} ${this.commandsDict[c].Description}\\n`;\n            }\n            ChatRoomSendLocal(content, 5000);\n        } else {\n            ChatRoomSendLocal(msg, 5000)\n        }\n    }\n\n    private CommandHandler(parsed: Array<string>): void {\n        const parsedCount: number = parsed.length;\n        if (parsedCount == 0) this.DisplayHelp();\n        if (parsedCount >= 1) {\n            const last = parsed[parsedCount - 1];\n            if (last.startsWith(\"-\")) {\n                const cmd: string = parsed[parsedCount - 2];\n                if (cmd in this.commandsDict) {\n                    this.commandsDict[cmd]?.Action?.('', '', parsed);\n                }\n            } else {\n                if (last in this.commandsDict) {\n                    this.commandsDict[last]?.Action?.('', '', parsed);\n                }\n            }\n        }\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { conDebug, hookFunction, MSGType } from \"utils\";\n\n/*\n * 动作的限定条件信息对象\n*/\ninterface prerequisite {\n    Name: ActivityPrerequisiteXiaoSu;\n    Action: (args: any) => boolean;\n}\nexport class ActivityModule extends BaseModule {\n    moduleName = 'Activity';\n    priority = 50;\n\n    init(): void {\n\n    }\n    Load(): void {\n        this.LoadActivity();\n\n        /**\n         * 处理没有装本插件的玩家接受到的消息\n         * 原理为使用hookFunction来拦截ServerSend函数的执行,并判断消息中是否包含自定义活动的关键词,如果包含则执行自定义操作\n         * - 即替换原本的描述\n         */\n        hookFunction(\"ServerSend\", 5, (args, next) => { // ServerSend 只能检测自己发出的聊天信息 可以用来替换自己发出去的文字\n            if (args[0] == \"ChatRoomChat\" && args[1]?.Type == \"Activity\") {\n                let data = args[1];\n                let actName = data.Dictionary[3]?.ActivityName ?? \"\";\n                if (actName.indexOf(\"XSAct_\") == 0) { // 这个条件表示只有当消息中包含以 \"XSAct_\" 开头的自定义活动时,才会执行下面的操作\n                    // 拦截自定义活动的发送并执行自定义操作\n                    let { metadata, substitutions } = ChatRoomMessageRunExtractors(data, Player)\n                    let msg = ActivityDictionaryText(data.Content);\n                    msg = CommonStringSubstitute(msg, substitutions ?? [])\n                    data.Dictionary.push({\n                        Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD \" + data.Content,\n                        Text: msg\n                    });\n                }\n            }\n            return next(args);\n        });\n\n        /**\n         * 1. 当条件关键词为自定义关键词时\n         * - 处理限制条件\n         * 2. 当关键词不是自定义关键词时\n         * - 执行原方法\n         */\n        hookFunction(\"ActivityCheckPrerequisite\", 500, (args, next) => {\n            // conDebug({\n            //     name: \"ActivityCheckPrerequisite\",\n            //     type: MSGType.DebugLog,\n            //     content: args\n            // });\n            const prereq = args[0];\n            const customPrereq = this.prerequisiteDict[prereq];\n            if (typeof customPrereq === \"undefined\") return next(args);\n            else return this.prerequisiteDict[prereq].Action(args);\n        });\n    }\n\n    // hook:\n\n\n\n\n    //============================================================\n\n    /**\n     * 载入自定义动作\n     */\n    LoadActivity(): void {\n        for (const a in this.activityToAddDict) { // a 为活动名\n            this.pushToActivity(this.activityToAddDict[a].act); \n\n            this.activityDictAdd(); \n\n            //加载文字描述\n            const activityDesc = this.activityToAddDict[a].desc;\n            activityDesc?.forEach((d) => {\n                ActivityDictionary?.push(d);\n            });\n        }\n    }\n    //============================================================\n    /**\n     * 初始化活动的文字描述。\n     */\n    activityDictAdd() {\n\n        for (const a in this.activityToAddDict) {\n            const pendingActivity = this.activityToAddDict[a];\n\n            const actName = pendingActivity.act.Name;\n            const nameWithoutPrefix = actName.substring(6);\n            const actTarget = pendingActivity.act.Target;\n            const actTargetSelf = pendingActivity.act.TargetSelf;\n\n            const addedValues = [];\n\n            addedValues.push([`ActivityAct_${actName}`, `${nameWithoutPrefix}`]);\n            addedValues.push([`Activity${actName}`, `${nameWithoutPrefix}`]);\n            if (actTarget.length > 0) {\n                addedValues.push([`Label-ChatOther-${actTarget}-${actName}`, `${nameWithoutPrefix}`]);\n                addedValues.push([`ChatOther-${actTarget}-${actName}`, pendingActivity.descString[0]]);\n            }\n            if (typeof actTargetSelf !== 'undefined' && typeof actTargetSelf !== 'boolean' && actTargetSelf.length > 0) {\n                addedValues.push([`Label-ChatSelf-${actTargetSelf}-${actName}`, `${nameWithoutPrefix}`]);\n                addedValues.push([`ChatSelf-${actTargetSelf}-${actName}`, pendingActivity.descString[1]]);\n            }\n\n            pendingActivity.desc = addedValues;\n        }\n    }\n    /**\n     * 将传入的活动对象载入\n     * @param activity 将要载入的活动对象\n     */\n    private pushToActivity(activity: Activity) {\n\n        ActivityFemale3DCG.push(activity);\n        ActivityFemale3DCGOrdering.push(activity.Name);\n    }\n    //============================================================\n\n    // ActivityNameXiaoSu = \"XSAct_眯眼\" | \"XSAct_眼神飘忽\" | \"XSAct_甩头发\" | \"XSAct_轻抚发梢\" | \"XSAct_叼起头发\" | \"XSAct_嗅头发\" | \"XSAct_皱鼻子\" | \"XSAct_打喷嚏\" | \"XSAct_深呼吸\"\n    // SourceCharacter 为动作发起人  TargetCharacter 为动作目标人\n    /**\n     * 将要添加的动作字典\n     * @interface Activity - Activity对象的属性如下定义:\n     * @param  Name - 活动的名称\n     * @param  MaxProgress - 活动的最大进度\n     * @param  MaxProgressSelf - 活动自身的最大进度\n     * @param  Prerequisite - 活动的前置条件\n     * @param  Target - 活动的目标\n     * @param  TargetSelf - 活动的自身目标\n     * @param  Reverse - 是否反转前置条件的判断\n     * @param  MakeSound - 是否播放声音 used for setting {@link ExtendedItemAutoPunishHandled} \n     * @param  StimulationAction - 当使用该活动时触发的动作\n     * @param  ActivityExpression - 活动表达式,包含一系列的动作 该活动的默认表达式。可以使用资产上的ActivityExpression进行覆盖。\n     * -------\n     * @desc - desc默认需要为null,当活动初始化时,会自动添加文字描述\n     * @descString - 两个元素的数组 [0]为如果目标为他人的描述，[1]为目标自己的描述\n    */\n    activityToAddDict: { [ActivityName: string]: { act: Activity, desc: null | string[][], descString: [string, string] } } = {\n        squint: {\n            act: {\n                Name: \"XSAct_眯眼\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", \"SourceCharacter眯了眯眼.\"]\n        },\n        eyeFlutter: {\n            act: {\n                Name: \"XSAct_眼神飘忽\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHead\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: []\n            },\n            desc: null,\n            descString: [\"\", \"SourceCharacter眼神飘忽的左看右看.\"]\n        },\n        tossHair: {\n            act: {\n                Name: \"XSAct_甩头发\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]\n            },\n            desc: null,\n            descString: [\"\", \"SourceCharacter甩动着头发.\"]\n        },\n        caressOfHair: {\n            act: {\n                Name: \"XSAct_轻抚发梢\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\", \"CantUseArms\"]\n            },\n            desc: null,\n            descString: [\"SourceCharacter轻柔抚动着TargetCharacter的头发.\", \"SourceCharacter轻柔抚动着自己的头发.\"]\n        },\n        pickUpHair: {\n            act: {\n                Name: \"XSAct_叼起头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"UseMouth\", \"ItemHoodCovered\", \"TargetItemHoodCovered\"],\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"SourceCharacter轻轻咬起TargetCharacter的头发.\", \"SourceCharacter轻轻咬起自己的头发.\"]\n        },\n        sniffHair: {\n            act: {\n                Name: \"XSAct_嗅头发\",\n                Target: [\"ItemHood\"],\n                TargetSelf: [\"ItemHood\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\", \"TargetItemHoodCovered\"],//\"ItemNoseCovered\"\n                StimulationAction: \"Talk\"\n            },\n            desc: null,\n            descString: [\"SourceCharacter在TargetCharacter的发间嗅着，鼻息弥漫着TargetCharacter的发香.\", \"SourceCharacter撩起自己的头发轻轻嗅着.\"]\n        },\n        wrinkleNose: {\n            act: {\n                Name: \"XSAct_皱鼻子\",\n                Target: [\"\"],\n                TargetSelf: [\"ItemNose\"],\n                MaxProgress: 20,\n                MaxProgressSelf: 20,\n                Prerequisite: [\"ItemHoodCovered\"]// , \"ItemNoseCovered\"]\n            },\n            desc: null,\n            descString: [\"\", \"SourceCharacter皱了皱自己的鼻头.\"]\n        }\n    }\n\n    /**\n     * 前置条件字典\n     * @PrerequisiteName - 需要是在{@link ActivityPrerequisiteXiaoSu}的字符串\n     * @Name - 需要是在{@link ActivityPrerequisiteXiaoSu}的字符串\n     * @Action - 检测判断的具体动作\n     * - @param args - 一个数组,包含四个元素.\n     * - args[0]为@param prereq:{@link ActivityPrerequisite} 判定决定使用哪个条件的依据，但此处无用 请不要在这里使用该参数\n     * - args[1]为@param acting:{@link Character} | {@link PlayerCharacter} 代表动作发起者的数据\n     * - args[2]为@param acted:{@link Character} | {@link PlayerCharacter} 代表动作目标的数据\n     * - args[3]为@param group:{@link AssetGroup}.\n     */\n    prerequisiteDict: { [PrerequisiteName: string]: prerequisite } = {\n        'ItemHoodCovered': { //头部面罩位置是否覆盖\n            Name: \"ItemHoodCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                const acting = args[1] as Character | PlayerCharacter;\n                //const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemHoodCovered(acting);\n            }\n        },\n        'TargetItemHoodCovered': { //目标的头部面罩位置是否覆盖\n            Name: \"TargetItemHoodCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                //const acting = args[1] as Character | PlayerCharacter;\n                const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemHoodCovered(acted);\n            }\n        },\n        'ItemNoseCovered': { //头部鼻子位置是否覆盖\n            Name: \"ItemNoseCovered\",\n            Action: (args) => {\n                //const prereq = args[0] as ActivityPrerequisite;\n                const acting = args[1] as Character | PlayerCharacter;\n                //const acted = args[2] as Character | PlayerCharacter;\n                //const group = args[3] as AssetGroup;\n\n                return this.Judgment.ItemNoseCovered(acting);\n            }\n        },\n    }\n    /**\n     * 判断函数字典\n     * 前置条件字典将要调用的方法集合\n    */\n    Judgment: { [judgmentName: string]: (acting: Character | PlayerCharacter, acted?: Character | PlayerCharacter, group?: AssetGroup) => boolean } = {\n        ItemHoodCovered: (acting: Character | PlayerCharacter): boolean => { // 头部面罩位置是否覆盖\n            return InventoryPrerequisiteMessage(acting, \"HoodEmpty\") === \"\";\n        },\n        ItemNoseCovered: (acting: Character | PlayerCharacter): boolean => { // 鼻子位置是否覆盖 // 暂时无效 回头修复\n            return InventoryGroupIsBlocked(acting, \"NoseEmpty\");\n        }\n    }\n}","import { BaseModule } from \"./BaseModule\";\nimport { ChatroomModule } from \"./MChatroom\";\nimport { CommandsModule } from \"./MCommand\";\nimport { modules } from \"./ModulesDict\";\nimport { ActivityModule } from \"./MActivity\";\n\nexport class ModuleLoader {\n    public static modules: { [key: string]: BaseModule } = modules;\n    static mList: [BaseModule] | undefined;\n\n\n    /**\n     * 加载模块   Loader对外入口.\n     */\n    public static LoadModules(): void {\n        this.generateModule();\n\n        // 如果模块列表存在\n        if (typeof this.mList !== \"undefined\") {\n            // 对模块列表进行排序，按照优先级升序排列\n            this.mList\n                .sort((a, b) => a.priority - b.priority)\n                .forEach((m) => {\n                    // 加载模块\n                    m.Load();\n                });\n        }\n    }\n\n\n    /**\n     * 将模块添加到模块数组中\n     * @param module 要添加的模块对象\n     */\n    private static pushToModules(module: BaseModule): void {\n        this.modules[module.moduleName] = module;\n        if (typeof this.mList !== \"undefined\") {\n            this.mList.push(module);\n        } else {\n            this.mList = [module];\n        }\n    }\n\n    private static generateModule(): void {\n        this.pushToModules(new ChatroomModule());\n        this.pushToModules(new CommandsModule());\n        this.pushToModules(new ActivityModule());\n    }\n\n}","import { conDebug, hookFunction, SendChat, MSGType } from \"./utils\";\n import { ModuleLoader } from \"Modules/ModuleLoader\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: MSGType.Workflow_Log,\n        content: \"Init wait\"\n    });  \n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        hookFunction('LoginResponse', 0, (args, next) => {\n            conDebug({\n                name: `Init! LoginResponse caught`,\n                content: args,\n                type: MSGType.Workflow_Log\n            });\n            next(args);\n            const response = args[0];\n            if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n                init();\n            }\n        });\n    } else {\n        conDebug({\n            name: \"logged\",\n            type: MSGType.Workflow_Log,\n            content: \"Already logged in, init\"\n        });\n        init();\n    }\n}\n\nexport function init() {\n\n    ModuleLoader.LoadModules();\n    \n    conDebug(`XSActivity Loaded!`);\n}\n\n\n\ninitWait();\n"],"names":["e","o","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","d","warn","s","p","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","c","precomputed","window","split","slice","join","encode","padStart","toUpperCase","l","originalHash","Object","assign","router","context","contextProperty","keys","f","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","allowReplace","repository","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","startsWith","_shim10register","defineProperty","exports","value","modules","bcModSDK","ModuleCategory","MSGType","target","GetModule","moduleName","copyAndDownloadHtmlElement","element","fileName","time_limit","newDoc","document","implementation","createHTMLDocument","copiedElement","cloneNode","querySelectorAll","forEach","dataTimeValue","getAttribute","currentTime","Date","minTimeDate","minTime","maxTimeDate","maxTime","remove","removeElementsByTimeRange","style","removeProperty","clearElementStyle","fontSize","fontFamily","display","flexDirection","width","body","alignItems","justifyContent","backgroundColor","appendChild","htmlString","documentElement","outerHTML","blob","Blob","type","link","createElement","href","URL","createObjectURL","download","click","BaseModule","constructor","init","Load","ChatroomModule","args","next","result","DebugLog","ExportChat","exportName","ChatRoomData","Name","toLocaleString","getElementById","timeRangeRegex","CommandsModule","commandsDict","help","Tag","Description","Action","msg","parsed","DisplayHelp","export","params","getCommandParameters","ChatRoomSendLocal","test","separatorIndex","trim","lastParam","CommandCombine","CommandHandler","undefined","content","parsedCount","last","cmd","_b","_a","_d","_c","ActivityModule","activityToAddDict","squint","act","Target","TargetSelf","MaxProgress","MaxProgressSelf","Prerequisite","desc","descString","eyeFlutter","tossHair","caressOfHair","pickUpHair","StimulationAction","sniffHair","wrinkleNose","prerequisiteDict","ItemHoodCovered","acting","Judgment","TargetItemHoodCovered","acted","ItemNoseCovered","InventoryPrerequisiteMessage","InventoryGroupIsBlocked","LoadActivity","Type","data","Dictionary","ActivityName","metadata","substitutions","ChatRoomMessageRunExtractors","Player","ActivityDictionaryText","Content","CommonStringSubstitute","Text","prereq","pushToActivity","activityDictAdd","activityDesc","ActivityDictionary","pendingActivity","actName","nameWithoutPrefix","substring","actTarget","actTargetSelf","addedValues","activity","ActivityFemale3DCG","ActivityFemale3DCGOrdering","ModuleLoader","LoadModules","generateModule","mList","b","pushToModules","module","Workflow_Log","CurrentScreen","response","AccountName"],"mappings":"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","x_google_ignoreList":[0]}